{"version":3,"sources":["/prj/user/asm/Asms.tonyu","/prj/user/asm/Codegen.tonyu","/prj/user/asm/FldIdx.tonyu","/prj/user/asm/MBoot.tonyu","/prj/user/asm/MemberScan.tonyu","/prj/user/gen/Buf.tonyu","/prj/user/gen/Context.tonyu","/prj/user/gen/StringBuilder.tonyu","/prj/user/gen/VisitorBase.tonyu","/prj/user/nodes/TNode.tonyu","/prj/user/nodes/Try.tonyu","/prj/user/nodes/TypeDecl.tonyu","/prj/user/nodes/TypeExpr.tonyu","/prj/user/nodes/VarDecl.tonyu","/prj/user/nodes/VarsDecl.tonyu","/prj/user/nodes/While.tonyu","/prj/user/spr/OutPat.tonyu","/prj/user/spr/RSprite.tonyu","/prj/user/spr/RSprPat.tonyu","/prj/user/ui/ExtLink.tonyu","/prj/user/ui/JQExpr.tonyu","/prj/user/ui/UITes.tonyu","/prj/user/asm/RActor.tonyu","/prj/user/asm/Visitor.tonyu","/prj/user/Enemy.tonyu","/prj/user/Main.tonyu","/prj/user/nodes/ArgList.tonyu","/prj/user/nodes/ArrayElem.tonyu","/prj/user/nodes/Break.tonyu","/prj/user/nodes/Call.tonyu","/prj/user/nodes/Case.tonyu","/prj/user/nodes/Catch.tonyu","/prj/user/nodes/Compound.tonyu","/prj/user/nodes/Continue.tonyu","/prj/user/nodes/Default.tonyu","/prj/user/nodes/Do.tonyu","/prj/user/nodes/Exprstmt.tonyu","/prj/user/nodes/Extends.tonyu","/prj/user/nodes/Finally.tonyu","/prj/user/nodes/For.tonyu","/prj/user/nodes/Forin.tonyu","/prj/user/nodes/FuncDecl.tonyu","/prj/user/nodes/FuncDeclHead.tonyu","/prj/user/nodes/FuncExprArg.tonyu","/prj/user/nodes/FuncExprHead.tonyu","/prj/user/nodes/If.tonyu","/prj/user/nodes/IfWait.tonyu","/prj/user/nodes/Includes.tonyu","/prj/user/nodes/Infix.tonyu","/prj/user/nodes/JsonElem.tonyu","/prj/user/nodes/Member.tonyu","/prj/user/nodes/NativeDecl.tonyu","/prj/user/nodes/NormalFor.tonyu","/prj/user/nodes/ObjlitArg.tonyu","/prj/user/nodes/ParamDecl.tonyu","/prj/user/nodes/ParamDecls.tonyu","/prj/user/nodes/Postfix.tonyu","/prj/user/nodes/Prefix.tonyu","/prj/user/nodes/Program.tonyu","/prj/user/nodes/Return.tonyu","/prj/user/nodes/Scall.tonyu","/prj/user/nodes/SetterDecl.tonyu","/prj/user/nodes/Switch.tonyu","/prj/user/nodes/Throw.tonyu","/prj/user/nodes/Trifix.tonyu","/prj/user/PBullet.tonyu","/prj/user/Player.tonyu","/prj/user/ui/HTMLUI.tonyu","/prj/user/asm/GenAsm.tonyu","/prj/user/nodes/FuncExpr.tonyu","/prj/user/nodes/NewExpr.tonyu","/prj/user/nodes/Objlit.tonyu","/prj/user/nodes/ParenExpr.tonyu","/prj/user/nodes/SuperExpr.tonyu","/prj/user/nodes/Token.tonyu","/prj/user/nodes/VarAccess.tonyu","/prj/user/nodes/Arylit.tonyu"],"names":[],"mappings":"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;;;;;SCAA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;;SCAA;SACA;;;;;;;SADA;SACA;;;;;;;;;;;;;;;;;;;;SCDA;SACA;SACA;SACA;;;;;;;SAHA;SACA;SACA;SACA;;;;;;;;;;;;;;;;;;;;SCHA;SACA;;;;;;;SADA;SACA;;;;;;;;;;;;;;;;;;;;SCDA;SACA;SACA;SACA;SACA;SACA;;;;;;;SALA;SACA;SACA;SACA;SACA;SACA;;;;;;;;;;;;;;;;;;;;SCLA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;;SCAA;SACA;;;;;;;SADA;SACA;;;;;;;;;;;;;;;;;;;;SCDA;SACA;SACA;;;;;;;SAFA;SACA;SACA;;;;;;;;;;;;;;;;;;;;SCFA;SACA;;;;;;;SADA;SACA;;;;;;;;;;;;;;;;;;;;SCDA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;;SCAA;SACA;SACA;;;;;;;SAFA;SACA;SACA;;;;;;;;;;;;;;;;;;;;SCFA;SACA;;;;;;;SADA;SACA;;;;;;;;;;;;;;;;;;;;SCDA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;;SCAA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;;SCAA;SACA;SACA;;;;;;;SAFA;SACA;SACA;;;;;;;;;;;;;;;;;;;;SCFA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;;SCAA;SACA;;;;;;;SADA;SACA;;;;;;;;;;;;;;;;;;;;SCDA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;;SCAA;SACA;;;;;;;SADA;SACA;;;;;;;;;;;;;;;;;;;;SCDA;SACA;;;;;;;SADA;SACA;;;;;;;;;;;;;;;;;;;;SCDA;SACA;SACA;;;;;;;SAFA;SACA;SACA;;;;;;;;;;;;;;;;;;;;SCFA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;;SCAA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;;SCAA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;;SCAA;SACA;SACA;;;;;;;SAFA;SACA;SACA;;;;;;;;;;;;;;;;;;;;SCFA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;;SCAA;SACA;SACA;SACA;SACA;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","sourcesContent":["extends TObject;\r\nlet data={'main'=`org 09000h\r\n\r\ninclude ctrl\r\ninclude math\r\ninclude debug\r\ninclude sub\r\ninclude mem\r\ninclude sp\r\ninclude vdp\r\ninclude th\r\n\r\n\r\n;===your code \r\n\r\nmain:\r\nld a,5\r\nlp:\r\ndec b\r\nshow a\r\niff nc,nx\r\njr lp\r\nnx:\r\n\r\nret\r\nend main`,\r\n    'math'=`include ctrl\r\n\r\n;16bit shifts\r\nmacro slhl\r\n sla l\r\n rl h\r\nendm\r\nmacro srahl\r\n sra h\r\n rr l\r\nendm\r\nmacro srlhl\r\n srl h\r\n rr l\r\nendm\r\nmacro slde\r\n sla e\r\n rl d\r\nendm\r\nmacro srade\r\n sra d\r\n rr e\r\nendm\r\nmacro srlde\r\n srl d\r\n rr e\r\nendm\r\nmacro slbc\r\n sla c\r\n rl b\r\nendm\r\nmacro srabc\r\n sra b\r\n rr c\r\nendm\r\nmacro srlbc\r\n srl b\r\n rr c\r\nendm\r\n\r\n\r\n; for xrnd\r\nmacro sldehl,n\r\n  local loop\r\n  ld b,n\r\n loop:\r\n  sla d\r\n  rl e\r\n  rl h\r\n  rl l\r\n  djnz loop\r\nendm\r\nmacro srdehl,n\r\n local loop\r\n ld b,n\r\n loop:\r\n  srl l\r\n  rr h\r\n  rr e\r\n  rr d\r\n djnz loop\r\nendm\r\n \r\nmacro xorrm,re,me\r\n  ld A,(me)\r\n  xor re\r\n  ld (me),a\r\nendm\r\n \r\nxrnd.a:\r\nproc \r\n local rhl,rde,rdhlde\r\n ; s[0] ^= s[0] << 13\r\n call rdhlde\r\n sldehl 13\r\n call wrtxor\r\n ; s[0] ^= s[0] >> 17\r\n call rdhlde\r\n srdehl 17\r\n call wrtxor\r\n ; s[0] ^= s[0] << 5;\r\n call rdhlde\r\n sldehl 5\r\n call wrtxor\r\n ret\r\n \r\n rdhlde:\r\n  ld hl,1234\r\n rhl:\r\n  ld de,5678\r\n rde:\r\n  ret\r\n \r\n wrtxor:\r\n  xorrm h,rhl-1\r\n  xorrm l,rhl-2\r\n  xorrm d,rde-1\r\n  xorrm e,rde-2\r\n  ret\r\nendp\r\n\r\nmacro cpde.a\r\n rst dcompr\r\nendm\r\n\r\n\r\nrnd:\r\n push af\r\n call rnd.a\r\n pop af\r\n ret\r\nrnd.a:\r\n ld de,07fffh\r\n call IDIV.a\r\n push hl\r\n call xrnd.a\r\n res 7,h\r\n ex de,hl\r\n pop hl\r\n inc hl\r\n call IDIV.a\r\n ret\r\nmacro subhl,rp\r\n and a\r\n sbc hl,rp\r\nendm\r\n\r\nabs:\r\n bit 7,h\r\n ret z\r\nneghl:\r\n ld de,0 \r\n ex de,hl \r\n subhl de\r\n ret\r\n\r\n `,\r\n    'bool'=`include math\r\ninclude ctrl\r\ntrue equ -1\r\nfalse equ 0\r\n\r\nmacro rethl,val,flg\r\n local tru\r\n if not nul flg\r\n  iff flg ,tru\r\n endif\r\n ld hl,val\r\n ret\r\n tru:\r\nendm\r\n\r\nhleqde:\r\n subhl de\r\n rethl true,z\r\n rethl false\r\n\r\nhlnede:\r\n subhl de\r\n rethl true,nz\r\n rethl false\r\n \r\nhlgtde:\r\n subhl de\r\n rethl false,z\r\n bit 7,h\r\n rethl true,z\r\n rethl false\r\n\r\nhlltde:\r\n subhl de\r\n bit 7,h\r\n rethl true,nz\r\n rethl false\r\n \r\nhlgede:\r\n subhl de\r\n rethl true,z\r\n bit 7,h\r\n rethl true,z\r\n rethl false\r\n\r\nhllede:\r\n subhl de\r\n rethl true,z\r\n bit 7,h\r\n rethl true,nz\r\n rethl false\r\n \r\nproc\r\nziffalse:\r\n local resa\r\n ld (resa-1),a\r\n call ziffalse.a\r\n ld A,0\r\n resa:\r\n ret\r\nziffalse.a:\r\n ld a,0\r\n cp h\r\n ret nz\r\n cp l\r\n ret\r\nendp\r\n\r\nmacro jpf,to\r\n call ziffalse\r\n jp z,to\r\nendm\r\n\r\nmacro andand,fls\r\n jpf fls\r\nendm\r\nmacro oror,tru\r\n call ziffalse\r\n jp nz,tru\r\nendm\r\n\r\nmacro flagtobool,fl\r\n local yes,skp\r\n jr fl, yes\r\n ld hl,false\r\n jr skp\r\n yes:\r\n ld hl,true\r\n skp: \r\nendm`,\r\n    'mem'=`include const\r\n;\r\nrdslt:\r\n ex de,hl\r\n rept 5\r\n srl d;page*2\r\n endm\r\n CALL RSLREG\r\n ld e,d\r\n rdslt1:\r\n  RRCA\r\n  dec e\r\n  jp nz,rdslt1\r\n AND    00000011B\r\n LD C,A;000000Pr\r\n LD B,0\r\n LD HL,EXPTBL\r\n ADD HL,BC\r\n LD C,A;000000Pr\r\n LD A,(HL)\r\n AND 80H;expand flag\r\n OR C\r\n LD C,A;e00000Pr\r\n rept 4;const\r\n INC HL\r\n endm\r\n LD A,(HL);exp reg\r\n ld e,d\r\n rdslt2:\r\n  srl a\r\n  dec e\r\n  jp nz,rdslt2\r\n;000000Ex\r\n sla a\r\n sla a\r\n ;    0000Ex00\r\n and  00001100b\r\n OR C;e000ExPr\r\n ret\r\nmemini:\r\n CALL RSLREG\r\n rept 4\r\n  RRCA\r\n endm\r\n AND    00000011B\r\n LD C,A;000000Pr\r\n LD B,0\r\n LD HL,EXPTBL\r\n ADD HL,BC\r\n LD C,A;000000Pr\r\n LD A,(HL)\r\n AND 80H;expand flag\r\n OR C\r\n LD C,A;e00000Pr\r\n rept 4;const\r\n INC HL\r\n endm\r\n LD A,(HL);exp reg\r\n rept 4; page*2\r\n srl a\r\n endm;000000Ex\r\n sla a\r\n sla a\r\n ;    0000Ex00\r\n and  00001100b\r\n OR C;e000ExPr\r\n LD Hl,04000H\r\n jp ENASLT\r\n\r\nmacro peekw ,regv,regm\r\n  local w\r\n  ld (w-2),regm\r\n  ld regv,(0)\r\n  w:\r\nendm\r\n\r\nmacro pokew ,regm,regv\r\n  local w\r\n  ld (w-2),regm\r\n  ld (0),regv\r\n  w:\r\nendm\r\nmacro movw,dst,src,rp\r\n if nul rp\r\n  push hl\r\n  movw dst,src,hl\r\n  pop hl\r\n else\r\n  ld rp,src\r\n  ld dst,rp\r\n endif \r\nendm\r\n\r\nmacro popa\r\n  ex (sp),hl\r\n  ld a,h\r\n  pop HL\r\nendm\r\n\r\nmacro pushall\r\n push af\r\n push bc\r\n push de\r\n push hl\r\nendm\r\nmacro popall\r\n pop hl\r\n pop de\r\n pop bc\r\n pop af\r\nendm\r\n \r\n\r\nmacro pushi, n,rp\r\n local rrr\r\n if nul rp\r\n  ld (rrr-2),hl\r\n  ld hl,n\r\n  push hl\r\n  ld hl,0\r\n  rrr:\r\n else\r\n  ld rp,n\r\n  push rp\r\n endif\r\nendm\r\nmacro const,n,reg\r\n ld (n-2),reg\r\nendm\r\nmacro ldconst,reg,n\r\n ld reg,0\r\n n:\r\nendm\r\nmacro peekconst,reg,n\r\n ld reg,(0)\r\n n:\r\nendm\r\n`,\r\n    'const'=`\r\nwrt equ 0a2h\r\ndcompr equ 0020H\r\nsp.ini equ 0dc00h\r\nstksize equ 512\r\n\r\nth.size equ 256\r\nth.count equ 16\r\nth.start equ th.end-th.size*th.count\r\nth.end equ sp.ini-stksize\r\n\r\nth.bottom equ 0\r\n\r\nspr.scale equ 1\r\nspr.xmax equ 256<<spr.scale\r\nspr.ymax equ 192<<spr.scale\r\n\r\nENASLT EQU 0024H\r\nRSLREG EQU 0138H\r\nEXPTBL EQU 0FCC1H\r\nSETWRT equ 0053H\r\nLDIRVM equ 005CH\r\nWRTVDP equ 0047H\r\nRG1SAV equ 0F3E0H\r\nRDVDP  equ 013EH\r\nSNSMAT.a equ 0141h\r\n\r\nCHGMOD equ 005FH\r\n\r\nIMULT.a equ 3193H;HL ← DE*HL\r\nIDIV.a equ 31E6H;HL ← DE/HL\r\nIMOD.a equ 323AH;HL ← DE mod HL (DE ← DE/HL) \r\n\r\nWRTPSG  equ 0093H\r\n\r\nnull equ 0`,\r\n    'ctrl'=`include const\r\nfreeze:\r\nhalt\r\njr freeze\r\n\r\nmacro for ,lbend\r\n ; uses a\r\n ; c: breaked\r\n proc\r\n  local s,lb\r\n  lb:\r\n  call dcompr\r\n  jp nc,lbend\r\n  push HL\r\n  push de\r\n  push bc\r\n  call s\r\n  pop bc\r\n  pop de\r\n  pop HL\r\n  jp c,lbend\r\n  add HL,bc\r\n  jr lb\r\n  s:\r\n endp\r\nendm\r\n\r\nmacro repti ,n,lbend\r\n proc\r\n  local s,lb, lbend2\r\n  push bc\r\n  ld b,n\r\n  lb:\r\n  push bc\r\n  call s\r\n  pop bc\r\n  jr c,lbend2\r\n  djnz lb\r\n  lbend2:\r\n  pop bc\r\n  jp lbend \r\n  s:\r\n endp\r\nendm\r\n\r\n\r\nmacro reptb ,lbend\r\n  local s,lb\r\n inc b\r\n djnz lb\r\n jp lbend\r\n lb:\r\n  push bc\r\n  call s\r\n  pop bc\r\n  jp c,lbend\r\n djnz lb\r\n jp lbend \r\n s:\r\nendm\r\n\r\n\r\n\r\nmacro callsva,pp\r\n local sva\r\n ld (sva-1),a\r\n call pp\r\n ld a,0\r\n sva:\r\nendm\r\nbcis0:\r\n callsva bcis0.a\r\n ret\r\nbcis0.a:\r\n ld a,b\r\n and a\r\n ret nz\r\n ld a,c\r\n and a\r\n ret\r\n\r\nmacro reptbc ,lbend\r\n local s,lb\r\n call bcis0\r\n jp z,lbend \r\n lb:\r\n  push bc\r\n  call s\r\n  pop bc\r\n  jp c,lbend\r\n  dec bc\r\n  call bcis0\r\n jr nz, lb\r\n jp lbend \r\n s:\r\nendm\r\n\r\n\r\niff.NZ equ 0\r\niff.Z  equ 1\r\niff.NC equ 2\r\niff.C  equ 3\r\n\r\nmacro iff,cnd,to\r\n local iff.\r\n if iff.##cnd eq iff.NZ\r\n  jr z,to\r\n endif\r\n if iff.##cnd eq iff.Z\r\n  jr nz,to\r\n endif\r\n if iff.##cnd eq iff.NC\r\n  jr c,to\r\n endif\r\n if iff.##cnd eq iff.C\r\n  jr nc,to\r\n endif\r\n ;jr cnd, skip\r\n ;jr to\r\n ;skip:\r\nendm\r\n\r\nmacro break,cnd\r\n if NUL cnd\r\n  scf\r\n  ret\r\n else\r\n  proc \r\n   local jj\r\n   iff cnd ,jj\r\n   break\r\n  jj:\r\n  endp\r\n endif\r\nendm\r\nmacro continue,cnd\r\n if NUL cnd \r\n  or a\r\n  ret\r\n else\r\n  proc \r\n   local jj\r\n   iff cnd,jj\r\n   continue\r\n  jj:\r\n  endp\r\n endif\r\nendm\r\n\r\n\r\nmacro djnzr,reg, j\r\n dec reg\r\n jr NZ,j\r\nendm\r\n\r\nmacro callhl\r\n local LCD\r\n ld (LCD-2),HL\r\n call LCD\r\n LCD:\r\nendm\r\n\r\nmacro stride,lim,to\r\n if (low $)<lim\r\n  exitm\r\n endif\r\n ds 256+to-(low $),0cdh\r\nendm`,\r\n    'th'=`include ctrl\r\ninclude sp\r\ninclude vdp\r\ninclude mem\r\ninclude math\r\ninclude debug\r\n\r\nth.ofs.stp equ 0\r\nth.ofs.sp equ th.ofs.stp+1\r\nth.st.blank equ 0c9h\r\nth.st.active equ 31h\r\n\r\nmacro th.for,lb\r\n ld HL,th.start\r\n ld de,th.end\r\n ld bc,th.size\r\n for lb\r\nendm\r\n\r\nmacro th.new.range,st,en\r\n ld bc,st\r\n ld(th.new.start),bc\r\n ld bc,en\r\n ld(th.new.end),bc\r\nendm\r\n\r\nth.new:\r\n; nc for alloc fail\r\nproc \r\n local lbend\r\n db 21h\r\n th.new.start:\r\n dw th.start\r\n db 11h\r\n th.new.end:\r\n dw th.end\r\n ld bc,th.size\r\n for lbend\r\n  ; TODO bottom\r\n  ld  a,(HL)\r\n  cp th.st.blank\r\n  break z\r\n  continue\r\n lbend:\r\n ret nc\r\n ld (HL),31h\r\n inc HL\r\n ld (HL),0\r\n ld a,h\r\n inc a\r\n inc HL\r\n ld (hl),a\r\n inc HL\r\n ld (HL),0c9h\r\n ld l,th.bottom\r\n scf\r\n ret\r\nendp\r\n\r\nth.init:\r\nproc\r\n local lbend\r\n th.for lbend\r\n  ld (HL),th.st.blank\r\n  continue\r\n lbend:\r\n ld HL,0fd9fh\r\n ld (hl),0c9h\r\n call susint\r\n ret\r\nendp\r\n\r\nth.stepall:\r\n th.for thnx\r\n ;todo bottom\r\n  ld (th.cur),hl\r\n  ld a,(hl)\r\n  cp 0c9h\r\n  continue z\r\n  call th.step\r\n  continue\r\n thnx:\r\n ret\r\n\r\nmacro thblock\r\n  local s\r\n  LD sp, s\r\n  ret\r\n  ds th.size-4\r\n  s:\r\nendm\r\nmacro thblocks\r\n ds 256-(low $),0cdh\r\n th.start:\r\n rept th.count\r\n ds th.size\r\n endm\r\n th.end: \r\nendm\r\n\r\nth.step:\r\n sp2mem adrssp+1\r\n ld HL,(th.cur)\r\n ld l,th.ofs.stp\r\n ;call susint\r\n jp (hl)\r\nth.yield:\r\n ld hl,(th.cur)\r\n ld l,th.ofs.sp\r\n sp2mem\r\n adrssp:\r\n ld sp,0\r\n jp doint\r\n\r\nth.term:\r\n ld hl,(th.cur)\r\n ld (hl),th.st.blank\r\n jr adrssp\r\n\r\nmacro th.iniproc, ad\r\n ld bc,th.term\r\n call th.push\r\n ld bc,ad\r\n call th.push\r\nendm\r\n \r\nmacro th.with.do, to\r\n local pr\r\n th.with pr\r\n jr to\r\n pr:\r\nendm \r\n\r\nmacro th.with.dsthl\r\n ld (th.jpdest-2),hl\r\nendm\r\nmacro th.with,pr\r\n movw (th.jpdest-2), pr\r\n call th.with.s\r\nendm\r\nmacro th.with.ret\r\n jp th.ewith\r\nendm\r\n\r\nth.with.s:\r\n sp2mem th.wrssp-2\r\n ld l, th.ofs.sp\r\n ld (th.updsp-2),hl\r\n mem2sp\r\n jp 0\r\n th.jpdest:\r\nth.ewith:\r\n ld (0),sp\r\n th.updsp:\r\n ld sp,0\r\n th.wrssp:\r\n ret\r\n \r\n\r\n \r\n \r\nth.push:\r\n ;push bc to thread hl\r\n th.with tpsbc\r\n ret\r\n tpsbc:\r\n  push bc\r\n  th.with.ret\r\n\r\n\r\nth.pushes:\r\nproc  \r\n local lp,rssp\r\n ;len bc  \r\n ;thread de  \r\n ;src hl\r\n ex de,hl\r\n th.with rssp\r\n ret\r\n rssp: \r\n  ex de,hl\r\n  lp:\r\n   ld e,(hl)\r\n   inc hl\r\n   ld d,(hl)\r\n   inc hl\r\n   push de\r\n  djnz lp\r\n  th.with.ret\r\nendp\r\n \r\n \r\n\r\nth.cur:\r\n dw 0\r\n\r\nth.loop:\r\n db 0cdh\r\n h.thent:\r\n dw th.nop\r\n ld a,(timecnt)\r\n push af\r\n call th.stepall\r\n db 0cdh\r\n h.thlop:\r\n dw th.nop\r\n pop af\r\n bwat:\r\n  ld hl,timecnt\r\n  cp (hl)\r\n  jr nz,bbwat\r\n  push af\r\n  call doint\r\n  pop af\r\n  jr bwat\r\n bbwat:\r\n \r\n jr th.loop\r\nth.nop:\r\n ret\r\n\r\n\r\nmacro th.pushi, val\r\n ld bc,val\r\n call th.push\r\nendm\r\n\r\n`,\r\n    'sub'=`\r\nmacro getarg ,n\r\nld l,(ix+2+n*2)\r\nld h,(ix+3+n*2)\r\nendm\r\n\r\nmacro setlcl ,n\r\nld (IX-(n*2-1)),h\r\nld (ix-n*2),l\r\nendm\r\n\r\nmacro getlcl ,n\r\nld h,(IX-(n*2-1))\r\nld l,(ix-n*2)\r\nendm\r\n\r\nmacro pusharg ,n\r\ngetarg n\r\npush HL\r\nendm\r\n\r\nmacro pushlcl ,n\r\ngetlcl n\r\npush HL\r\nendm\r\n\r\nmacro enter ,locals\r\npush ix\r\nld ix,0\r\nadd ix,sp\r\nrept locals\r\n push HL\r\nendm\r\nendm\r\n\r\nmacro pops ,n\r\nrept n*2\r\n inc sp\r\nendm\r\nendm\r\n\r\nmacro exit\r\nld sp,ix\r\npop ix\r\nret\r\nendm\r\n\r\nmacro run ,n,args\r\ncall n\r\npops args\r\nendm\r\n\r\n`,\r\n    'debug'=`include math\r\n;debug\r\nmacro show,reg\r\n ld (hexval+1),reg\r\n call showhex\r\nendm\r\nmacro showm ,ad\r\n push hl\r\n ld HL,(ad)\r\n show HL\r\n pop HL\r\nendm\r\nmacro showlb,lb\r\n push hl\r\n ld hl,lb\r\n ld (hexval+1),hl\r\n call showhex\r\n pop hl\r\nendm\r\nshowhex:\r\nproc\r\n local loop\r\n push af\r\n push bc\r\n push HL\r\n hexval:\r\n ld hl,0\r\n ld b,4\r\n loop:\r\n  xor a\r\n  rept 4\r\n   slhl\r\n   rla\r\n  endm\r\n  call showhex1\r\n djnz loop\r\n ld a,32\r\n call wrt\r\n pop HL\r\n pop bc\r\n pop af\r\n ret\r\nendp\r\nshowhex1:\r\nproc\r\n local els\r\n cp 10\r\n jp nc, els\r\n add a,48\r\n jp wrt\r\n els:\r\n add a,65-10\r\n jp wrt\r\nendp\r\nabort:\r\n call wrt\r\n db 018h,0feh\r\nret\r\n\r\nmacro trace,v\r\n if not nul v\r\n  push af\r\n  ld a,v\r\n  ld (trad),a\r\n  pop af\r\n endif\r\n call trace.s\r\nendm\r\ntrace.s:\r\n push af\r\n push hl\r\n ld a,(trad)\r\n ld hl,1ae0h\r\n call wrt\r\n call 4dh\r\n inc a\r\n ld (trad),a\r\n ld a,32\r\n call wrt \r\n pop hl\r\n pop af\r\n ret\r\ntrad:\r\n db 65\r\n\r\nshowz:\r\n push af\r\n jr z,showz.s\r\n ld a,\"N\"\r\n call wrt\r\n showz.s:\r\n ld a,\"Z\"\r\n call wrt\r\n ld a,32\r\n call wrt\r\n pop af\r\n ret\r\n \r\n\r\nshowc:\r\n push af\r\n jr c,showc.s\r\n ld a,\"N\"\r\n call wrt\r\n showc.s:\r\n ld a,\"C\"\r\n call wrt\r\n ld a,32\r\n call wrt\r\n pop af\r\n ret\r\n \r\n\r\n\r\n\r\n\r\n\r\nmacro unreach, mesg\r\n trace mesg\r\n dw 0x18,0xfe\r\nendm\r\nmacro head, lb\r\n unreach lb\r\n lb:\r\nendm`,\r\n    'sp'=`include mem\r\ninclude debug\r\nmacro sp.get\r\n ld HL,0\r\n ADD hl, sp\r\nendm\r\nmacro sp.set\r\n ld sp,hl\r\nendm\r\nmacro mem2sp,ad\r\n local rs\r\n if nul ad\r\n  ld (rs-2),hl\r\n  ld sp,(0)\r\n  rs:\r\n else\r\n  ld sp,(ad)\r\n endif\r\nendm\r\nmacro sp2mem,ad\r\n local spad\r\n if nul ad\r\n  ld (spad-2),hl\r\n  ld (0),sp\r\n  spad:\r\n else\r\n  ld (ad),sp\r\n endif\r\nendm\r\n\r\nmacro showsp\r\n ld (sptmp),sp\r\n showm sptmp\r\nendm\r\nsptmp:\r\ndw 0\r\nmacro showstk\r\n showsp\r\n ld (sva),a\r\n ld a,\":\"\r\n call wrt\r\n ld a,(sva)\r\n ex (sp),hl\r\n show hl\r\n ex (sp),hl\r\nendm\r\nsva: db 0`,\r\n    'oop'=`include mem\r\ninclude th\r\ninclude assert\r\n\r\n;a2 a1  oldpc oldix lcl1 lcl2\r\nargidx equ 2\r\nmacro getarg ,n\r\n ld l,(ix+argidx+n*2)\r\n ld h,(ix+argidx+n*2+1)\r\nendm\r\n\r\nmacro setlcl ,n\r\n ld (IX-(n*2-1)),h\r\n ld (ix-n*2),l\r\nendm\r\n\r\nmacro getlcl ,n\r\n ld h,(IX-(n*2-1))\r\n ld l,(ix-n*2)\r\nendm\r\n\r\nmacro addarg\r\n push hl\r\n; hl=arg  stktp=af\r\n;ex (sp),hl\r\n;ld a,h\r\n;push af\r\nendm\r\n\r\n\r\n\r\nmacro pusharg ,n\r\n getarg n\r\n push HL\r\nendm\r\n\r\nmacro pushlcl ,n\r\n getlcl n\r\n push HL\r\nendm\r\n\r\nmacro enter ,locals\r\n push ix\r\n ld ix,0\r\n add ix,sp\r\n rept locals\r\n  push HL\r\n endm\r\nendm\r\n\r\nmacro pops ,n\r\n rept n*2\r\n  inc sp\r\n endm\r\nendm\r\n\r\n\r\nmacro exit,n\r\n ld sp,ix\r\n pop ix\r\n if n!=0\r\n  exx\r\n  pop de\r\n  rept n\r\n   pop bc\r\n  endm\r\n  push de\r\n  exx\r\n endif\r\n ret\r\nendm\r\n\r\nmacro pushthis\r\n getthis\r\n push af\r\nendm\r\nmacro popthis\r\n popa\r\n ld (this),a\r\nendm\r\n\r\n\r\nmacro invoketg.a,fld,args\r\n; pushthis before arg push\r\n; hl=target \r\n ld a,h\r\n ld (this),a\r\n getfld fld\r\n callhl\r\n; pops args\r\n; popthis after \r\nendm\r\n\r\nmacro invoke,fld\r\n getfld fld\r\n callhl\r\n; pops args\r\n getthis\r\nendm\r\n\r\nmacro getfld, n\r\n local ad\r\n ld (ad-1),a\r\n ld hl,(n)\r\n ad:\r\nendm\r\n\r\nmacro setfld, n\r\n local ad\r\n ld (ad-1),a\r\n ld (n),hl\r\n ad:\r\nendm\r\n\r\nmacro getfldtg,n\r\n;hl=tg\r\n ld l,n\r\n peekw hl,hl\r\nendm\r\n\r\nmacro setfldtg,n\r\n; stk=val hl=tg\r\n ld l,n\r\n pop de\r\n pokew hl,de\r\nendm\r\n\r\nmacro getfldtg, n\r\n; hl=target\r\n ld d,h\r\n ld e,n\r\n peekw HL,de\r\nendm\r\n\r\nmacro curth2this\r\n ld a,(th.cur+1)\r\n ld (this),a\r\nendm\r\nmacro getthis\r\n ld a,(this)\r\nendm\r\n\r\nmacro new,Class,flds,st,en\r\n if nul st\r\n  th.new.range th.start, th.end\r\n else\r\n  th.new.range st, en\r\n endif\r\n pushi flds, bc\r\n pushi Class, bc\r\n call o.new\r\nendm\r\n\r\nhead o.new\r\nproc\r\n local retad,svthis,svsp,loop,lpend, w,allocfail,finally,lp2,lp2end\r\n ; {val .f} n &initbl\r\n pop hl\r\n ld (retad-2),hl\r\n pop hl;&initbl\r\n th.with.dsthl \r\n ld (svthis-1),a\r\n call th.new\r\n jr nc, allocfail\r\n push hl\r\n call th.with.s\r\n pop hl\r\n ld a,h\r\n pop bc\r\n inc c\r\n loop:\r\n  dec c\r\n  jr z,lpend\r\n  pop hl; .f\r\n  ld h,a\r\n  ld (w-2),hl\r\n  pop hl; val\r\n  ld (w),hl\r\n  w:\r\n jr loop\r\n lpend:\r\n ld h,a\r\n finally:\r\n  ld a,0\r\n  svthis:\r\n  jp 0\r\n  retad:\r\n allocfail:\r\n  pop bc\r\n  ld b,c\r\n  inc c\r\n  lp2:\r\n   dec c\r\n   jr z, lp2end\r\n   pop hl\r\n   pop hl\r\n  jr lp2\r\n  lp2end:\r\n  ld hl,0\r\n  jr finally\r\nendp\r\nunreach 0\r\n\r\nmacro new.arg, n, v\r\n if not nul v\r\n  ld hl,v\r\n endif\r\n push hl\r\n pushi n,bc\r\nendm\r\n \r\nmacro o.assert.eq,fld, v\r\n local aa\r\n assert.do aa\r\n  getfld fld\r\n  assert.eq v\r\n  ret\r\n aa:\r\nendm\r\n\r\nthis:\r\ndb 0\r\n\r\nmacro fld.def,n\r\n n equ fldidx\r\n fldidx:defl fldidx-2\r\nendm\r\nmacro class,Class,super\r\n unreach \"c\"\r\n dw super\r\n fldidx:defl 254\r\n Class:\r\n  fld .class,Class\r\nendm\r\nmacro fld.bottom,Class\r\n if defined Class##.bottom \r\n  if Class##.bottom ne fldidx\r\n   .error bottom ne fldidx\r\n  endif\r\n else\r\n Class##.bottom:defl fldidx\r\n endif\r\nendm \r\nmacro fld,n,v\r\n if defined n\r\n  if n ne fldidx\r\n   .error n ne fldidx\r\n  else \r\n   fldidx:defl fldidx-2\r\n  endif\r\n else\r\n  fld.def n\r\n endif\r\n pushi v,bc\r\nendm\r\nmacro unuse\r\n fldidx:defl fldidx-2\r\n pushi 0,bc\r\nendm\r\nmacro meth,Class,n\r\n fld .##n, Class##.##n\r\nendm\r\nmacro met2,Class,n\r\n fld n, Class##n\r\nendm\r\n\r\nclass Object,null\r\n fld .main,null\r\n fld.bottom Object\r\n\r\n\r\n\r\no.iniattr:\r\nproc\r\n local aa\r\n th.with aa\r\n ret\r\n aa:\r\n pushi th.term,bc\r\n th.with.ret\r\nendp\r\n \r\nhead o.boot\r\n curth2this\r\n invoke .main,0\r\n ret\r\n\r\n\r\nmacro yield\r\n pushthis\r\n push ix\r\n call th.yield\r\n pop ix\r\n popthis\r\nendm\r\n\r\nmacro def,n,args,lcls\r\nhead n\r\n def.args:defl args\r\n def.locals:defl lcls\r\n if args>0 or lcls>0\r\n  enter lcls\r\n endif\r\nendm\r\nmacro enddef\r\n if def.args>0 or def.locals>0\r\n  exit def.args\r\n else\r\n  ret\r\n endif\r\nendm\r\n\r\nhead isobj.a\r\n ;hl=obj?\r\n ;cy=true\r\n ld a,h\r\n cp high th.start\r\n jr c,notobj\r\n cp high th.end\r\n jr nc,notobj\r\n scf\r\n ret\r\n notobj:\r\n and a\r\n ret\r\nhead instanceof\r\n ; a=this de=Class\r\n ; z: true\r\n getfld .class\r\n jp is.subclass.a\r\nhead get.superclass\r\n ; hl=Class\r\n dec hl\r\n dec hl\r\n peekw hl,hl\r\n ret\r\nhead is.subclass.a\r\nproc \r\n local top\r\n ; hl=Subclass\r\n ; de=Superclass\r\n ; z:true\r\n top:\r\n cpde.a 0\r\n ret z\r\n call get.superclass\r\n push de\r\n ld de,null\r\n cpde.a 0\r\n pop de\r\n jr nz,top\r\n cpde.a 0\r\n ret \r\nendp\r\n `,\r\n    'spr'=`include const\r\ninclude th\r\ninclude mem\r\ninclude oop\r\n\r\nclass Sprite,Object\r\n fld .main, 0\r\n fld.bottom Object\r\n fld .x, 100\r\n fld .y, 100\r\n fld .p, 0\r\n fld .c, 2\r\n fld.bottom Sprite\r\n\r\nmacro outwrt\r\n  out (98h),a\r\nendm\r\n\r\n\r\nmacro spr.unscale\r\n rept spr.scale\r\n  srlde\r\n endm\r\nendm\r\nspr.puts:\r\n ld hl ,1b00h\r\n call SETWRT\r\n th.for sprl\r\n  ld L,.y\r\n  peekw de,hl\r\n  spr.unscale 0\r\n  LD A,E;y\r\n  outwrt 0\r\n  ld L,.x\r\n  peekw de,hl\r\n  spr.unscale 0\r\n  LD A,E;x\r\n  outwrt 0\r\n  ld l,.p\r\n  LD A,(hl);p*4\r\n  sla a\r\n  sla a\r\n  outwrt 0\r\n  ld l,.c\r\n  LD A,(hl);c\r\n  outwrt 0\r\n  continue\r\n sprl:\r\nret\r\n \r\n \r\n `,\r\n    'sprpat'=`include const\r\n\r\n;aaa\r\nspr.inipat:\r\n ld de,3800h\r\n ld hl,spr.pat\r\n ld bc,128\r\n jp LDIRVM\r\nspr.pat:\r\n; --- Slot 0 cat fstand\r\n; color 9\r\nDB $0C,$0E,$0F,$4F,$3D,$1D,$7F,$1B\r\nDB $0C,$3F,$7F,$7F,$6F,$0F,$06,$0C\r\nDB $18,$38,$F8,$F9,$DE,$DC,$7F,$6C\r\nDB $98,$FC,$FE,$FE,$F6,$F0,$60,$70\r\n; \r\n; --- Slot 1 cat fwalk1\r\n; color 9\r\nDB $0C,$0E,$0F,$4F,$3D,$1D,$7F,$1B\r\nDB $0C,$3F,$7F,$7F,$EF,$EF,$06,$06\r\nDB $18,$38,$F8,$F9,$DE,$DC,$7F,$6C\r\nDB $98,$FC,$FE,$FE,$D4,$78,$F0,$00\r\n; \r\n; --- Slot 2 cat fwalk2\r\n; color 9\r\nDB $18,$1C,$1F,$9F,$7B,$3B,$FE,$36\r\nDB $19,$3F,$7F,$7F,$2B,$1E,$0F,$00\r\nDB $30,$70,$F0,$F2,$BC,$B8,$FE,$D8\r\nDB $30,$FC,$FE,$FE,$F7,$F7,$60,$60\r\n; \r\n; --- Slot 3 cat omg\r\n; color 9\r\nDB $2C,$8E,$0F,$4B,$3D,$11,$7F,$1D\r\nDB $CA,$FF,$7F,$3F,$15,$1F,$0E,$00\r\nDB $1C,$39,$F8,$E9,$DE,$C4,$7F,$5C\r\nDB $AB,$FF,$FF,$FE,$AC,$F8,$70,$00\r\n\r\nds 60*32\r\n`,\r\n    'tnu'=`\r\ninclude spr\r\ninclude bool\r\ninclude key\r\n\r\n;.onUpdate equ .c-2\r\n;.update equ .onUpdate-2\r\n;.screenOut equ .update-2\r\n;.die equ .screenOut-2\r\n;.updateEx equ .die-2\r\n\r\nmacro end.const,_d\r\n pushi RActor.wait,bc\r\n pushi o.boot,bc\r\n th.with.ret \r\nendm\r\n\r\nmacro RActor.noovr,Class\r\n meth Class,main\r\n fld.bottom Object\r\n fld .x, 0\r\n fld .y, -1024\r\n fld .p, 0\r\n fld .c, 3\r\n fld.bottom Sprite\r\n meth RActor,onUpdate\r\n meth RActor,update\r\n meth RActor,screenOut \r\n meth RActor,die\r\n meth RActor,updateEx\r\n meth RActor,crashTo\r\n fld.bottom RActor\r\nendm\r\n\r\nclass RActor,Sprite\r\n RActor.noovr RActor\r\n end.const 0\r\nRActor.main:\r\n enter 0\r\n exit 0\r\nRActor.update:\r\n invoke .onUpdate\r\n yield\r\n ret \r\nRActor.onUpdate:\r\n ret\r\nRActor.screenOut:\r\nproc\r\n local true\r\n getfld .x\r\n bit 1,h\r\n jr nz, true\r\n getfld .y\r\n ld de,192*2\r\n cpde.a\r\n getthis\r\n jr nc,true\r\n ld hl,0\r\n xor a\r\n ret\r\n true:\r\n ld hl,1\r\n scf\r\n ret\r\nendp\r\nRActor.wait:\r\nproc\r\n local lbl\r\n lbl:\r\n invoke .update\r\n jr lbl\r\nendp\r\ndef RActor.die,0,0\r\n ld h,a\r\n ld l,th.ofs.stp\r\n ld (hl),th.st.blank\r\n ld hl, 0\r\n setfld .c\r\nenddef\r\n\r\ndef RActor.updateEx,1,0\r\nproc \r\n local n\r\n; enter 0\r\n getarg 1\r\n ld b,h\r\n ld c,l\r\n reptbc n\r\n  invoke .update\r\n  continue\r\n n:\r\nendp\r\nenddef\r\n\r\ncrashTo.size equ 8<<spr.scale\r\n\r\nproc\r\n local gx,gy,gtx,gty\r\n local endc,cr1\r\n local fe,kls\r\n\r\nmacro crashTo.setXY\r\n getfld .x\r\n const gx,hl\r\n getfld .y\r\n const gy,hl\r\nendm\r\n\r\n\r\ndef RActor.crashTo,1,0\r\n crashTo.setXY 0\r\n getarg 1\r\n const kls,hl\r\n call isobj.a\r\n jr c, cr1\r\n  ld hl, th.start\r\n  ld de, th.end\r\n  call crashToC\r\n  jr endc\r\n cr1:\r\n  getthis 0\r\n  call crashTo1\r\n  flagtobool c\r\n endc:\r\nenddef\r\n\r\nhead crashToC\r\n ;before:\r\n ; crashTo.setXY 0\r\n ; const kls,Class\r\n ;params:\r\n ; hl start\r\n ; de end\r\n ld bc,th.size\r\n for fe\r\n  ; skip blank\r\n  ; TODO bottom\r\n  ld a,(HL)\r\n  cp th.st.blank\r\n  continue z\r\n  ; skip hl==this\r\n  getthis 0\r\n  cp h\r\n  continue z\r\n  ; skip is not Class\r\n  push hl\r\n  ld a,h\r\n  ldconst de,kls\r\n  call instanceof\r\n  pop hl\r\n  continue nz\r\n  ; do crashTo1\r\n  getthis 0\r\n  call crashTo1\r\n  break c\r\n  continue\r\n fe:\r\n getthis 0\r\n ret c\r\n ld hl,null\r\n ret\r\n\r\nhead crashTo1\r\n ;hl=tg\r\n ;cy:true\r\n ;hl is used\r\n push af\r\n ld a,h\r\n ld (gtx-1),a\r\n ld (gty-1),a\r\n pop af\r\n ld hl,(.x)\r\n gtx:\r\n ldconst bc,gx\r\n subhl bc\r\n call abs\r\n ld bc,crashTo.size\r\n subhl bc\r\n ret nc\r\n\r\n ld hl,(.y)\r\n gty:\r\n ldconst bc,gy\r\n subhl bc\r\n call abs\r\n ld bc,crashTo.size\r\n subhl bc\r\n ret\r\n\r\nendp\r\n\r\n\r\nmacro tnu.run,Main\r\n ld sp,sp.ini\r\n call screen1\r\n \r\n showsp\r\n showlb endusr\r\n call spr.inipat\r\n\r\n ld hl,th.start\r\n ld (hl),0cdh\r\n ld de,th.start+1\r\n ld bc,th.size*th.count-1\r\n ldir\r\n \r\n call th.init\r\n ;call mus.ini\r\n new Main, 0\r\n movw (h.thlop),spr.puts\r\n movw (h.thent),keyall\r\n jp th.loop\r\nendm\r\n\r\n;aaaa`,\r\n    'key'=`include debug\r\n\r\nhead keyall\r\nproc\r\n;show hl\r\n local lp\r\n ld hl,keymat1\r\n ld de,keymat2\r\n ld bc,11\r\n ldir\r\n ld a,0\r\n ld hl,keymat1\r\n lp:\r\n push af\r\n call SNSMAT.a\r\n xor 255\r\n ld (hl),a\r\n pop af\r\n inc hl\r\n inc a\r\n cp 11\r\n jr c,lp\r\n ret\r\nendp\r\n\r\nkeymat1:\r\nds 11\r\nkeymat2:\r\nds 11\r\n\r\nhead getkey.a\r\nproc\r\nlocal chkmat\r\nex de,hl\r\nld hl,keymat1\r\ncall chkmat\r\nld hl,0\r\nret z\r\nld hl,keymat2\r\ncall chkmat\r\nld hl,1\r\nret z\r\ninc hl\r\nret\r\n\r\nhead chkmat\r\npush de\r\nld a,d\r\nld d,0\r\nadd hl,de\r\nand (hl)\r\npop de\r\nret\r\n\r\nhead getkey\r\npush af\r\ncall getkey.a\r\npop af\r\nret\r\n\r\nendp`,\r\n    'maze'=`org 09000h\r\njp main\r\ninclude const\r\ninclude ctrl\r\ninclude math\r\ninclude debug\r\ninclude sub\r\ninclude mem\r\ninclude th\r\n\r\n;===your code \r\n\r\nmain:\r\n\r\ncall memini\r\ncall th.init\r\n\r\ncall mkwall\r\n\r\nld HL,1800h+33*3\r\nld de,1800h+33*9\r\nld bc,33*2\r\nfor thgl\r\npush HL \r\ncall th.new\r\npop bc\r\ncall th.push\r\nth.iniproc mkmz\r\ncontinue\r\nthgl:\r\n\r\njp th.loop\r\n\r\nmkwall:\r\nld b,11\r\nld a,35\r\nld de,32-13\r\nld HL,01800h+66\r\nreptb mkrow\r\n ld b,13\r\n reptb mkcol\r\n  call 4dh\r\n  inc hl\r\n  continue\r\n mkcol:\r\n add HL,de \r\n continue\r\nmkrow:\r\nret\r\n\r\n\r\n\r\nvectbl:\r\ndw 1\r\ndw 32\r\ndw -1\r\ndw -32\r\n\r\nrnddir:\r\ncall xrnd\r\nld a,l\r\nand 6\r\nld l,a\r\nld h,0\r\nret\r\n\r\ndir2vec:\r\nenter 0\r\ngetarg 1\r\nex de,hl\r\nld hl,vectbl\r\nadd HL,de\r\npeekw de,hl\r\nex de,hl\r\nexit\r\n\r\nmkmz:\r\nenter 2\r\ncall rnddir\r\nsetlcl 1\r\n;call chkdir\r\nld b,4\r\n\r\nmklp:\r\npush bc\r\nyield\r\npushlcl 1\r\nrun dir2vec,1\r\nsetlcl 2\r\n;call chk\r\npush Hl\r\npusharg 1\r\nrun diggable,2\r\n\r\njr nz,skipdig\r\n\r\npushlcl 2\r\npusharg 1\r\nrun dig,2\r\n\r\npush HL\r\nrun mkmz,1\r\n\r\nskipdig:\r\n\r\ngetlcl 1\r\ninc HL\r\ninc HL\r\nld a,l\r\nand 6\r\nld l,a\r\nsetlcl 1\r\n\r\n\r\npop bc\r\ndjnz mklp\r\nexit\r\n\r\ndiggable:\r\nenter 0\r\ngetarg 2\r\nex de,hl\r\ngetarg 1\r\nadd hl,de\r\nadd hl,de\r\ncall 04ah\r\ncp 35\r\nexit\r\n\r\ndig:\r\nenter 0\r\ngetarg 2\r\nex de,hl\r\ngetarg 1\r\nld a,32\r\ncall 04dh\r\nadd hl,de\r\ncall 04dh\r\nadd hl,de\r\ncall 04dh\r\nexit\r\n\r\n\r\n\r\n`,\r\n    't1'=`org 09000h\r\njp main\r\ninclude const\r\ninclude ctrl\r\ninclude math\r\ninclude debug\r\ninclude sub\r\ninclude mem\r\ninclude tnu\r\ninclude sp\r\n\r\n;===your code \r\n\r\nright:dw 0\r\n\r\nmain:\r\ntnu.run Main\r\ndef Main.main,0,0\r\nnew.arg .vx,1\r\nnew.arg .vy,0\r\nnew.arg .x,0\r\nnew.arg .y,100\r\nnew Cat,4\r\n\r\nnew.arg .x,100\r\nnew.arg .y,100\r\nnew Target,2\r\n\r\nld (right),hl\r\nld a,h\r\nld de,RActor\r\ncall instanceof\r\ncall showz\r\n\r\nld a,(right+1)\r\nld de,Target\r\ncall instanceof\r\ncall showz\r\n\r\nld a,(right+1)\r\nld de,Cat\r\ncall instanceof\r\ncall showz\r\n\r\n\r\nld hl,1\r\nsetfld .c\r\nenddef 0\r\n\r\nclass Main,RActor\r\n RActor.noovr Main\r\n end.const 0\r\nclass Target,RActor\r\n RActor.noovr Target\r\n met2 Target,.push\r\n end.const 0\r\ndef Target.main,0,0\r\nenddef\r\nclass Cat,RActor\r\n RActor.noovr Cat\r\n fld .vy, 0\r\n fld .vx, 0\r\n fld.bottom Cat\r\n end.const 0\r\ndef Cat.main,0,0\r\n blp:\r\n  ld hl,0108h\r\n  call getkey\r\n  jpf nomov\r\n  getthis\r\n  ;x+=vx\r\n  getfld .x\r\n  ex de, hl\r\n  getfld .vx\r\n  add hl,de\r\n  setfld .x\r\n  nomov:\r\n  ; y+=vy\r\n  getfld .y\r\n  ex de, hl\r\n  getfld .vy\r\n  add hl,de\r\n  setfld .y\r\n  ld hl,(right)\r\n  push hl\r\n  invoke .crashTo\r\n  jpf cr\r\n   ; r.x+=10\r\n   ld hl,(right)\r\n   getfldtg .x\r\n   ld de,10\r\n   add hl,de\r\n   push hl\r\n   ld hl,(right)\r\n   setfldtg .x\r\n   ; r.push()\r\n   pushthis 0\r\n   ld hl,(right)\r\n   invoketg.a .push\r\n   popthis 0\r\n  cr:\r\n  invoke .update\r\n jp blp\r\nenddef\r\n; test t1\r\ndef Target.push,0,0\r\n ld hl,3\r\n setfld .p\r\n repti 30,pse\r\n  getfld .x\r\n  inc hl\r\n  setfld .x\r\n  invoke .update\r\n  continue\r\n pse:\r\n ld hl,0\r\n setfld .p\r\nenddef\r\n\r\nendusr: \r\ninclude sprpat\r\n\r\nend main\r\nhttps://msxpen.com/codes/-N6DDfMvZq9aUeJ9JLpN\r\nhttps://msxpen.com/codes/-N6QGYk-rr5iDuTtHpF7`,\r\n    't2'=`org 09000h\r\n\r\ninclude tnu\r\ninclude sprpat\r\n;===your code \r\n\r\nmain:\r\ncall th.init\r\ncall spr.inipat\r\n\r\npushi 7\r\npushi .c\r\nnew Cat1, 1\r\nshow hl\r\n\r\n\r\npushi 7\r\npushi .x\r\nnew Cat1, 1\r\nshow hl\r\n\r\nmovw (h.thlop),spr.puts\r\njp th.loop\r\n\r\ndw RActor\r\nCat1:\r\n pushi Cat1.main\r\n pushi 100,bc \r\n pushi 110,bc\r\n pushi 0,bc\r\n pushi 3,bc\r\n pushi Cat1.onUpdate,bc\r\n pushi RActor.update,bc\r\n pushi RActor.screenOut,bc\r\n pushi RActor.die,bc\r\n end.const\r\nCat1.main:\r\n olp:\r\n  getthis\r\n  invoke .screenOut,0\r\n  jr c, dwn2\r\n  getthis\r\n  getfld .x\r\n  inc hl\r\n  inc hl\r\n  setfld .x\r\n  invoke .update,0\r\n jr olp\r\n dwn2:\r\n  ld hl,512-32\r\n  setfld .x\r\n dwn:\r\n  curth2this\r\n  getfld .y\r\n  inc hl\r\n  setfld .y\r\n  invoke .update,0\r\n jr dwn\r\nCat1.onUpdate:\r\n getfld .c\r\n push af\r\n ld a,l\r\n xor 15\r\n ld l,a\r\n pop af\r\n setfld .c\r\n ret\r\nend main`,\r\n    't3'=`org 09000h\r\n\r\ninclude tnu\r\ninclude mus\r\ninclude sprpat\r\n\r\n;===your code \r\n\r\nmain:\r\nld sp,(8000h)\r\n\r\ncall screen1\r\n\r\nshowsp\r\nshowlb endusr\r\n\r\nld hl,8000h\r\nld (hl),0cdh\r\nld de,8001h\r\nld bc,th.size*th.count-1\r\nldir\r\n\r\n\r\ncall th.init\r\ncall spr.inipat\r\n;call mus.ini\r\n\r\n\r\nnew Main, 0\r\nshow hl\r\n\r\n\r\nmovw (h.thlop),spr.puts\r\njp th.loop\r\n\r\nclass Main, RActor\r\n meth Main,main\r\n fld.bottom Object\r\n fld .x,100\r\n fld .y,300\r\n fld .p,0\r\n fld .c,3\r\n fld.bottom Sprite\r\n meth RActor,onUpdate\r\n meth RActor,update\r\n meth RActor,screenOut \r\n meth RActor,die\r\n meth RActor,updateEx\r\n meth RActor,crashTo\r\n fld.bottom RActor\r\n fld.bottom Main\r\n end.const\r\n\r\nMain.main:\r\n olp:\r\n  getthis\r\n  invoke .update\r\n  call xrnd.a\r\n  ld a,h\r\n  and 15\r\n  jr nz,doap\r\n   getthis\r\n   getfld .x\r\n   new.arg .x\r\n   getfld .y\r\n   new.arg .y\r\n   ld hl,7\r\n   call rnd.a\r\n   ld de,3\r\n   sbc hl,de\r\n   new.arg .vx\r\n   ld hl,5\r\n   call rnd.a\r\n   ld de,15\r\n   sbc hl,de\r\n   new.arg .vy\r\n   new Bullet, 4\r\n   call dstk\r\n  doap:\r\n  ld a,8\r\n  call SNSMAT.a\r\n  and 1\r\n  jr z,golf\r\n  \r\n  getthis\r\n  getfld .x\r\n  inc hl\r\n  inc hl\r\n  setfld .x\r\n  ld de,400\r\n  cpde.a\r\n  jp c, olp\r\n  golf:\r\n  ld hl,0\r\n  getthis\r\n  setfld .x\r\n jp olp\r\n\r\n\r\nclass Bullet,RActor\r\n meth Bullet,main\r\n fld.bottom Object\r\n fld .x, 0\r\n fld .y, 0\r\n fld .p, 2\r\n fld .c, 15\r\n fld.bottom Sprite\r\n meth RActor,onUpdate\r\n meth RActor,update\r\n meth RActor,screenOut \r\n meth RActor,die\r\n meth RActor,updateEx\r\n meth RActor,crashTo\r\n fld.bottom RActor\r\n fld .vy, -10\r\n fld .vx, 0\r\n fld.bottom Bullet\r\n end.const \r\n \r\nBullet.main:\r\n blp:\r\n  getthis\r\n  ;x+=vx\r\n  getfld .x\r\n  ex de, hl\r\n  getfld .vx\r\n  add hl,de\r\n  setfld .x\r\n  ; y+=vy\r\n  getfld .y\r\n  ex de, hl\r\n  getfld .vy\r\n  add hl,de\r\n  setfld .y\r\n  getfld .vy\r\n  inc hl\r\n  setfld .vy\r\n\r\n  invoke .update\r\n  invoke .screenOut\r\n  jp c, bdie\r\n  getfld .vy\r\n  bit 7,h\r\n  jr nz,blp\r\n  ld de,5\r\n  cpde.a\r\n  jr c,blp\r\n \r\n  call dstk\r\n  getthis\r\n  ld hl,3\r\n  setfld .p\r\n  pushi 10,bc\r\n  invoke .updateEx\r\n\r\n bleft:\r\n  getthis\r\n  ld hl,2\r\n  setfld .p\r\n  getfld .x\r\n  dec hl\r\n  dec hl\r\n  setfld .x\r\n  getfld .y\r\n  dec hl\r\n  setfld .y\r\n  invoke .update\r\n  invoke .screenOut\r\n  jr c, bdie\r\n  jr bleft\r\n bdie:\r\n  invoke .die\r\n  ret \r\n\r\n  \r\ndstk:\r\n push af\r\n ld hl,th.start+256*3\r\n getthis\r\n ld h,a\r\n ld de,1900h\r\n ld bc,256\r\n call LDIRVM\r\n pop af\r\n ret\r\n \r\nendusr:\r\nend main`,\r\n    't4'=`org 09000h\r\njp main\r\ninclude const\r\ninclude ctrl\r\ninclude math\r\ninclude debug\r\ninclude sub\r\ninclude mem\r\ninclude tnu\r\ninclude sp\r\n\r\n;===your code \r\n\r\nright:dw 0\r\n\r\nmain:\r\ntnu.run Main\r\ndef Main.main,0,0\r\nnew.arg .vx,1\r\nnew.arg .vy,0\r\nnew.arg .x,0\r\nnew.arg .y,100\r\nnew Cat,4\r\n\r\nnew.arg .x,100\r\nnew.arg .y,100\r\nnew Target,2\r\n\r\nnew.arg .x,200\r\nnew.arg .y,100\r\nnew Target,2\r\n\r\n\r\nnew.arg .x,150\r\nnew.arg .y,100\r\nnew.arg .c,8\r\nnew NTarget,3\r\n\r\nld (right),hl\r\nld a,h\r\nld de,Actor\r\ncall instanceof\r\ncall showz\r\n\r\nld a,(right+1)\r\nld de,Target\r\ncall instanceof\r\ncall showz\r\n\r\nld a,(right+1)\r\nld de,Cat\r\ncall instanceof\r\ncall showz\r\n\r\n\r\nld hl,1\r\nsetfld .c\r\nenddef 0\r\n\r\nclass Main,Actor\r\n Actor.noovr Main\r\n end.const 0\r\nclass Target,Actor\r\n Actor.noovr Target\r\n met2 Target,.push\r\n end.const 0\r\nclass NTarget,Actor\r\n Actor.noovr NTarget\r\n end.const 0\r\ndef NTarget.main,0,0\r\n ret\r\nenddef\r\n\r\ndef Target.main,0,0\r\nenddef\r\nclass Cat,Actor\r\n Actor.noovr Cat\r\n fld .vy, 0\r\n fld .vx, 0\r\n fld.bottom Cat\r\n end.const 0\r\ndef Cat.main,0,0\r\n blp:\r\n  getthis\r\n  ;x+=vx\r\n  getfld .x\r\n  ex de, hl\r\n  getfld .vx\r\n  add hl,de\r\n  setfld .x\r\n  ; y+=vy\r\n  getfld .y\r\n  ex de, hl\r\n  getfld .vy\r\n  add hl,de\r\n  setfld .y\r\n  ld hl,Target\r\n  push hl\r\n  invoke .crashTo\r\n  jpf cr\r\n   ; r.x+=10\r\n   const setg,hl\r\n   getfldtg .y\r\n   ld de,30\r\n   add hl,de\r\n   push hl\r\n   ldconst hl,setg\r\n   setfldtg .y\r\n  cr:\r\n  invoke .update\r\n jp blp\r\nenddef\r\ndef Target.push,0,0\r\n ld hl,3\r\n setfld .p\r\n repti 30,pse\r\n  getfld .y\r\n  inc hl\r\n  setfld .y\r\n  invoke .update\r\n  continue\r\n pse:\r\n ld hl,0\r\n setfld .p\r\nenddef\r\n\r\nendusr: \r\nend main\r\nhttps://msxpen.com/codes/-N6DDfMvZq9aUeJ9JLpN\r\nhttps://msxpen.com/codes/-N6QGYk-rr5iDuTtHpF7`,\r\n    't5'=`org 9000h\r\n\r\n\r\ninclude key\r\n\r\nmain:\r\ncall keyall\r\nld hl,0108h\r\ncall getkey\r\nshow hl\r\nld hl,0107h\r\ncall getkey\r\nshow hl\r\n\r\n\r\nhalt\r\njp main`,\r\n    'gen'=`org 09000h\r\ninclude tnu\r\ninclude bool\r\n\r\nmain:\r\ntnu.run Main\r\nclass Main,Actor\r\n Actor.noovr Main\r\n end.const 0\r\ndef Main.main,0,0\r\n\r\n showlb .main\r\n showlb .crashTo\r\nenddef 0\r\nendusr:\r\nend main`,\r\n    'dac'=`org 09000h\r\njp main\r\ninclude const\r\ninclude ctrl\r\ninclude math\r\ninclude debug\r\ninclude sub\r\ninclude mem\r\ninclude th\r\n\r\n\r\nDECSUB equ 268CH;DAC ← DAC-ARG\r\nDECADD equ 269AH;DAC ← DAC+ARG\r\nDECNRM equ 26FAH;DAC を正規化する (*1)\r\nDECROU equ 273CH;DAC を四捨五入する\r\nDECMUL equ 27E6H;DAC ← DAC*DAC\r\nDECDIV equ 289FH;DAC ← DAC/DAC\r\nMAF equ 2C4DH;ARG ← DAC\r\nMAM equ 2C50H;ARG ← [HL]\r\nMOV8DH equ 2C53H;[DE] ← [HL]\r\nMFA equ 2C59H;DAC ← ARG\r\nMFM equ 2C5CH;[HL] ← DAC\r\nMMF equ 2C67H;[HL] ← DAC\r\nMOV8HD equ 2C6AH;[HL] ← [DE]\r\nXTF equ 2C6FH;[SP] ←→ DAC\r\nPHA equ 2CC7H;ARG → [SP]\r\nPHF equ 2CCCH;DAC → [SP]\r\nPPA equ 2CDCH;[SP] → ARG\r\nPPF equ 2CE1H;[SP] → DAC\r\nPUSHF equ 2EB1H;DAC → [SP]\r\nMOVFM equ 2EBEH;DAC ← [HL]\r\nMOVFR equ 2EC1H;DAC ← (CBED)\r\nMOVRF equ 2ECCH;(CBED) ← DAC\r\nMOVRMI equ 2ED6H;(CBDE) ← [HL]\r\nMOVRM equ 2EDFH;(BCDE) ← [HL]\r\nMOVMF equ 2EE8H;[HL] ← DAC\r\nMOVE equ 2EEBH;[HL] ← [DE]\r\nVMOVAM equ 2EEFH;ARG ← [HL]\r\nMOVVFM equ 2EF2H;[DE] ← [HL]\r\nVMOVE equ 2EF3H;[HL] ← [DE]\r\nVMOVFA equ 2F05H;DAC ← ARG\r\nVMOVFM equ 2F08H;DAC ← [HL]\r\nVMOVAF equ 2F0DH;ARG ← DAC\r\nVMOVMF equ 2F10H;[HL] ← DAC\r\n\r\nVALTYP equ 0F663H;1\r\nDAC equ 0F7F6H;16\r\nARG equ 0F847H;16\r\nFOUT equ 3425H\r\n;===your code \r\n\r\nmain:\r\nld a,2\r\nld (VALTYP),a\r\nLD HL,1234\r\nld (DAC+2),HL\r\ncall fout\r\n\r\nld b,5\r\nreptb nxt\r\nld a,(hl)\r\ncall wrt\r\ninc hl\r\ncontinue\r\nnxt:\r\nret\r\n\r\n`,\r\n    'setvrm'=`org 09000h\r\njp main\r\ninclude const\r\ninclude ctrl\r\ninclude math\r\ninclude debug\r\ninclude sub\r\ninclude mem\r\ninclude th\r\n\r\n;===your code \r\n\r\nmain:\r\nld hl,1800h\r\ncall SETWRT\r\nld a,35\r\nrepti 5, ed\r\ninc a\r\nout (98h),a\r\ncontinue\r\ned:\r\nret`,\r\n    'assert'=`include mem\r\ninclude math\r\ninclude debug\r\n\r\na.reg.trc:\r\ndw 0\r\na.reg.adr:\r\ndw 0\r\na.reg.min:\r\ndw 0\r\na.reg.val:\r\ndw 0\r\na.reg.max:\r\ndw 0\r\nmacro a.regi,n,v\r\n push hl\r\n ld hl,v\r\n ld (a.reg.##n),hl\r\n pop hl\r\nendm\r\nmacro a.regr,n,v\r\n ld (a.reg.##n),v\r\nendm\r\n\r\nmacro a.dummy\r\n local a.reg.,trc,adr,min,val,nax\r\nendm\r\n \r\n\r\nmacro assert.eq,o\r\n storelastpc\r\n pushall \r\n if not nul o\r\n  a.regi val, o\r\n endif\r\n ld de,(a.reg.val)\r\n ld(a.reg.val),hl\r\n ld(a.reg.min),de\r\n ld(a.reg.max),de\r\n cpde\r\n jp nz,assert.fail\r\n popall\r\nendm\r\n\r\nmacro assert.do,nx\r\n storelastpc\r\n pushall\r\n call to\r\n popall\r\n jr nx\r\n to:\r\nendm\r\n\r\nmacro storelastpc\r\n push hl\r\n call getpc\r\n ld (lastpc),hl\r\n pop hl\r\nendm\r\nlastpc:\r\n dw 0\r\n \r\ngetpc:\r\n pop hl\r\n push hl\r\n ret\r\n\r\nassert.fail:\r\n ld hl,0deadh\r\n show hl\r\n showm a.reg.trc\r\n showm a.reg.min\r\n showm a.reg.val\r\n showm a.reg.max\r\n showm a.reg.adr\r\n showm lastpc\r\n call freeze\r\nmacro assert.meqw,ad,val\r\n a.regi adr,ad\r\n push hl\r\n ld hl,(ad)\r\n assert.eq val\r\n pop hl\r\nendm\r\n `,\r\n    'stksz'=`org 09000h\r\njp main\r\ninclude const\r\ninclude ctrl\r\ninclude math\r\ninclude debug\r\ninclude sub\r\ninclude mem\r\ninclude th\r\n\r\n\r\n;===your code \r\n\r\nsz equ 256\r\n  \r\nmain:\r\nld hl,0fd9fh\r\nld (hl),0c9h\r\n rept sz/2\r\n  push hl\r\n endm\r\n rept sz/2\r\n  pop hl\r\n endm\r\n\r\nloop:\r\n getsp\r\n ld de,-sz\r\n add hl,de\r\n ld de,1800h\r\n ld bc,sz\r\n call LDIRVM\r\n ld hl,0\r\n halt\r\n jp loop\r\n \r\n \r\n `,\r\n    'vdp'=`;https://www.msx.org/wiki/VDP_Status_Registers\r\n;st 0 bit 7\r\n;read 1\r\n\r\n;https://www.msx.org/wiki/VDP_Mode_Registers\r\n;ctrl 1 bit 5 set 0\r\ninclude const\r\n\r\nsusint:\r\n ld a,(RG1SAV)\r\n res 5,a\r\n ld b,A\r\n ld c,1\r\n jp WRTVDP\r\n;rstint:\r\n ld a,(RG1SAV)\r\n set 5,a\r\n ld b,A\r\n ld c,1\r\n jp WRTVDP\r\ninted:\r\n call RDVDP\r\n bit 7,a\r\n ret\r\ndoint:\r\n call inted\r\n jr z, norst\r\n ld hl,timecnt\r\n inc (hl)\r\n call h.tntimi\r\n norst:\r\n ;call rstint\r\n ret\r\nh.tntimi:\r\n ld A,(timecnt)\r\n ld hl,1ae0h\r\n call 4dh\r\n ret\r\n ds 16\r\n \r\ntimecnt:\r\ndb 0\r\nmacro vdptest\r\nlocal stk1,stk2,stk3,vl\r\nstk1:\r\n ds 256,35\r\nstk2:\r\n ds 256,42\r\nstk3:\r\n\r\nvl:\r\n call susint\r\n ld sp,stk2\r\n ld hl,stk1\r\n ld de,1800h\r\n ld bc,256\r\n call LDIRVM\r\n \r\n \r\n ld sp,stk3\r\n call doint\r\n ld hl,stk2\r\n ld de,1900h\r\n ld bc,256\r\n call LDIRVM\r\n jp vl\r\nendm\r\n \r\nscreen1:\r\n ld a,1\r\n call CHGMOD\r\n ld a,(RG1SAV)\r\n set 1,a\r\n ld b,A\r\n ld c,1\r\n call WRTVDP\r\n ret\r\n `,\r\n    'mus'=`include mem\r\nmus.ini:\r\n di\r\n ld hl,0fd9fh\r\n ld (hl),0c3h\r\n movw (0fd9fh+1),mus\r\n ei\r\n ret\r\nmus:\r\nproc\r\nlocal we\r\n push af\r\n push de\r\n ld a,(we-1)\r\n xor 15\r\n ld (we-1),a \r\n ld a,8\r\n ld e,15\r\n we:\r\n call WRTPSG\r\n pop af \r\n pop de\r\n ret\r\nendp`,\r\n};","extends TObject;\nlet asms=new Asms;\nlet incled;\nfunction gensrc(src){\n    incled={};\n    return incl(src);\n}\nfunction incl(src){\n    return src.split(\"\\n\").\n    map(inclf).\n    join(\"\\n\");\n}\nlet cmtp=/;([^\\n]+)/gi;\nlet inclp=\n/^include ([\\d\\w]+)/; \nfunction inclf(line){\n    var m=inclp.exec(line);\n    if(!m)return line;\n    var f=m[1];\n    if(incled[f])return \"\";\n    incled[f]=1;\n    return \n    \";include \"+f+\"\\n\"+\n    incl(asms.data[f])+\n    \"\\n\"+\n    \";end of include \"+f;\n}","extends TObject;\nlet idx=254;\nlet _n2idx={};//optimized\nlet _n2seq={};//not optimized\n\n\\fldidx(){\n    let def=`Actor.noovr,Class\n fld .class,Class\n meth Class,main\n fld.bottom Object\n fld .x, 0\n fld .y, -1024\n fld .p, 0\n fld .c, 3\n fld.bottom Sprite\n meth Actor,onUpdate\n meth Actor,update\n meth Actor,screenOut \n meth Actor,die\n meth Actor,updateEx\n meth Actor,crashTo\n fld.bottom Actor\nendm\n`;\n    let fldp=/fld \\.(\\w+)/;\n    let metp=/meth.*,(\\w+)/;\n    idx=254;\n    let res={};\n    for(let ln of def.split(\"\\n\")){\n        let m=fldp.exec(ln)||\n        metp.exec(ln);\n        if(m){\n            res [m [1]]=idx;\n            /*print(m [1],idx.\n            toString(16));*/\n            n2seq(m[1]);\n            idx-=2;\n        }\n    }\n    _n2idx=res;\n    return res;\n}\nlet confli={};\nfldidx();\n//print(n2seq);\n/*print(n2idx(\"y\"));\nprint(n2idx(\"t\").toString(16));\nprint(idx2n(250));*/\naddMembers([\"x\",\"y\",\"test\",\"cnt\"]);\naddMembers([\"x\",\"y\",\"cnt\",\"toste\"]);\naddMembers([\"x\",\"y\",\"ttt\",\"toste\"]);\n//print(confli);\n//print(_n2seq);\nbuild();\n\\build(){\n    for (let n of Object.keys(_n2seq)) {\n        if (!_n2idx[n]) _n2idx[n]=idx;\n    }\n    //print(_n2idx);\n    while(true) {\n        let cont=false;\n        for (let k,i of confli) {\n            k=k.split(\"\\t\");\n            if (_n2idx[k[0]]==_n2idx[k[1]]) {\n                _n2idx[k[1]]-=2;\n                cont=true;\n            }\n        }\n        if (!cont) break;\n    }\n    //print(_n2idx);\n}\n\n\n\\n2idx(n:String){\n    let r=_n2idx [n];\n    if(r)return r;\n    throw new Error(\n    `${n} is not found`);\n}\n\\n2seq(n:String){\n    let r=_n2seq [n];\n    if(r!=null)return r;\n    r=Object.keys(\n    _n2seq).length;\n    _n2seq[n]=r;\n    return r;\n}\n\\idx2n(i:Number){\n    for(let k,v in _n2idx){\n        if(v==i)return k;\n    }\n    return null;\n}\n\\addConfli(a:String, b:String) {\n    if (a==b) return;\n    if (n2seq(a)>n2seq(b)){\n        return addConfli(b,a);\n    }\n    confli[a+\"\\t\"+b]=true;\n}\n\\isConfli(a:String, b:String) {\n    if (a==b) return true;\n    if (n2seq(a)>n2seq(b)){\n        return isConfli(b,a);\n    }\n    return confli[a+\"\\t\"+b]=true;\n}\n\\addMembers(names:String[]) {\n    for (let name of names) {\n        for (let name2 of names) {\n            addConfli(name,name2);\n        }\n    }\n}\n","extends Boot;\n\n\\createMainObject() {\n    getMainClass();\n    $excludeFromAll=$Screen.all();\n    $Screen.resize(512,512);\n    $MScreen=new Screen{x:256,y:224,width:256,height:192,scaleX:2};\n    $MLayer=$MScreen.addLayer();\n    $spr_scale=1;\n    $crashTo_size=8<<$spr_scale;\n    $RSprPat=new RSprPat;\n    $MScreen.setBGColor($RSprPat.palette[3]);\n    $Screen.setBGColor($RSprPat.palette[6]);\n    $exporter=new GenAsm;\n    let ide=$Boot.getIDE();\n    if (ide && $Navigator.isMobile()) ide.runDialog.resize {\n        left:10,top:300,width:400,\n        height:400\n    };\n    if ($editButton) {\n        new Button{top:480,text:\"Edit Page\",height:30, \n            fillStyle:$RSprPat.palette[4],\n            onClick:\\{$editButton.openEditor();}\n        };\n    }\n    $mainClassName=mainClass.meta.shortName;\n    new mainClass;\n}\nsuper.main();\n","extends TObject;\nnative Tonyu;\n\\u(obj) {\n    return Object.assign({},obj);\n}\n\\getMembers(klass){\n    let d=klass.decls;\n    let f=(d.fields),m=(d.methods);\n    let s=klass.superclass;\n    //print(klass.shortName, klass, f,m);\n    let res={};\n    if(klass.shortName!=\"RActor\" && s)res=getMembers(s);\n    //let p=Tonyu.iterator2(f);\n\n    for(let n,v in f){\n        res [n]={\n            type=\"fld\",\n            declin=klass\n        };\n    }\n    for(let n,v in m){\n        if (n==\"new\") continue;\n        res [n]={\n            type=\"meth\",\n            declin=klass\n        };\n    }\n    return res;\n}\n\\inherits(klass, parent) {\n    if (klass===parent) return true;\n    if (!klass.superclass) return false;\n    return inherits(klass.superclass,parent);\n}\nlet genasm:GenAsm;\nlet anodes=genasm.anodes;\nlet Za=(anodes.filter \\(e){\n    return e.shortName===\"RActor\";\n}[0]);\nlet fld=new FldIdx;\nlet ks=anodes.filter \\(klass){\n    return\n    inherits(klass, Za) &&\n    klass!==Za;\n};\nfor (let klass of ks) {\n    proc(klass);\n}\nfld.build();\n/*\nfor (let klass of ks) {\n    header(klass);\n}*/\n\n\\proc(klass){\n    //print(klass);\n    let r=getMembers(klass);\n    fld.addMembers(\n    Object.keys(r));\n    /*for (let k,v in r){\n        print(k,v.type,v.declin.shortName);\n    }*/\n}\n\\header(klass){\n    let r=getMembers(klass);\n    let min=256,max=0;\n    let rev={};\n    printf(\"class %s,%s%{\",\n    klass.shortName,\n    klass.superclass.shortName);\n    for (let k,v in r){\n        let i=fld.n2idx(k);\n        if(i<min)min=i;\n        if(i>max)max=i;\n        rev [i]=k;\n    }\n    for(let i=max;i>=min;i-=2){\n        let k=rev [i];\n        if(!k){\n            printf(\"unused%n\");\n            continue;\n        }\n        let ri=r [k];\n        if(ri.type==\"fld\"){\n            printf(\"fld .%s,0%n\",k);\n        }else {\n            printf('meth %s,%s%n',\n            ri.declin.shortName,\n            k);\n        }\n    }\n    printf(\"end.const 0%n%}\");\n}\n\\printf() {\n    genasm.printf.apply(genasm,arguments);\n}\n//print(t);","extends TObject;\nnative console;\nlet indentBuf=\"\";\nlet indentStr=\" \";\nlet buf=new StringBuilder;\nlet visitor:Visitor;\n\\initModule(){\n    indentBuf=\"\";\n    indentStr=\" \";\n    buf=new StringBuilder;\n    visitor=this;\n}\n\\printf() {\n    let ap=new ArgParser(arguments);\n    function shiftArg(nullable) {\n        let res=ap.shift();\n        if (res==null && !nullable) {\n            console.log(ap);\n            throw new Error(\n            \"null param: fmt=\"+fmt);\n        }\n        return res;\n    }\n    let fmt=shiftArg();\n    while (true) {\n        let i=fmt.indexOf(\"%\");\n        if (i<0) {printraw(fmt); break;}\n        printraw(fmt.substring(0,i));\n        i++;\n        let fstr=fmt.charAt(i);\n        if (fstr==\"s\") {\n            let str=shiftArg();\n            if (typeof str == \"string\" || typeof str ==\"number\") {}\n            else if (str==null) str=\"null\";\n            else if (str.text) {\n                addMapping(str);\n                str=str.text;\n            }\n            printraw(str);\n            i++;\n        } else if (fstr==\"d\") {\n            let n=shiftArg();\n            if (typeof n!=\"number\") throw new Error (n+\" is not a number: fmt=\"+fmt);\n            printraw(n);\n            i++;\n        } else if (fstr==\"n\") {\n            ln();\n            i++;\n        } else if (fstr==\"{\") {\n            indent();\n            i++;\n        } else if (fstr==\"}\") {\n            dedent();\n            i++;\n        } else if (fstr==\"%\") {\n            printraw(\"%\");\n            i++;\n        } else if (fstr==\"f\") {\n            shiftArg()($);\n            i++;\n        /*} else if (fstr==\"l\") {\n            let lit=shiftArg();\n            printraw(toLiteral(lit));\n            i++;*/\n        } else if (fstr==\"v\") {\n            let a=shiftArg();\n            if (!a) throw new Error (\"Null %v\");\n            if (typeof a!=\"object\") throw new Error(\"nonobject %v:\"+a);\n            addMapping(a);\n            visitor.visit(a);\n            i++;\n        /*} else if (fstr==\"z\") {\n            let place=shiftArg();\n            if (\"val\" in place) {\n                printraw(place.val);\n                return;\n            }\n            if (!place.inited) {\n                lazy(place);\n            }\n            place.printraw();\n            i++;*/\n        } else if (fstr==\"j\") {\n            let sp_node=shiftArg();\n            let sp=sp_node[0];\n            let node=sp_node[1];\n            let sep=false;\n            if (!node || !node.forEach) {\n                console.log(node);\n                throw new Error (node+\" is not array. cannot join fmt:\"+fmt);\n            }\n            for (let n of node) {\n                if (sep) printf(sp);\n                sep=true;\n                visitor.visit(n);\n            }\n            i++;\n        } else if (fstr==\"D\"){\n            shiftArg(true);\n            i++;\n        } else {\n            i+=2;\n        }\n        fmt=fmt.substring(i);\n    }\n}\n\n\\ln() {\n\t\t\n    printraw(\"\\n\"+indentBuf);\n}\n\\indent() {\n\n    indentBuf+=indentStr;\n    printraw(\"\\n\"+indentBuf);\n}\n\\dedent() {\n    let len=indentStr.length;\n    if (!buf.last(len).match(/^\\s*$/)) {\n        console.log(buf);\n        throw new Error (\"Non-space truncated \");\n    }\n    buf.truncate(len);//=buf.substring(0,buf.length-len);\n    indentBuf=indentBuf.substring(0 , indentBuf.length-len);\n}\n//let debug=false;\n\\addMapping(){}\n\\printraw(s){\n    buf.append(s);\n}\n","\\enter(newval, act) {\n    let sv={};\n    let curval=this;\n    for (let k in newval) {\n        sv[k]=curval[k];\n        curval[k]=newval[k];\n    }\n    let res=act(this);\n    for (let k in sv) {\n        curval[k]=sv[k];\n    }\n    return res;\n}\n","extends TObject;\nnative console;\nnative Math;\nlet buf:String []=[\"\"];\nlet bufSize=1024;\nfunction rest(lastIdx) {\n    return bufSize-buf[lastIdx].length;\n}\nfunction validate() {\n    for (let i=0;i<buf.length-1;i++) {\n        if (buf[i].length!==bufSize) {console.log(buf); throw new Error(\"NO!\"); }\n    }\n}\nfunction append(content) {\n    content=content+\"\";\n    while(content) {\n        let lastIdx=buf.length-1;\n        let r=rest(lastIdx);\n        if (content.length<=r) {\n            buf[lastIdx]+=content;\n            break;\n        } else {\n            buf[lastIdx]+=content.substring(0,r);\n            buf.push(\"\");\n            content=content.substring(r);\n        }\n    }\n    validate();\n}\nfunction rowcol(index) {\n    let row=Math.floor(index/bufSize);\n    let col=index % bufSize;\n    return {row,col};\n}\nfunction replace(index, replacement) {//replacement.length<= bufSize\n    replacement=replacement+\"\";\n    if (replacement.length>bufSize) {\n        throw new Error(\"Cannot replace over len=\"+bufSize);\n    }\n    let start=rowcol(index);\n    let end=rowcol(index+replacement.length);\n    if (start.row===end.row) {\n        let line=buf[start.row];\n        buf[start.row]=line.substring(0,start.col)+replacement+line.substring(end.col);\n    } else {\n        let line1=buf[start.row];\n        let line2=buf[end.row];\n        let len1=bufSize-start.col;\n        let len2=replacement.length-len1;\n        buf[start.row]=line1.substring(0,start.col)+replacement.substring(0, len1);\n        buf[end.row]=replacement.substring(len1)+line2.substring(len2);\n    }\n    validate();\n}\nfunction truncate(length) {\n    while(true) {\n        let lastIdx=buf.length-1;\n        let dec=buf[lastIdx].length-length;\n            //console.log(buf,length, lastIdx,dec);\n        if (dec>=0) {\n            buf[lastIdx]=buf[lastIdx].substring(0,dec);\n            break;\n        } else {\n            buf.pop();\n            length=-dec;// <=> l-=bl <=> l=l-bl <=> l=-(bl-l) <=> l=-dec\n        }\n    }\n    validate();\n\n}\nfunction getLength() {\n    let lastIdx=buf.length-1;\n    return bufSize*lastIdx+buf[lastIdx].length;\n}\nfunction last(len) {\n    if (len>bufSize) {\n        throw new Error(\"Cannot replace over len=\"+bufSize);\n    }\n    let lastIdx=buf.length-1;\n    let deced=buf[lastIdx].length-len;\n    if (deced>=0) {\n        return buf[lastIdx].substring(deced);\n    } else {\n        return buf[lastIdx-1].substring(bufSize+deced)+buf[lastIdx];\n    }\n}\nfunction toString() {\n    return buf.join(\"\");\n}\n","\\visit(n){\n    let k=n && \"v_\"+n.type;\n    if(n&&\n    typeof this [k]==\n    \"function\"){\n        return this [k](n);\n    }\n    return def(n);\n}\n\\def(o){\n    if(!o)return;\n    for(let k,v in o){\n        visit(o);\n    }\n}","let type:String;\nlet row:Number;\nlet col:Number;\nlet pos:Number;\nlet len:Number;","includes TNode,Stmt;\nlet stmt:Stmt;\nlet catches:Catches[];\n","includes TNode;\nlet vtype:TypeExpr;\n","includes TNode;\nlet name:Token;\n","includes TNode;\nlet name:Token;\nlet typeDecl:TypeDecl?;\nlet value:Expression?;\n","includes TNode,Stmt;\nlet decls:VarDecl[];\n","includes TNode,Stmt;\nlet cond:Expression;\nlet loop:Stmt;\n","extends TObject;\nlet pa=new Panel {\n    x:200,y:200,\n    width:16,height:16,\n    scaleX:10\n};\n\n/*let ide=$Boot.getIDE();\nif (ide) ide.runDialog.resize {\n    left:10,top:300,width:400,\n    height:400\n};*/\nlet buf='',count=0;\nfor(let i=0;\ni<$imageList.length;i++){\n    let l=$imageList [i];\n    if(l.width!=16)continue;\n    if(l.height!=16)continue;\n    if(count>=64)break;\n    count++;\n    pa.clearRect();\n    pa.drawSprite(8,8,i);\n    //updateEx(50);\n    let d=pa.getImageData(\n    0,0,8,16);\n    d=d.data;\n    out(d);\n    d=pa.getImageData(\n    8,0,8,16);\n    d=d.data;\n    out(d);\n    \n    //print(d.data.length);\n}\n\\out(d){\n    let c=\"0b\";\n    let db= [];\n    for(let i=3;i<d.length;\n    i+=4) {\n        c+=(d [i]>128?1:0);\n        if(c.length>=10){\n            c=(c-0).toString(16);\n            c=\"$\"+c;\n            db.push(c);\n            c=\"0b\";\n        }\n    }\n    buf+=\"db \"+db+\"\\n\";\n}","let sprpat;\nlet p,c;\nlet dotAlign=1;\n\\new(params) {\n    super(params);\n    if(!$RSprPat) $RSprPat=new RSprPat;\n    sprpat=sprpat||$RSprPat;\n    dotAlign=dotAlign||1;\n    width=$crashTo_size;\n    height=$crashTo_size;\n    //print(width,height);\n    //scaleX=2;\n}\n\\setPalette(n,c){\n    sprpat.palette [n-1]=c;\n}\n\\draw(ctx){\n    let pa:Panel=sprpat.get(p,c);\n    if(pa==null)return;\n    ctx.save();\n    let sx=x,sy=y;\n    x=floor(x/dotAlign)*dotAlign>> $spr_scale;\n    y=floor(y/dotAlign)*dotAlign>> $spr_scale;\n    performTransform(ctx);\n    /*ctx.drawImage(pa.image,\n    floor(x-pa.width),floor(y-pa.height)\n    );*/\n    ctx.drawImage(pa.image,\n    -floor(pa.width/2),-floor(pa.height/2)\n    );\n    x=sx;y=sy;\n    ctx.restore();\n}\n\\defaultLayer{\n    return $MLayer;\n}\n","extends TObject;\nlet palette=palette||[[0,0,0],\n[64,183,74],[117,207,126],[89,86,215],\n[128,119,239],[184,95,81],\n[102,219,238],[217,102,90],[253,138,126],\n[204,195,96],[222,208,136],\n[59,161,66],[182,103,180],\n[204,204,204],[255,255,255]].map\\(rgb) {\n    return new Color(rgb[0],rgb[1],rgb[2]);\n};\nlet imgs={};\n\\get(p:Number, c:Number) {\n    c=amod(c,(palette.length+1));\n    if (c<=0) return null;\n    let key=`${p}\\t${c}`;\n    if (imgs[key]) return imgs[key];\n    let ls=$imageList[p];\n    if (!ls) return  null;\n    let res=new Panel{width:ls.width, height:ls.height};\n    imgs[key]=res;\n    res.context.drawImage(ls.image, \n    ls.x,ls.y,ls.width,ls.height,\n    0,0,ls.width,ls.height);\n    res.replaceColor(0,0,ls.width, ls.height, palette[c-1]);\n    res.die();\n    return res;\n}\n","extends TObject;\r\nnative WebSite;\r\nnative require;\r\nlet exec = (WebSite.isNW? require('child_process').exec : function (){});\r\n/*function extLink(href,caption,options) {\r\n    options=options||{};\r\n    var opt=getOpt(href,options);\r\n    return [\"a\",opt,caption];\r\n}*/\r\nfunction getOpt(options) {\r\n    var p=WebSite.platform;\r\n    options=options||{};\r\n    let href=options.href;\r\n    options.on=options.on||{};\r\n    var afterClick=(options.onclick) || function(){};\r\n    if (p==\"win32\") {\r\n        options.href=\"javascript:;\";\r\n        options.onclick=ext(\"start\",href,afterClick);\r\n    } else if (p==\"darwin\") {\r\n        options.href=\"javascript:;\";\r\n        options.onclick=ext(\"open\",href,afterClick);\r\n    } else {\r\n        options.href=href;\r\n        options.onclick=afterClick;\r\n        options.target=\"_new\";\r\n    }\r\n    return options;\r\n}\r\nfunction ext(cmd, href,afterClick) {\r\n    return function () {\r\n        exec(cmd+\" \"+href);\r\n        if (afterClick) afterClick();\r\n    };\r\n}","//extends TObject;\n\"field strict\";\nnative $;\nvar name2id;\n\n\\isArray(e) {\n    return e && typeof e.splice===\"function\";\n}\n\\isPlainObj(e) {\n    return e && !isArray(e) && typeof e===\"object\";\n}\n\\genid() {\n    $dom_idSeq=$dom_idSeq||0;\n    $dom_idSeq++;\n    return \"JQExpr\"+$dom_idSeq;\n}\n\\isPrimitive(v){\n    return ({number:1,string:1,boolean:1})[typeof v];\n}\n\\extLink() {\n    return $JQEX_extLink || ($JQEX_extLink=new ExtLink);\n}\n\\add2(parentID,expr) {\n    if (!parentID) throw new Error(\"parentID is not set for \"+expr);\n    if (isPrimitive(expr)) {\n        expr=expr+\"\";\n        var esc=expr.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\");\n        //print(parentID, esc);\n        $(\"#\"+parentID).append(esc);\n        return parentID;\n    }\n    if (!expr.shift) {\n        throw new Error(expr+\" is not valid expression\");\n    }\n    var tagname=expr.shift();\n    var elem=$(\"<\"+tagname+\">\").appendTo(\"#\"+parentID);\n    var id, name;\n    if (isPlainObj(expr[0])) {\n        var attr=expr.shift();\n        var r_evt=/^on(.*)/i;\n        if (tagname===\"a\") {\n            attr=extLink().getOpt(attr);\n        }\n        for (var k,v in attr) {\n            var m=r_evt.exec(k);\n            if (m) {\n                if (typeof v===\"function\") {\n                    //print(m[1],v);\n                    elem.on(m[1], v);\n                }\n            } else if (isPrimitive(v)) {\n                if ((v+\"\").match(/^javascript:/)) v=\"javascript:;\";\n                elem.attr(k,v);\n                if (k===\"id\") id=v;\n                if (k===\"name\") name=v;\n            }\n        }\n    }\n    var svp;\n    elem.on(\"focus\") \\{\n        svp=$Keys.preventDefaults;\n        $Keys.preventDefaults={};\n    };\n    elem.on(\"blur\") \\{\n        if (svp) $Keys.preventDefaults=svp;\n    };\n    \n    if (!id) {\n        id=genid();\n        elem.attr(\"id\",id);\n    }\n    if (name) {\n        name2id=name2id||{};\n        name2id[name]=id;\n    }\n    for (var e of expr) {\n        add2(id, e);\n    }\n    return id;\n}","//native $;\nlet tx=new HTMLUI{\n    content:[\"textarea\",{name:\"val\"},\"test\\ndesu\"], \n    left:10, top: 20, width:300, height:100,\n};\nlet calc=new HTMLUI{\n    content:[\"div\",{style:\"background: cyan;\"},\n    [\"input\",{name:\"a\",value:2}],\"+\",\n    [\"input\",{name:\"b\",value:3}],[\"button\",{onclick:plus},\"=\"],\n    [\"input\",{name:\"c\"}]\n    ],\n    left:10, top:300, width:400, height:100\n};\ncalc.add([\"div\",[\"button\",{\n    onclick:\\{\n        calc.die();\n    }\n},\"Close\"]]);\nx=100;y=200;\nalign=\"left\";\nwhile(true) {\n    text=\"Value of textarea:\\n\"+\n    tx.getValue(\"val\");//+Object.keys($Keys.preventDefaults);\n    update();\n}\n\\plus() {\n    var a=calc.getValue(\"a\")-0;\n    var b=calc.getValue(\"b\")-0;\n    calc.setValue(\"c\",a+b);\n}","extends RSprite;\nlet x,y,p,c;\n//\\getkey(){}\n/*\\new(params){\n    super(params);\n    if (!$exporter){\n        $exporter=new GenAsm;\n    }\n}*/\n\\die(){super.die();}\n\\crashTo(e){return super.crashTo(e);}\n\\update(){super.update();}\n\\updateEx(n){super.updateEx(n);}\n\\onUpdate (){}\n\\screenOut(){\n    return x<0 || x>$MScreen.width<<$spr_scale || \n    y<0 || y>$MScreen.height<<$spr_scale;\n}\n","extends VisitorBase;\n\\v_String(n:Token){\n    let text:String=n.text;\n    def(n);\n}\n\\v_prefix(n:Prefix){\n    let op:Token=n.op;\n    let right:Expression=n.right;\n    def(n);\n}\n\\v_postfix(n:Postfix){\n    let left:Expression=n.left;\n    let op:TNode=n.op;\n    def(n);\n}\n\\v_infix(n:Infix){\n    let left:Expression=n.left;\n    let op:Token=n.op;\n    let right:Expression=n.right;\n    def(n);\n}\n\\v_trifix(n:Trifix){\n    let left:Expression=n.left;\n    let op1:Token=n.op1;\n    let mid:Expression=n.mid;\n    let op2:Token=n.op2;\n    let right:Expression=n.right;\n    def(n);\n}\n\\v_arrayElem(n:ArrayElem){\n    let subscript:Expression=n.subscript;\n    def(n);\n}\n\\v_argList(n:ArgList){\n    let args:Expression[]=n.args;\n    def(n);\n}\n\\v_member(n:Member){\n    let name:Token=n.name;\n    def(n);\n}\n\\v_parenExpr(n:ParenExpr){\n    let expr:Expression=n.expr;\n    def(n);\n}\n\\v_varAccess(n:VarAccess){\n    let name:Token=n.name;\n    def(n);\n}\n\\v_funcExprArg(n:FuncExprArg){\n    let obj:FuncExpr=n.obj;\n    def(n);\n}\n\\v_objlitArg(n:ObjlitArg){\n    let obj:Objlit=n.obj;\n    def(n);\n}\n\\v_call(n:Call){\n    let args:Expression[]=n.args;\n    def(n);\n}\n\\v_scall(n:Scall){\n    let args:Expression[]=n.args;\n    def(n);\n}\n\\v_newExpr(n:NewExpr){\n    let klass:VarAccess=n.klass;\n    let params:Call?=n.params;\n    def(n);\n}\n\\v_superExpr(n:SuperExpr){\n    let name:Token?=n.name;\n    let params:Scall=n.params;\n    def(n);\n}\n\\v_exprstmt(n:Exprstmt){\n    let expr:Expression=n.expr;\n    def(n);\n}\n\\v_compound(n:Compound){\n    let stmts:Stmt[]=n.stmts;\n    def(n);\n}\n\\v_return(n:Return){\n    let value:Expression?=n.value;\n    def(n);\n}\n\\v_if(n:If){\n    let cond:Expression=n.cond;\n    let then:Stmt=n.then;\n    let _else:Stmt?=n._else;\n    def(n);\n}\n\\v_forin(n:Forin){\n    let isVar:Token?=n.isVar;\n    let vars:Token[]=n.vars;\n    let inof:Token=n.inof;\n    let set:Expression=n.set;\n    def(n);\n}\n\\v_normalFor(n:NormalFor){\n    let init:Stmt=n.init;\n    let cond:Expression?=n.cond;\n    let next:Expression?=n.next;\n    def(n);\n}\n\\v_for(n:For){\n    let inFor:ForHead=n.inFor;\n    let loop:Stmt=n.loop;\n    def(n);\n}\n\\v_while(n:While){\n    let cond:Expression=n.cond;\n    let loop:Stmt=n.loop;\n    def(n);\n}\n\\v_do(n:Do){\n    let loop:Stmt=n.loop;\n    let cond:Expression=n.cond;\n    def(n);\n}\n\\v_case(n:Case){\n    let value:Expression=n.value;\n    let stmts:Stmt[]=n.stmts;\n    def(n);\n}\n\\v_default(n:Default){\n    let stmts:Stmt[]=n.stmts;\n    def(n);\n}\n\\v_switch(n:Switch){\n    let value:Expression=n.value;\n    let cases:Case[]=n.cases;\n    let defs:Default?=n.defs;\n    def(n);\n}\n\\v_break(n:Break){\n    let brk:Token=n.brk;\n    def(n);\n}\n\\v_continue(n:Continue){\n    let cont:Token=n.cont;\n    def(n);\n}\n\\v_finally(n:Finally){\n    let stmt:Stmt=n.stmt;\n    def(n);\n}\n\\v_catch(n:Catch){\n    let name:Token=n.name;\n    let stmt:Stmt=n.stmt;\n    def(n);\n}\n\\v_try(n:Try){\n    let stmt:Stmt=n.stmt;\n    let catches:Catches[]=n.catches;\n    def(n);\n}\n\\v_throw(n:Throw){\n    let ex:Expression=n.ex;\n    def(n);\n}\n\\v_typeExpr(n:TypeExpr){\n    let name:Token=n.name;\n    def(n);\n}\n\\v_typeDecl(n:TypeDecl){\n    let vtype:TypeExpr=n.vtype;\n    def(n);\n}\n\\v_varDecl(n:VarDecl){\n    let name:Token=n.name;\n    let typeDecl:TypeDecl?=n.typeDecl;\n    let value:Expression?=n.value;\n    def(n);\n}\n\\v_varsDecl(n:VarsDecl){\n    let decls:VarDecl[]=n.decls;\n    def(n);\n}\n\\v_paramDecl(n:ParamDecl){\n    let name:Token=n.name;\n    let typeDecl:TypeDecl?=n.typeDecl;\n    def(n);\n}\n\\v_paramDecls(n:ParamDecls){\n    let params:ParamDecl[]=n.params;\n    def(n);\n}\n\\v_setterDecl(n:SetterDecl){\n    let value:ParamDecl=n.value;\n    def(n);\n}\n\\v_funcDeclHead(n:FuncDeclHead){\n    let _nowait:Token?=n._nowait;\n    let ftype:Token?=n.ftype;\n    let name:Token=n.name;\n    let setter:SetterDecl?=n.setter;\n    let params:ParamDecls?=n.params;\n    let rtype:TypeDecl?=n.rtype;\n    def(n);\n}\n\\v_funcDecl(n:FuncDecl){\n    let head:FuncDeclHead=n.head;\n    let body:Compound=n.body;\n    def(n);\n}\n\\v_nativeDecl(n:NativeDecl){\n    let name:Token=n.name;\n    def(n);\n}\n\\v_ifWait(n:IfWait){\n    let then:Stmt=n.then;\n    let _else:Stmt?=n._else;\n    def(n);\n}\n\\v_empty(n:Empty){\n    def(n);\n}\n\\v_funcExprHead(n:FuncExprHead){\n    let name:Token?=n.name;\n    let params:ParamDecls?=n.params;\n    def(n);\n}\n\\v_funcExpr(n:FuncExpr){\n    let head:FuncExprHead=n.head;\n    let body:Compound=n.body;\n    def(n);\n}\n\\v_jsonElem(n:JsonElem){\n    let key:Token=n.key;\n    let value:Expression?=n.value;\n    def(n);\n}\n\\v_objlit(n:Objlit){\n    let elems:JsonElem[]=n.elems;\n    def(n);\n}\n\\v_arylit(n:Arylit){\n    let elems:Expression[]=n.elems;\n    def(n);\n}\n\\v_extends(n:Extends){\n    let superclassName:Token=n.superclassName;\n    def(n);\n}\n\\v_includes(n:Includes){\n    let includeClassNames:Token[]=n.includeClassNames;\n    def(n);\n}\n\\v_program(n:Program){\n    let ext:Extends?=n.ext;\n    let incl:Includes?=n.incl;\n    let stmts:Stmt[]=n.stmts;\n    def(n);\n}\n","extends RActor;\nvar vx;\nwhile(y<200) {\n    y+=2;\n    update();\n}\nif (x>$player.x) vx=0-2;\nelse vx=2;\n//print(y,$MScreen.height);\nwhile(true) {\n    if (screenOut()) die();\n    y+=2;\n    x+=vx;\n    update();\n}","extends RActor;\n\n$player=new Player{x:256, y: 300, p:4, c:15};\nvar i=0;\nwhile(i<20) {\n    new Enemy{x:rnd(512), y:0, p:5, c:7};\n    updateEx(30);\n    //i+=1;\n}","includes TNode;\nlet args:Expression[];\n","includes TNode;\nlet subscript:Expression;\n","includes TNode,Stmt;\nlet brk:Token;\n","includes TNode;\nlet args:Expression[];\n","includes TNode;\nlet value:Expression;\nlet stmts:Stmt[];\n","includes TNode;\nlet name:Token;\nlet stmt:Stmt;\n","includes TNode,Stmt;\nlet stmts:Stmt[];\n","includes TNode,Stmt;\nlet cont:Token;\n","includes TNode;\nlet stmts:Stmt[];\n","includes TNode,Stmt;\nlet loop:Stmt;\nlet cond:Expression;\n","includes TNode,Stmt;\nlet expr:Expression;\n","includes TNode;\nlet superclassName:Token;\n","includes TNode;\nlet stmt:Stmt;\n","includes TNode,Stmt;\nlet inFor:ForHead;\nlet loop:Stmt;\n","includes TNode;\nlet isVar:Token?;\nlet vars:Token[];\nlet inof:Token;\nlet set:Expression;\n","includes TNode,Stmt;\nlet head:FuncDeclHead;\nlet body:Compound;\n","includes TNode;\nlet _nowait:Token?;\nlet ftype:Token?;\nlet name:Token;\nlet setter:SetterDecl?;\nlet params:ParamDecls?;\nlet rtype:TypeDecl?;\n","includes TNode,ObjOrFuncArg;\nlet obj:FuncExpr;\n","includes TNode;\nlet name:Token?;\nlet params:ParamDecls?;\n","includes TNode,Stmt;\nlet cond:Expression;\nlet then:Stmt;\nlet _else:Stmt?;\n","includes TNode,Stmt;\nlet then:Stmt;\nlet _else:Stmt?;\n","includes TNode;\nlet includeClassNames:Token[];\n","includes Expression;\nlet left:Expression;\nlet op:Token;\nlet right:Expression;\n","includes TNode;\nlet key:Token;\nlet value:Expression?;\n","includes TNode;\nlet name:Token;\n","includes TNode,Stmt;\nlet name:Token;\n","includes TNode;\nlet init:Stmt;\nlet cond:Expression?;\nlet next:Expression?;\n","includes TNode,ObjOrFuncArg;\nlet obj:Objlit;\n","includes TNode;\nlet name:Token;\nlet typeDecl:TypeDecl?;\n","includes TNode;\nlet params:ParamDecl[];\n","includes Expression;\nlet left:Expression;\nlet op:TNode;\n","includes Expression;\nlet op:Token;\nlet right:Expression;\n","includes TNode;\nlet ext:Extends?;\nlet incl:Includes?;\nlet stmts:Stmt[];\n","includes TNode,Stmt;\nlet value:Expression?;\n","includes TNode;\nlet args:Expression[];\n","includes TNode;\nlet value:ParamDecl;\n","includes TNode,Stmt;\nlet value:Expression;\nlet cases:Case[];\nlet defs:Default?;\n","includes TNode,Stmt;\nlet ex:Expression;\n","includes Expression;\nlet left:Expression;\nlet op1:Token;\nlet mid:Expression;\nlet op2:Token;\nlet right:Expression;\n","extends RActor;\n\np=6;\nc=8;\nwhile (true) {\n    if (screenOut()) die();\n    y-=10;\n    var e=crashTo(Enemy);\n    if (e) {\n        e.die();\n        die();\n    }\n    c=18-c;\n    update();\n}","extends RActor;\n\n\nwhile(true) {\n    if (getkey(\"left\")) x-=3;\n    if (getkey(\"right\")) x+=3;\n    if (crashTo(Enemy)) {\n        die();\n    }\n    if (getkey(\"space\")==1) {\n        new PBullet{x,y};\n    }\n    update();\n    \n}","includes JQExpr;\nnative document;\nnative $;\nnative navigator;\n\"field strict\";\nvar left, top, width, height;\nvar screen,id,content;\n\\add(expr) {\n    var expr=new ArgParser(arguments).toArray();\n    if (expr.length==1 && isArray(expr[0])) expr=expr[0];\n    return add2(id, expr);\n}\n\\new(param) {\n    //print(\"HTMLUI NEW!\");\n    super(param);\n    //print(\"HTMLUI NEW end!\");\n    //throw new Error(\"dom\");\n    screen=screen||$Screen;\n    var body=$(document.body);\n    if (!body.attr(\"id\")) body.attr{id:genid()};\n    var bid=body.attr(\"id\");\n    if (!content) id=add2(bid, [\"div\"]);\n    else if (typeof content===\"string\") id=add2(bid,[content]);\n    else id=add2(bid, content);\n    //print(\"id\",id);\n    //print(\"HTMLUI NEW end!?\"+(typeof dom));\n    document.body.appendChild($(\"#\"+id)[0]);\n    fit();\n    $uiScreen.on(\"resize\") \\{\n        //print(\"RSZ\");\n        fit();\n    };\n}\nfunction toUI(x,y) {\n    var sc=screen;\n    var scale=sc.scaleX;\n    var left=sc.x+((-sc.width/2+x)*scale);\n    var top=sc.y+((-sc.height/2+y)*scale);\n    return {left,top};    \n}\n\nfunction fit() {\n    var sc=screen;\n    var scale=sc.scaleX;\n    /*vx=sc.x-(sc.width*scale)/2;\n    vy=sc.y-(sc.height*scale)/2;*/\n    var u1=toUI(this.left,this.top);\n    //dom.css{position:\"absolute\",left:u1.left,top:u1.top};\n    //return;\n    var u2=toUI(this.left+width,this.top+height);\n    var c={left: (u1.left+u2.left)/2, top:(u1.top+u2.top)/2};\n    var left=c.left-(u2.left-u1.left)/2/scale;\n    var top=c.top-(u2.top-u1.top)/2/scale;\n    $(\"#\"+id).css{\n        position:\"absolute\",\n        width:(width)+\"px\", height: (height)+\"px\", \n        left, top,\n        transform: \"scale(\"+scale+\")\",\n    };\n}\n\\checkExists(name) {\n    if (!name2id[name]) {print(name2id); throw new Error(\"name=\"+name+\" is not found\");}\n    return $(\"#\"+name2id[name]);\n}\n\\getValue(name) {\n    if (!name2id) return \"\";\n    return checkExists(name).val();\n}\n\\setValue(name,value) {\n    if (!name2id) return \"\";\n    return checkExists(name).val(value);\n}\n\\copyToClipboard(name) {\n    //checkExists(name)[0].select();\n    //document.execCommand(\"copy\");\n    navigator.clipboard.writeText(getValue(name));\n}\n\\die() {\n    super.die();\n    $(\"#\"+id).remove();\n}\n\\loop(){\n    //if (!dom.css) return;\n    var k=toUI(left,top);\n//print( [screen.x,screen.y, screen.width, screen.height, screen.scaleX*10, k.left, k.top].map(floor));\n    while(true) {\n        fit();\n        update();\n    }\n}\n//loop();","extends Visitor;\nincludes Buf, Context;\nnative Tonyu;\ninitModule();\nlet IDEPrj=$currentProject.compiler;\nlet anodes=waitFor(IDEPrj.serializeAnnotatedNodes());\nlet mem=new MemberScan{genasm:this};\nlet lval=false;\nlet symSeq=1;\nlet ide=$Boot.getIDE();\nlet klass, klassSrc;\nlet problems=[];\nlet builtins={getkey:\"getkey\",rnd:\"rnd\"};\nlet globals={};\nlet keynames={space: 0x0108, \nright:0x8008,down:0x4008,up:0x2008,left:0x1008};\n//debug=true;\nlet opmap={\n    \"*\":\"call IMULT.a%n\", \n    \"/\":\"call IDIV.a%n\",\n    \"%\":\"call IMOD.a%n\",\n    \"+\":\"add hl, de%n\",\n    \"-\":\"subhl de%n\",\n};\n\nprintf(`org 08000h\ninclude tnu\ninclude bool\n\nmain:\ntnu.run ${$mainClassName}\n`);\nlet anode;\n\\annotation(n) {\n    let res=anode[n._id];\n    if (!res) {\n        return {};\n    }\n    return res;\n}\nfor (klass of mem.ks) {\n    mem.header(klass);\n    klassSrc=klass.src.tonyu.text();\n    //print(klass.src.tonyu);\n    printf(\"def %s.main,0,0%{\",klass.shortName);\n    anode=(klass.annotation);\n    visit(klass.node);\n    printf(\"%}\");\n}\nlet outp=new OutPat;\nprintf(`enddef 0\nendusr:\n${Object.keys(globals).map \\(k){\n    return globalLabel(k)+\":dw 0\\n\";\n}}\nspr.inipat:\n ld de,3800h\n ld hl,spr.pat\n ld bc,${outp.count*32}\n jp LDIRVM\nspr.pat:\n${outp.buf}\n\nend main`);\n/*print(Object.keys(n.decls.fields));\nprint(n.superclass.fullName);\n*/\n//print(\"buf=\"+buf);\nlet url=\"https://msxpen.com/codes/-N8klu22ZKY0trVaYX66\";\n\n//msxpen.com/codes/-N8kjRrkOlaH4vlLV7MY\";\n\n\n//msxpen.com/codes/-N8kZzjv3KL0vbHvgiqT\";\n\n\nnew Button{top:420,text:\"to MSXPen\",onClick:showDiag,fillStyle:$RSprPat.palette[2]};\n\n\\showDiag() {\n    //msxpen.com/codes/-N8fnpcspSXEqEJ4lOeO\";\n    if (problems.length) {\n        let tx=new HTMLUI{\n            content:[\"div\",\n            {style:'background: #fee;'},\n            [\"h2\",\"Problem(s) found\"],\n            [\"ul\"].concat(\n            problems.map\\(p) {\n                return [\"li\",[\"a\",{\n                    href:\"javascript:;\",\n                    onclick: \\{\n                        ide.jump(p.file, p.row, p.col);  \n                    }\n                },\n                p.file.name(),\":\",p.row,\":\",p.col,\" - \",p.mesg\n                ]];\n            }),\n            [\"button\",{onclick:\\{tx.die();}},\"Close\"]\n            ],\n            left:10, top: 20, width:300,\n            height:400,\n        };\n        return;\n    }\n    let tx=new HTMLUI{\n        content:[\"div\",\n        {style:'background: #eee;'},\n        [\"h2\",\"Code copied!\"],\n        [\"ul\",\n        [\"li\",\n        \"Open \",\n        [\"a\",{target:\"pen\",href:url},\n        \"this MSXpen page \"],\n        \".\"],\n        [\"li\",\"Paste the copied code\",\n        \" to 'Asm' tab.\"]],\n        [\"textarea\",{rows:\"10\", cols:\"30\",name:\"val\"},\n        \"test\\ndesu\"],\n        [\"button\",{onclick:\\{tx.die();}},\"Close\"]\n        ],\n        left:10, top: 20, width:300,\n        height:400,\n    };\n    let cg=new Codegen;\n    tx.setValue(\"val\", cg.gensrc(buf+\"\"));\n    tx.copyToClipboard(\"val\");\n}\n\n\\def(n){\n    if(!n){\n        print(n);\n        return;\n    }\n    print(n.type,\":\",\n    Object.keys(n));\n    unsup(n);\n}\n\\unsup(n:TNode, mesg:String) {\n    mesg=mesg|| \"Unsupported syntax\";\n    let file=klass.src.tonyu;\n    let rc=Tonyu.TError.calcRowCol(klassSrc,n.pos);\n    let p={file, row:rc.row, col: rc.col, mesg};\n    problems.push(p);\n    //ide.jump( file, rc.row, rc.col);\n    print(p.file.name(),\":\",p.row,\":\",p.col,\" - \",p.mesg);\n}\n\\v_program(n:Program){\n    let ext:Extends?=n.ext;\n    let incl:Includes?=n.incl;\n    let stmts:Stmt[]=n.stmts;\n    for (let s of stmts){\n        visit(s);\n    }\n    printf(\"ret%n\");\n}\n\\v_parenExpr(n:ParenExpr) {\n    visit(n.expr);\n}\n\\extractSrc(n:TNode) {\n    return klassSrc.substring(n.pos, n.pos+n.len);\n}\n\\v_exprstmt(n:Exprstmt){\n    let expr:Expression=n.expr;\n    printf(\";%s%n\", extractSrc(n));\n    visit(expr);\n}\n\\v_infix(n:Infix){\n    let left:Expression=n.left;\n    let op:Token=n.op;\n    let right:Expression=n.right;\n    switch(op.text){\n        case \"=\":\n        assign(n);\n        break;\n        case \"+\":case \"-\":\n        case \"*\":case \"/\":case \"%\":\n        arith(n);\n        break;\n        case \"==\":case \"!=\":\n        case \"<=\":case \">=\":\n        case \"<\":case \">\":\n        cmp(n);\n        break;\n        case \"+=\":case \"-=\":\n        case \"*=\":case \"/=\":case \"%=\":\n        arithEq(n);\n        break;\n        default:\n        unsup(n,`Unsupported infix operator '${op.text}'`);\n    }\n}\n\\isMemberRef(m:Expression) {\n    if (m.type!==\"postfix\") return null;\n    let tgme:Postfix=m;\n    if (tgme.op.type!==\"member\") return null;\n    let mem: Member=tgme.op;\n    return [tgme.left, mem.name];\n}\n\\v_postfix(n:Postfix){\n    let left:Expression=n.left;\n    let op:TNode=n.op;\n    if (!lval) {\n        let tgme=isMemberRef(n);\n        if (tgme) {\n            visit(tgme[0]);\n            printf(\"getfldtg .%s%n\",tgme[1]);\n            return;\n        } else if (op.type===\"call\") {\n            if (left.type===\"varAccess\") {\n                return myMeth(left, op);            \n            } else {\n                let tgme=isMemberRef(left);\n                if (tgme) {\n                    tgMeth(tgme[0], tgme[1], op);\n                    return;\n                }\n                unsup(n, `Not a member Ref `);\n            }\n        }\n    } else {\n        let tgme=isMemberRef(n);\n        if (tgme) {\n            printf(\"push hl%n\");\n            enter{lval:false} \\{\n                visit(tgme[0]);\n            };\n            printf(\"setfldtg .%s%n\",tgme[1]);\n            return;\n        }\n    }\n    unsup(n,`Unsupported postfix operator '${op.text}' (${op.type})`);\n}\n\\tgMeth(target: Expression, name:Token, op:Call) {\n    printf(\"pushthis 0%n\");\n    let args=op.args;\n    for(let a of args){\n        visit(a);\n        printf(\"push hl%n\");\n    }\n    visit(target);\n    printf(\"invoketg.a .%s%n\",name);\n    printf(\"popthis 0%n\");\n    /*\n    pushthis 0\n   ld hl,(right)\n   invoketg.a .push\n   popthis 0*/\n}\n\\myMeth(left: VarAccess, op:Call) {\n    let args=op.args;\n    let mname=left.name.text;\n    if (mname===\"getkey\") {\n        if (!args[0]) {\n            unsup(left, \"'getkey' should give a string constant.\");\n        } else {\n            let kn=args[0];\n            if (kn.type===\"literal\") {\n                let s=kn.text;\n                s=s.substring(1,s.length-1);\n                if (!keynames[s]) {\n                    unsup(kn, `Undefined key name '${s}'.`);\n                }\n                printf(\"ld hl, %s%n\", keynames[s]);\n                printf(\"call getkey%n\");\n            } else {\n                unsup(kn,`'${kn.type}' is not a string constant `);\n                //print(kn.type);\n            }\n        }\n    } else if (mname===\"rnd\") {\n        if (!args[0]) {\n            unsup(left, \"'rnd' should give a number.\");\n        }\n        visit(args[0]);\n        printf(\"call rnd%n\");\n    } else {\n        for(let a of args){\n            visit(a);\n            printf(\"push hl%n\");\n        }\n        printf(\"invoke .%s%n\", mname);\n    }\n}\n\\cmp(n:Infix){\n    let left:Expression=n.left;\n    let op:Token=n.op;\n    let right:Expression=n.right;\n    let ops={\n        \"==\":\"eq\",\"!=\":\"ne\",\n        \"<=\":\"le\",\">=\":\"ge\",\n        \"<\":\"lt\",\">\":\"gt\",\n    };\n    visit(right);\n    printf(\"push hl%n\");\n    visit(left);\n    printf(\"pop de%n\");\n    printf(\"call hl%sde%n\",ops[op.text]);\n}\n\\arith(n:Infix){\n    let left:Expression=n.left;\n    let op:Token=n.op;\n    let right:Expression=n.right;\n    arith2(left,op.text, right);\n}\n\\arith2(left:Expression, opr:String, right:Expression) {\n    switch(opr) {\n        case \"*\":case \"/\":case \"%\":\n        printf(\"pushthis%n\");\n        visit(left);\n        printf(\"push hl%n\");\n        visit(right);\n        printf(\"pop de%n\");\n        printf(opmap[opr]);\n        printf(\"popthis%n\");\n        break;\n        case \"+\":case \"-\":\n        visit(right);\n        printf(\"push hl%n\");\n        visit(left);\n        printf(\"pop de%n\");\n        printf(opmap[opr]);\n        break;\n        default:\n        unsup(left, `Invalid op ${opr}`);\n    }\n}\n\\arithEq(n:Infix) {\n    let left:Expression=n.left;\n    let op:Token=n.op;\n    let right:Expression=n.right;\n    arith2(left, op.text.substring(0,op.text.length-1), right);\n    enter{lval:true} \\{\n        visit(left);\n    };\n    /*if (left.type!==\"varAccess\") {\n        return unsup(`Only field${op.text}=... is supported `);\n    }\n    let a=annotation(left);\n    switch (a.scopeInfo.type) {\n        case \"field\":\n\n        break;\n        case \"class\":\n        unsup(n,`Cannot assign to class '${name}'.`);\n        break;\n        default:\n        unsup(n,`${name}: Unsupported variable type '${a.scopeInfo.type}'`);\n    }\n\n    \n    let s=`\n        macro getfld, n\n        local ad\n        ld (ad-1),a\n        ld hl,(n)\n        ad:\n        endm\n\n        macro setfld, n\n        local ad\n        ld (ad-1),a\n        ld (n),hl\n        ad:\n        endm\n        `;*/\n}\n\\assign(n:Infix){\n    let left:Expression=n.left;\n    let op:Token=n.op;\n    let right:Expression=n.right;\n    visit(right);\n    enter{lval:true} \\{\n        visit(left);\n    };\n}\n\\v_reservedConst(n:Token) {\n    if (n.text===\"true\" || n.text===\"false\") {\n        printf(\"ld hl,%s%n\",n.text);\n    } else {\n        unsup(n,`Unsupported reserved word '${n.text}'.`);\n    }\n}\n\\v_number(n:Token){\n    printf(\"ld hl,%d%n\",n.text-0);\n}\n\\globalLabel(n:String) {\n    return `gbl_${n.replace(/\\$/g,\"\")}`;\n}\n\\v_varAccess(n:VarAccess){\n    let name:Token=n.name;\n    let a=annotation(n);\n    switch (a.scopeInfo.type) {\n        case \"field\":\n        if (lval) {\n            printf(\"setfld .%s%n\",name);\n        } else{\n            printf(\"getfld .%s%n\",name);\n        }\n        break;\n        case \"class\":\n        if (lval) {\n            unsup(n,`Cannot assign to class '${name}'.`);\n        } else{\n            printf(\"ld hl,%s%n\",name);\n        }\n        break;\n        case \"global\":\n        globals[name.text]=1;\n        if (lval) {\n            printf(\"ld (%s),hl%n\",globalLabel(name.text));\n        } else {\n            printf(\"ld hl,(%s)%n\",globalLabel(name.text));\n        }\n        break;\n        default:\n        unsup(n,`${name.text}: Unsupported variable type '${a.scopeInfo.type}'`);\n    }\n}\n\\genSym() {\n    return \"lb\"+(symSeq++);\n}\n\\v_compound(n:Compound) {\n    for (let s of n.stmts) {\n        visit(s);\n    }\n}\n\\v_while(n:While){\n    let cond:Expression=n.cond;\n    let loop:Stmt=n.loop;\n    let sh=genSym();\n    let se=genSym();\n    printf(\"%s:%n\",sh);\n    visit(cond);\n    printf(\"jpf %s%n\",se);\n    visit(loop);\n    printf(\"jp %s%n\",sh);\n    printf(\"%s:%n\",se);\n}\n\\v_if(n:If){\n    let cond:Expression=n.cond;\n    let then:Stmt=n.then;\n    let _else:Stmt?=n._else;\n    let send=genSym();\n    let sels=genSym();\n    visit(cond);\n    printf(\"jpf %s%n\",sels);\n    visit(then);\n    printf(\"jp %s%n\",send);\n    printf(\"%s:%n\",sels);\n    if (_else) visit(_else);\n    printf(\"%s:%n\",send);\n}\n\n\n\\v_varDecl(n:VarDecl){\n    let name:Token=n.name;\n    let typeDecl:TypeDecl?=n.typeDecl;\n    let value:Expression?=n.value;\n    if (!value) return;\n    visit(value);\n    //TODO local\n    printf(\"setfld .%s%n\",name);\n}\n\\v_varsDecl(n:VarsDecl){\n    let decls:VarDecl[]=n.decls;\n    for(let d of decls){\n        visit(d);\n    }\n}\n\\v_newExpr(n:NewExpr){\n    let klass:VarAccess=n.klass;\n    let params:Call?=n.params;\n    if (params.args.length==1 && params.args[0].type==\"objlit\") {\n        let objlit:Objlit=params.args[0];\n        let elems:JsonElem[]=objlit.elems;\n        for (let elem of elems) {\n            if (elem.value) {\n                visit(elem.value);\n            } else {\n                printf(\"getfld .%s%n\",elem.key);\n            }\n            printf(\"new.arg .%s%n\",elem.key);\n        }\n        printf(\"new %s,%d%n\",klass.name, elems.length);\n        return;\n    }\n    unsup(n,`'new ${klass.name}' can be followed by only {key:value...}`);\n}\n","includes TNode,Elem;\nlet head:FuncExprHead;\nlet body:Compound;\n","includes TNode,Elem;\nlet klass:VarAccess;\nlet params:Call?;\n","includes TNode,Elem;\nlet elems:JsonElem[];\n","includes TNode,Elem;\nlet expr:Expression;\n","includes TNode,Elem;\nlet name:Token?;\nlet params:Scall;\n","includes Elem;\nlet text:String;\n","includes TNode,Elem;\nlet name:Token;\n","includes TNode,Elem;\nlet elems:Expression[];\n"]}