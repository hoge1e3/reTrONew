{"version":3,"sources":["/prj/user/asm/Asms.tonyu","/prj/user/asm/FldIdx.tonyu","/prj/user/asm/gen/Buf.tonyu","/prj/user/asm/gen/Context.tonyu","/prj/user/asm/gen/StringBuilder.tonyu","/prj/user/asm/gen/VisitorBase.tonyu","/prj/user/asm/Includer.tonyu","/prj/user/asm/MBoot.tonyu","/prj/user/asm/MemberScan.tonyu","/prj/user/asm/nodes/C_Meta.tonyu","/prj/user/asm/nodes/ForHead.tonyu","/prj/user/asm/nodes/FuncInfo.tonyu","/prj/user/asm/nodes/Locals.tonyu","/prj/user/asm/nodes/TNode.tonyu","/prj/user/asm/nodes/Try.tonyu","/prj/user/asm/nodes/TypeDecl.tonyu","/prj/user/asm/nodes/TypeExpr.tonyu","/prj/user/asm/nodes/VarDecl.tonyu","/prj/user/asm/nodes/VarsDecl.tonyu","/prj/user/asm/nodes/While.tonyu","/prj/user/asm/Visitor.tonyu","/prj/user/spr/OutBG.tonyu","/prj/user/spr/OutPat.tonyu","/prj/user/spr/RSprite.tonyu","/prj/user/spr/RSprPat.tonyu","/prj/user/asm/GenAsm.tonyu","/prj/user/asm/nodes/ArgList.tonyu","/prj/user/asm/nodes/ArrayElem.tonyu","/prj/user/asm/nodes/Break.tonyu","/prj/user/asm/nodes/Call.tonyu","/prj/user/asm/nodes/Case.tonyu","/prj/user/asm/nodes/Catch.tonyu","/prj/user/asm/nodes/Compound.tonyu","/prj/user/asm/nodes/Continue.tonyu","/prj/user/asm/nodes/Default.tonyu","/prj/user/asm/nodes/Do.tonyu","/prj/user/asm/nodes/Exprstmt.tonyu","/prj/user/asm/nodes/Extends.tonyu","/prj/user/asm/nodes/Finally.tonyu","/prj/user/asm/nodes/For.tonyu","/prj/user/asm/nodes/Forin.tonyu","/prj/user/asm/nodes/FuncDecl.tonyu","/prj/user/asm/nodes/FuncDeclHead.tonyu","/prj/user/asm/nodes/FuncExprArg.tonyu","/prj/user/asm/nodes/FuncExprHead.tonyu","/prj/user/asm/nodes/If.tonyu","/prj/user/asm/nodes/IfWait.tonyu","/prj/user/asm/nodes/Includes.tonyu","/prj/user/asm/nodes/Infix.tonyu","/prj/user/asm/nodes/JsonElem.tonyu","/prj/user/asm/nodes/Member.tonyu","/prj/user/asm/nodes/NativeDecl.tonyu","/prj/user/asm/nodes/NormalFor.tonyu","/prj/user/asm/nodes/ObjlitArg.tonyu","/prj/user/asm/nodes/ParamDecl.tonyu","/prj/user/asm/nodes/ParamDecls.tonyu","/prj/user/asm/nodes/Postfix.tonyu","/prj/user/asm/nodes/Prefix.tonyu","/prj/user/asm/nodes/Program.tonyu","/prj/user/asm/nodes/Return.tonyu","/prj/user/asm/nodes/Scall.tonyu","/prj/user/asm/nodes/SetterDecl.tonyu","/prj/user/asm/nodes/Switch.tonyu","/prj/user/asm/nodes/Throw.tonyu","/prj/user/asm/nodes/Trifix.tonyu","/prj/user/asm/RActor.tonyu","/prj/user/Main.tonyu","/prj/user/PBullet.tonyu","/prj/user/Player.tonyu","/prj/user/asm/nodes/FuncExpr.tonyu","/prj/user/asm/nodes/NewExpr.tonyu","/prj/user/asm/nodes/Objlit.tonyu","/prj/user/asm/nodes/ParenExpr.tonyu","/prj/user/asm/nodes/SuperExpr.tonyu","/prj/user/asm/nodes/Token.tonyu","/prj/user/asm/nodes/VarAccess.tonyu","/prj/user/asm/nodes/Arylit.tonyu"],"names":[],"mappings":"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;;SCDA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;SCAA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;SCAA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;SCAA;SACA;;;;;;;SADA;SACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SCDA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;SCAA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;SCAA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;SCAA;SACA;;;;;;;SADA;SACA;;;;;;;;;;;;;;;;;;;;SCDA;SACA;SACA;SACA;;;;;;;SAHA;SACA;SACA;SACA;;;;;;;;;;;;;;;;;;;SCHA;SACA;;;;;;;SADA;SACA;;;;;;;;;;;;;;;;;;;SCDA;SACA;SACA;SACA;SACA;SACA;;;;;;;SALA;SACA;SACA;SACA;SACA;SACA;;;;;;;;;;;;;;;;;;;SCLA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;SCAA;SACA;;;;;;;SADA;SACA;;;;;;;;;;;;;;;;;;;SCDA;SACA;SACA;;;;;;;SAFA;SACA;SACA;;;;;;;;;;;;;;;;;;;SCFA;SACA;;;;;;;SADA;SACA;;;;;;;;;;;;;;;;;;;SCDA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;SCAA;SACA;SACA;;;;;;;SAFA;SACA;SACA;;;;;;;;;;;;;;;;;;;SCFA;SACA;;;;;;;SADA;SACA;;;;;;;;;;;;;;;;;;;SCDA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;SCAA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;;SCAA;SACA;SACA;;;;;;;SAFA;SACA;SACA;;;;;;;;;;;;;;;;;;;SCFA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;SCAA;SACA;;;;;;;SADA;SACA;;;;;;;;;;;;;;;;;;;SCDA;;;;;;;SAAA;;;;;;;;;;;;;;;;;;;SCAA;SACA;;;;;;;SADA;SACA;;;;;;;;;;;;;;;;;;;SCDA;SACA;;;;;;;SADA;SACA;;;;;;;;;;;;;;;;;;;SCDA;SACA;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","sourcesContent":["extends TObject;\nlet data={'main':`org 09000h\n\ninclude ctrl\ninclude math\ninclude debug\ninclude sub\ninclude mem\ninclude sp\ninclude vdp\ninclude th\n\n\n;===your code \n\nmain:\nld a,5\nlp:\ndec b\nshow a\niff nc,nx\njr lp\nnx:\n\nret\nend main`,\n    'math':`include ctrl\n\n;16bit shifts\nmacro slhl\n sla l\n rl h\nendm\nmacro srahl\n sra h\n rr l\nendm\nmacro srlhl\n srl h\n rr l\nendm\nmacro slde\n sla e\n rl d\nendm\nmacro srade\n sra d\n rr e\nendm\nmacro srlde\n srl d\n rr e\nendm\nmacro slbc\n sla c\n rl b\nendm\nmacro srabc\n sra b\n rr c\nendm\nmacro srlbc\n srl b\n rr c\nendm\n\n\n; for xrnd\nmacro sldehl,n\n  local loop\n  ld b,n\n loop:\n  sla d\n  rl e\n  rl h\n  rl l\n  djnz loop\nendm\nmacro srdehl,n\n local loop\n ld b,n\n loop:\n  srl l\n  rr h\n  rr e\n  rr d\n djnz loop\nendm\n \nmacro xorrm,re,me\n  ld A,(me)\n  xor re\n  ld (me),a\nendm\n\nmacro subhl,rp\n and a\n sbc hl,rp\nendm\n\nmacro cpde.a\n rst dcompr\nendm\n\n\nmarker.b xrnd.a\nxrnd.a:\nproc \n local rhl,rde,rdhlde\n ; s[0] ^= s[0] << 13\n call rdhlde\n sldehl 13\n call wrtxor\n ; s[0] ^= s[0] >> 17\n call rdhlde\n srdehl 17\n call wrtxor\n ; s[0] ^= s[0] << 5;\n call rdhlde\n sldehl 5\n call wrtxor\n ret\n \n rdhlde:\n  ld hl,1234\n rhl:\n  ld de,5678\n rde:\n  ret\n \n wrtxor:\n  xorrm h,rhl-1\n  xorrm l,rhl-2\n  xorrm d,rde-1\n  xorrm e,rde-2\n  ret\nendp\nmarker.e xrnd.a\n\n\nmarker.b rnd\nrnd:\n push af\n call rnd.a\n pop af\n ret\nmarker.e rnd\nmarker.b rnd.a\nrnd.a:\n ld de,07fffh\n call IDIV.a\n push hl\n call xrnd.a\n res 7,h\n ex de,hl\n pop hl\n inc hl\n call IDIV.a\n ret\nmarker.e rnd.a\n\nmarker.b abs\nabs:\n bit 7,h\n ret z\nneghl:\n ld de,0 \n ex de,hl \n subhl de\n ret\nmarker.e abs\n\n `,\n    'bool':`include math\ninclude ctrl\ntrue equ -1\nfalse equ 0\n\nmacro rethl,val,flg\n local tru\n if not nul flg\n  iff flg ,tru\n endif\n ld hl,val\n ret\n tru:\nendm\n\nhleqde:\n subhl de\n rethl true,z\n rethl false\n\nhlnede:\n subhl de\n rethl true,nz\n rethl false\n \nhlgtde:\n subhl de\n rethl false,z\n bit 7,h\n rethl true,z\n rethl false\n\nhlltde:\n subhl de\n bit 7,h\n rethl true,nz\n rethl false\n \nhlgede:\n subhl de\n rethl true,z\n bit 7,h\n rethl true,z\n rethl false\n\nhllede:\n subhl de\n rethl true,z\n bit 7,h\n rethl true,nz\n rethl false\n \nproc\nziffalse:\n local resa\n ld (resa-1),a\n call ziffalse.a\n ld A,0\n resa:\n ret\nziffalse.a:\n ld a,0\n cp h\n ret nz\n cp l\n ret\nendp\n\nmacro jpf,to\n call ziffalse\n jp z,to\nendm\n\nmacro andand,fls\n jpf fls\nendm\nmacro oror,tru\n call ziffalse\n jp nz,tru\nendm\n\nmacro flagtobool,fl\n local yes,skp\n jr fl, yes\n ld hl,false\n jr skp\n yes:\n ld hl,true\n skp: \nendm`,\n    'mem':`include const\n;\nrdslt:\n ex de,hl\n rept 5\n srl d;page*2\n endm\n CALL RSLREG\n ld e,d\n rdslt1:\n  RRCA\n  dec e\n  jp nz,rdslt1\n AND    00000011B\n LD C,A;000000Pr\n LD B,0\n LD HL,EXPTBL\n ADD HL,BC\n LD C,A;000000Pr\n LD A,(HL)\n AND 80H;expand flag\n OR C\n LD C,A;e00000Pr\n rept 4;const\n INC HL\n endm\n LD A,(HL);exp reg\n ld e,d\n rdslt2:\n  srl a\n  dec e\n  jp nz,rdslt2\n;000000Ex\n sla a\n sla a\n ;    0000Ex00\n and  00001100b\n OR C;e000ExPr\n ret\nmemini:\n CALL RSLREG\n rept 4\n  RRCA\n endm\n AND    00000011B\n LD C,A;000000Pr\n LD B,0\n LD HL,EXPTBL\n ADD HL,BC\n LD C,A;000000Pr\n LD A,(HL)\n AND 80H;expand flag\n OR C\n LD C,A;e00000Pr\n rept 4;const\n INC HL\n endm\n LD A,(HL);exp reg\n rept 4; page*2\n srl a\n endm;000000Ex\n sla a\n sla a\n ;    0000Ex00\n and  00001100b\n OR C;e000ExPr\n LD Hl,04000H\n jp ENASLT\n\nmacro peekw ,regv,regm\n  local w\n  ld (w-2),regm\n  ld regv,(0)\n  w:\nendm\n\nmacro pokew ,regm,regv\n  local w\n  ld (w-2),regm\n  ld (0),regv\n  w:\nendm\nmacro movw,dst,src,rp\n if nul rp\n  push hl\n  movw dst,src,hl\n  pop hl\n else\n  ld rp,src\n  ld dst,rp\n endif \nendm\n\nmacro popa\n  ex (sp),hl\n  ld a,h\n  pop HL\nendm\n\nmacro pushall\n push af\n push bc\n push de\n push hl\nendm\nmacro popall\n pop hl\n pop de\n pop bc\n pop af\nendm\n \n\nmacro pushi, n,rp\n local rrr\n if nul rp\n  ld (rrr-2),hl\n  ld hl,n\n  push hl\n  ld hl,0\n  rrr:\n else\n  ld rp,n\n  push rp\n endif\nendm\nmacro const,n,reg\n ld (n-2),reg\nendm\nmacro ldconst,reg,n\n ld reg,0\n n:\nendm\nmacro peekconst,reg,n\n ld reg,(0)\n n:\nendm\n`,\n    'const':`\n;wrt equ 0a2h\ndcompr equ 0020H\nsp.ini equ 0dc00h\nstksize equ 512\n\nth.size equ 256\nth.count equ 20\nth.start equ th.end-th.size*th.count\nth.end equ sp.ini-stksize\n\nth.bottom equ 0\n\nspr.scale equ 1\nspr.xmax equ 256<<spr.scale\nspr.ymax equ 192<<spr.scale\n\nENASLT EQU 0024H\nRSLREG EQU 0138H\nEXPTBL EQU 0FCC1H\nSETWRT equ 0053H\nLDIRVM equ 005CH\nWRTVDP equ 0047H\nRG1SAV equ 0F3E0H\nRDVDP  equ 013EH\nSNSMAT.a equ 0141h\n\nCHGMOD equ 005FH\n\nIMULT.a equ 3193H;HL ← DE*HL\nIDIV.a equ 31E6H;HL ← DE/HL\nIMOD.a equ 323AH;HL ← DE mod HL (DE ← DE/HL) \n\nWRTPSG  equ 0093H\n\nCSRY equ 0F3DCH\nCSRX equ 0F3DDH\n\nnull equ 0\n\nmacro marker.b, n\n last.marker: defl $\nendm\nmacro marker.e, n\n len.##n: defl $-last.marker\nendm\n`,\n    'ctrl':`include const\nfreeze:\nhalt\njr freeze\n\nmacro for ,lbend\n ; uses a\n ; c: breaked\n proc\n  local s,lb\n  lb:\n  call dcompr; uses a\n  jp nc,lbend\n  push HL\n  push de\n  push bc\n  call s\n  pop bc\n  pop de\n  pop HL\n  jp c,lbend\n  add HL,bc\n  jr lb\n  s:\n endp\nendm\n\nmacro repti ,n,lbend\n proc\n  local s,lb, lbend2\n  push bc\n  ld b,n\n  lb:\n  push bc\n  call s\n  pop bc\n  jr c,lbend2\n  djnz lb\n  lbend2:\n  pop bc\n  jp lbend \n  s:\n endp\nendm\n\n\nmacro reptb ,lbend\n  local s,lb\n inc b\n djnz lb\n jp lbend\n lb:\n  push bc\n  call s\n  pop bc\n  jp c,lbend\n djnz lb\n jp lbend \n s:\nendm\n\n\n\nmacro callsva,pp\n local sva\n ld (sva-1),a\n call pp\n ld a,0\n sva:\nendm\nbcis0:\n callsva bcis0.a\n ret\nbcis0.a:\n ld a,b\n and a\n ret nz\n ld a,c\n and a\n ret\n\nmacro reptbc ,lbend\n local s,lb\n call bcis0\n jp z,lbend \n lb:\n  push bc\n  call s\n  pop bc\n  jp c,lbend\n  dec bc\n  call bcis0\n jr nz, lb\n jp lbend \n s:\nendm\n\n\niff.NZ equ 0\niff.Z  equ 1\niff.NC equ 2\niff.C  equ 3\n\nmacro iff,cnd,to\n local iff.\n if iff.##cnd eq iff.NZ\n  jr z,to\n endif\n if iff.##cnd eq iff.Z\n  jr nz,to\n endif\n if iff.##cnd eq iff.NC\n  jr c,to\n endif\n if iff.##cnd eq iff.C\n  jr nc,to\n endif\n ;jr cnd, skip\n ;jr to\n ;skip:\nendm\n\nmacro break,cnd\n if NUL cnd\n  scf\n  ret\n else\n  proc \n   local jj\n   iff cnd ,jj\n   break\n  jj:\n  endp\n endif\nendm\nmacro continue,cnd\n if NUL cnd \n  or a\n  ret\n else\n  proc \n   local jj\n   iff cnd,jj\n   continue\n  jj:\n  endp\n endif\nendm\n\n\nmacro djnzr,reg, j\n dec reg\n jr NZ,j\nendm\n\nmacro callhl\n local LCD\n ld (LCD-2),HL\n call LCD\n LCD:\nendm\n\nmacro stride,lim,to\n if (low $)<lim\n  exitm\n endif\n ds 256+to-(low $),0cdh\nendm`,\n    'th':`include ctrl\ninclude sp\ninclude vdp\ninclude mem\ninclude math\ninclude debug\n\nth.ofs.stp equ 256-4\nth.ofs.sp equ th.ofs.stp+1\nth.ofs.spini equ th.ofs.stp\nfld.top equ th.ofs.spini-2\nth.st.blank equ 0c9h\nth.st.active equ 31h\n\n;macro th.for,lb\n; ld HL,th.start\n; ld de,th.end\n; ld bc,th.size\n; for lb\n;endm\nmacro th.for.a, nx, st, en\n if nul st\n  th.for.a nx, 0, th.count\n  exitm\n endif\n local do, loop\n ld a,st+(high th.start)\n loop:\n  cp en+(high th.start)\n  jp nc, nx\n  push af\n  ld h,a\n  ld l,0\n  call do\n  popa\n  ld h,a\n  ld l,0\n  jp c, nx\n  inc a\n jr loop\n do:\nendm\n\nmacro th.new.range,st,en\n ld bc,st\n ld(th.new.start),bc\n ld bc,en\n ld(th.new.end),bc\nendm\n\ndefsub th.isblank.a\n ; h= thread\n ; z if true\n ld l, th.ofs.stp\n ld a,(hl)\n cp th.st.blank\nendsub th.isblank.a\n\ndefsub th.new\n; nc for alloc fail\nproc \n local lbend\n db 21h\n th.new.start:\n dw th.start\n db 11h\n th.new.end:\n dw th.end\n ld bc,th.size\n for lbend\n  ; TODO th.ofs.stp\n  call th.isblank.a\n  break z\n  continue\n lbend:\n ret nc\n ; TODO th.ofs.stp\n ld L,th.ofs.stp\n ld (HL),31h\n inc HL\n ld (HL),th.ofs.spini\n ld a,h\n inc HL\n ld (hl),a\n inc HL\n ld (HL),0c9h\n ld l,th.bottom\n scf\n ret\nendp\nendsub th.new\n\ndefsub th.init\nproc\n local lbend\n th.for.a lbend\n  ; TODO th.ofs.stp\n  ld L, th.ofs.stp\n  ld (HL),th.st.blank\n  continue\n lbend:\n ; disable timer\n ld HL,0fd9fh\n ld (hl),0c9h\n call susint\n ret\nendp\nendsub th.init\n\ndefsub th.stepall\n th.for.a thnx\n  ;todo th.ofs.stp\n  ld (th.cur),hl\n  call th.isblank.a\n  continue z\n  call th.step\n  continue\n thnx:\nendsub th.stepall\n\ndefsub th.step\n sp2mem adrssp+1\n ld HL,(th.cur)\n ld l,th.ofs.stp\n ;call susint\n jp (hl)\nendsub th.step\n\ndefsub th.yield\n ld hl,(th.cur)\n ld l,th.ofs.sp\n sp2mem\n adrssp:\n ld sp,0\n jp doint\nendsub th.yield\n\ndefsub th.term\n ld hl,(th.cur)\n ; TODO th.ofs.stp\n ld L,th.ofs.stp\n ld (hl),th.st.blank\n jr adrssp\nendsub th.term\n\nmacro th.with.do, to\n local pr\n th.with pr\n jr to\n pr:\nendm\n\nmacro th.with.setdst, reg\n ld (th.jpdest-2),reg\nendm\nmacro th.with,pr\n movw (th.jpdest-2), pr\n call th.with.s\nendm\nmacro th.with.ret\n jp th.ewith\nendm\n\ndefsub th.with.s\n sp2mem th.wrssp-2\n ld l, th.ofs.sp\n ld (th.updsp-2),hl\n mem2sp\n jp 0\n th.jpdest:\nth.ewith:\n ld (0),sp\n th.updsp:\n ld sp,0\n th.wrssp:\nendsub th.with.s\n \n\n \n \ndefsub th.push\n ;push bc to thread hl\n th.with tpsbc\n ret\n tpsbc:\n  push bc\n  th.with.ret 0\nendsub th.push\n\n\ndefwork th.cur\n dw 0\nendwork th.cur\n\ndefsub th.loop\n ; hook before stepall\n db 0cdh\n h.thent:\n dw th.nop\n ; save prev timecnt\n ld a,(timecnt)\n push af\n ; Do stepall\n call th.stepall\n ; hook after stepall\n db 0cdh\n h.thlop:\n dw th.nop\n ; wait until timecnt changes\n pop af\n bwat:\n  ld hl,timecnt\n  cp (hl)\n  jr nz,bbwat\n  push af\n  call doint\n  pop af\n  jr bwat\n bbwat:\n ; repeat\n jr th.loop\nendsub th.loop\n\nth.nop:\n ret\n\n\nmacro th.pushi, val\n ld bc,val\n call th.push\nendm\n\n`,\n    'sub':``,\n    'debug':`include math\n;debug\nmacro show,reg\n ld (hexval+1),reg\n call showhex\nendm\nmacro showm ,ad\n push hl\n ld HL,(ad)\n show HL\n pop HL\nendm\nmacro showlb,lb\n push hl\n ld hl,lb\n ld (hexval+1),hl\n call showhex\n pop hl\nendm\nshowhex:\nproc\n local loop\n push af\n push bc\n push HL\n hexval:\n ld hl,0\n ld b,4\n loop:\n  xor a\n  rept 4\n   slhl\n   rla\n  endm\n  call showhex1\n djnz loop\n ld a,32\n call wrt\n pop HL\n pop bc\n pop af\n ret\nendp\nshowhex1:\nproc\n local els\n cp 10\n jp nc, els\n add a,48\n jp wrt\n els:\n add a,65-10\n jp wrt\nendp\nabort:\n call wrt\n db 018h,0feh\nret\n\nmacro trace,v\n if not nul v\n  push af\n  ld a,v\n  ld (trad),a\n  pop af\n endif\n call trace.s\nendm\ntrace.s:\n push af\n push hl\n ld a,(trad)\n ld hl,1ae0h\n call wrt\n call 4dh\n inc a\n ld (trad),a\n ld a,32\n call wrt \n pop hl\n pop af\n ret\ntrad:\n db 65\n\nshowz:\n push af\n jr z,showz.s\n ld a,\"N\"\n call wrt\n showz.s:\n ld a,\"Z\"\n call wrt\n ld a,32\n call wrt\n pop af\n ret\n \n\nshowc:\n push af\n jr c,showc.s\n ld a,\"N\"\n call wrt\n showc.s:\n ld a,\"C\"\n call wrt\n ld a,32\n call wrt\n pop af\n ret\n \n\n\n\n\n\nmacro unreach, mesg\n trace mesg\n dw 0x18,0xfe\nendm\nmacro head, lb\n unreach lb\n marker.b lb\n lb:\nendm\n\nmacro defsub, n\n head n\nendm\nmacro endsub, n\n ret\n marker.e n\nendm\nmacro defwork, n\n head n\nendm\nmacro endwork, n\n marker.e n\nendm\n\ndefsub wrt\nproc\n local sk\n push hl\n push af\n ld hl,1800h\n cursor:\n call 4dh\n inc hl\n ld a,h\n cp 1bh\n jr c,sk\n  ld h,18h\n sk:\n ld (cursor-2),hl\n pop af\n pop hl\n ret\nendp\nendsub wrt\n`,\n    'sp':`include mem\ninclude debug\nmacro sp.get\n ld HL,0\n ADD hl, sp\nendm\nmacro sp.set\n ld sp,hl\nendm\nmacro mem2sp,ad\n local rs\n if nul ad\n  ld (rs-2),hl\n  ld sp,(0)\n  rs:\n else\n  ld sp,(ad)\n endif\nendm\nmacro sp2mem,ad\n local spad\n if nul ad\n  ld (spad-2),hl\n  ld (0),sp\n  spad:\n else\n  ld (ad),sp\n endif\nendm\n\nmacro showsp\n ld (sptmp),sp\n showm sptmp\nendm\nsptmp:\ndw 0\nmacro showstk\n showsp\n ld (sva),a\n ld a,\":\"\n call wrt\n ld a,(sva)\n ex (sp),hl\n show hl\n ex (sp),hl\nendm\nsva: db 0`,\n    'oop':`include mem\ninclude th\ninclude assert\n\n;a2 a1  oldpc oldix lcl1 lcl2\nargidx equ 2\nmacro getarg ,n\n ld l,(ix+argidx+n*2)\n ld h,(ix+argidx+n*2+1)\nendm\n\nmacro setlcl ,n\n ld (IX-(n*2-1)),h\n ld (ix-n*2),l\nendm\n\nmacro getlcl ,n\n ld h,(IX-(n*2-1))\n ld l,(ix-n*2)\nendm\n\nmacro addarg\n push hl\n; hl=arg  stktp=af\n;ex (sp),hl\n;ld a,h\n;push af\nendm\n\n\n\nmacro pusharg ,n\n getarg n\n push HL\nendm\n\nmacro pushlcl ,n\n getlcl n\n push HL\nendm\n\nmacro enter ,locals\n push ix\n ld ix,0\n add ix,sp\n rept locals\n  push HL\n endm\nendm\n\nmacro pops ,n\n rept n*2\n  inc sp\n endm\nendm\n\n\nmacro exit,n\n ld sp,ix\n pop ix\n if n!=0\n  exx\n  pop bc\n  pops n\n  push bc\n  exx\n endif\n ret\nendm\n\nmacro pushthis\n getthis\n push af\nendm\nmacro popthis\n popa\n ld (this),a\nendm\n\n\nmacro invoketg.a,fld,args\n; pushthis before arg push\n; hl=target \n ld a,h\n ld (this),a\n getfld fld\n callhl\n; pops args\n; popthis after \nendm\n\nmacro invoke,fld\n getfld fld\n callhl\n; pops args\n getthis\nendm\n\nmacro getfld, n\n local ad\n ld (ad-1),a\n ld hl,(n)\n ad:\nendm\n\nmacro setfld, n\n local ad\n ld (ad-1),a\n ld (n),hl\n ad:\nendm\n\nmacro getfldtg,n\n;hl=tg\n ld l,n\n peekw hl,hl\nendm\n\nmacro setfldtg,n\n; stk=val hl=tg\n ld l,n\n pop de\n pokew hl,de\nendm\n\nmacro getfldtg, n\n; hl=target\n ld d,h\n ld e,n\n peekw HL,de\nendm\n\nmacro tgconst,n\n ld (n-1),a\nendm\nmacro tgconst.g ,r16,n,fld\n ld r16,(fld)\n n:\nendm\nmacro tgconst.s ,n,fld,r16\n ld (fld),r16\n n:\nendm\n\n\nmacro curth2this\n ld a,(th.cur+1)\n ld (this),a\nendm\nmacro getthis\n ld a,(this)\nendm\n\nmacro new,Class,flds,st,en\n if nul st\n  th.new.range th.start, th.end\n else\n  th.new.range th.start+st*th.size, th.start+en*th.size\n endif\n pushi flds, bc\n pushi Class, bc\n call o.new\nendm\n\ndefsub o.new\nproc\n local retad,svthis,svsp,loop,lpend, w,allocfail,finally,lp2,lp2end\n ; {val .f} n &initbl retad\n pop hl;retad\n ld (retad-2),hl\n ; set initbl for th.with\n pop hl;&initbl\n th.with.setdst hl\n ; save this\n ld (svthis-1),a\n ; allocate thread\n call th.new\n jr nc, allocfail\n push hl; thread address\n call th.with.s; call &initbl\n pop hl; thread address\n ld a,h; set this as thread\n ; init fields\n pop bc; n of {val .f}\n inc c\n loop:\n  dec c\n  jr z,lpend\n  pop hl; .f\n  ld h,a\n  ld (w-2),hl\n  pop hl; val\n  ld (w),hl\n  w:\n jr loop\n lpend:\n ; return h as this\n ld h,a\n finally:\n  ;restore a before call o.new\n  ld a,0\n  svthis:\n  ;return \n  jp 0\n  retad:\n allocfail:\n  ; drop {val .f}\n  pop bc; n of {val .f}\n  ld b,c\n  inc c\n  lp2:\n   dec c\n   jr z, lp2end\n   pop hl\n   pop hl\n  jr lp2\n  lp2end:\n  ld hl,null;  todo null\n  jr finally\nendp\nendsub o.new\n\nmacro new.arg, n, v\n if not nul v\n  ld hl,v\n endif\n push hl\n pushi n,bc\nendm\n \nmacro o.assert.eq,fld, v\n local aa\n assert.do aa\n  getfld fld\n  assert.eq v\n  ret\n aa:\nendm\n\nthis:\ndb 0\n\nmacro fld.def,n\n n equ fldidx\n fldidx:defl fldidx-2\nendm\nmacro class,Class,super\n unreach \"c\"\n marker.b 0\n dw super\n fldidx:defl fld.top; todo fld.top\n Class:\n  fld .class,Class\nendm\nmacro fld.bottom,Class\n if defined Class##.bottom \n  if Class##.bottom ne fldidx\n   .error bottom ne fldidx\n  endif\n else\n Class##.bottom:defl fldidx\n endif\nendm \nmacro fld,n,v\n if defined n\n  if n ne fldidx\n   .error n ne fldidx\n  else \n   fldidx:defl fldidx-2\n  endif\n else\n  fld.def n\n endif\n pushi v,bc\nendm\nmacro unuse\n fldidx:defl fldidx-2\n pushi 0,bc\nendm\nmacro meth,Class,n\n fld .##n, Class##.##n\nendm\nmacro met2,Class,n\n fld n, Class##n\nendm\n\nclass Object,null\n fld .main,null\n fld.bottom Object\n marker.e Object\n\n\ndefsub o.boot\n curth2this\n invoke .main,0\nendsub o.boot\n\n\nmacro yield\n pushthis\n push ix\n call th.yield\n pop ix\n popthis\nendm\n\nmacro def,n,args,lcls\nhead n\n def.args:defl args\n def.locals:defl lcls\n if args>0 or lcls>0\n  enter lcls\n endif\nendm\nmacro enddef,n\n if def.args>0 or def.locals>0\n  exit def.args\n else\n  ret\n endif\n marker.e n\nendm\n\ndefsub isobj.a\n ;hl=obj?\n ;cy=true\n ld a,h\n cp high th.start\n jr c,notobj\n cp high th.end\n jr nc,notobj\n scf\n ret\n notobj:\n and a\nendsub isobj.a\n\ndefsub instanceof\n ; a=this de=Class\n ; z: true\n getfld .class\n jp is.subclass.a\nendsub instanceof\n\ndefsub get.superclass\n ; hl=Class\n dec hl\n dec hl\n peekw hl,hl\nendsub get.superclass\n\ndefsub is.subclass.a\nproc \n local top\n ; hl=Subclass\n ; de=Superclass\n ; z:true\n top:\n cpde.a 0\n ret z\n call get.superclass\n push de\n ld de,null\n cpde.a 0\n pop de\n jr nz,top\n cpde.a 0\nendp\nendsub is.subclass.a\n `,\n    'spr':`include const\ninclude th\ninclude mem\ninclude oop\ninclude sub\n\nclass Sprite,Object\n fld .main, 0\n fld.bottom Object\n fld .x, 100\n fld .y, 100\n fld .p, 0\n fld .c, 2\n fld.bottom Sprite\n marker.e Sprite\n \nmacro outwrt\n  out (98h),a\nendm\n\n\nmacro spr.unscale\n ; HL -> A\n rept spr.scale\n  srlhl\n endm\n LD A,L\n sub 8 \nendm\n\ndefsub spr.puts\nproc\n local t1,t2,t3,t4\n ld hl, 1b00h\n call SETWRT\n th.for.a sprl\n  ld a,h\n  tgconst t1\n  tgconst t2\n  tgconst t3\n  tgconst t4\n\n  tgconst.g hl,t1,.y \n  spr.unscale 0\n  outwrt 0\n  \n  tgconst.g hl,t2,.x \n  spr.unscale 0\n  outwrt 0\n  \n  tgconst.g a,t3,.p \n  sla a\n  sla a\n  outwrt 0\n  \n  tgconst.g a,t4,.c \n  outwrt 0\n  continue\n sprl:\nendp\nendsub spr.puts\n \n `,\n    'sprpat':`include const\n\n;aaa\nspr.inipat:\n ld de,3800h\n ld hl,spr.pat\n ld bc,128\n jp LDIRVM\nbg.inipat:\n ret\nspr.pat:\n; --- Slot 0 cat fstand\n; color 9\nDB $0C,$0E,$0F,$4F,$3D,$1D,$7F,$1B\nDB $0C,$3F,$7F,$7F,$6F,$0F,$06,$0C\nDB $18,$38,$F8,$F9,$DE,$DC,$7F,$6C\nDB $98,$FC,$FE,$FE,$F6,$F0,$60,$70\n; \n; --- Slot 1 cat fwalk1\n; color 9\nDB $0C,$0E,$0F,$4F,$3D,$1D,$7F,$1B\nDB $0C,$3F,$7F,$7F,$EF,$EF,$06,$06\nDB $18,$38,$F8,$F9,$DE,$DC,$7F,$6C\nDB $98,$FC,$FE,$FE,$D4,$78,$F0,$00\n; \n; --- Slot 2 cat fwalk2\n; color 9\nDB $18,$1C,$1F,$9F,$7B,$3B,$FE,$36\nDB $19,$3F,$7F,$7F,$2B,$1E,$0F,$00\nDB $30,$70,$F0,$F2,$BC,$B8,$FE,$D8\nDB $30,$FC,$FE,$FE,$F7,$F7,$60,$60\n; \n; --- Slot 3 cat omg\n; color 9\nDB $2C,$8E,$0F,$4B,$3D,$11,$7F,$1D\nDB $CA,$FF,$7F,$3F,$15,$1F,$0E,$00\nDB $1C,$39,$F8,$E9,$DE,$C4,$7F,$5C\nDB $AB,$FF,$FF,$FE,$AC,$F8,$70,$00\n\nds 60*32\n`,\n    'tnu':`\ninclude spr\ninclude bool\ninclude key\n\n;.onUpdate equ .c-2\n;.update equ .onUpdate-2\n;.screenOut equ .update-2\n;.die equ .screenOut-2\n;.updateEx equ .die-2\n\nmacro end.const, n\n pushi RActor.wait,bc\n pushi o.boot,bc\n th.with.ret 0 \n marker.e n\nendm\n\nmacro RActor.noovr,Class\n meth Class,main\n fld.bottom Object\n fld .x, 0\n fld .y, -1024\n fld .p, 0\n fld .c, 3\n fld.bottom Sprite\n meth RActor,onUpdate\n meth RActor,update\n meth RActor,screenOut \n meth RActor,die\n meth RActor,updateEx\n meth RActor,crashTo\n fld.bottom RActor\nendm\n\nclass RActor,Sprite\n RActor.noovr RActor\n end.const RActor\nRActor.main:\n enter 0\n exit 0\nRActor.update:\n invoke .onUpdate\n yield\n ret \nRActor.onUpdate:\n ret\nRActor.screenOut:\nproc\n local true\n getfld .x\n bit 1,h\n jr nz, true\n getfld .y\n ld de,192*2\n cpde.a\n getthis\n jr nc,true\n ld hl,0\n xor a\n ret\n true:\n ld hl,1\n scf\n ret\nendp\nRActor.wait:\nproc\n local lbl\n lbl:\n invoke .update\n jr lbl\nendp\ndef RActor.die,0,0\n ld h,a\n ld l,th.ofs.stp\n ld (hl),th.st.blank\n ld hl, 0\n setfld .c\nenddef RActor.die\n\ndef RActor.updateEx,1,0\nproc \n local n\n; enter 0\n getarg 1\n ld b,h\n ld c,l\n reptbc n\n  invoke .update\n  continue\n n:\nendp\nenddef RActor.updateEx\n\ncrashTo.size equ 8<<spr.scale\n\nproc\n local gx,gy,t1,t2\n local endc,cr1\n local fe\n\ndefsub crashTo.setXY\n getfld .x\n const gx,hl\n getfld .y\n const gy,hl\nendsub crashTo.setXY\n\n\ndef RActor.crashTo,1,0\n call crashTo.setXY\n getarg 1\n const cr.class,hl\n call isobj.a\n jr c, cr1\n  unreach \"C\"\n  ; \"Cannot call target.crashTo(Class) \"\n  ;ld hl, th.start\n  ;ld de, th.end\n  ;call crashTo1\n  ;jr endc\n cr1:\n  getthis 0\n  call crashTo1\n  flagtobool c\n endc:\nenddef RActor.crashTo\n\nmacro crashToClass,Class,st,en\n local nx,found\n ; a=this\n call crashTo.setXY\n foreach.a Class,st,en,nx\n  call crashTo1\n  break c\n  continue\n nx:\n getthis 0\n jr c, found\n  ld hl,null\n found:\nendm\n\nmacro foreach.a, Class,st,en,nxt\n th.for.a nxt, st, en\n  all.skip Class\nendm\n\n\nmacro all.skip.blank.self\n ; skip blank\n  ; TODO th.ofs.stp\n  call th.isblank.a\n  continue z\n  ; skip hl==this\n  getthis 0\n  cp h\n  continue z\nendm\nmacro all.skip.isnot,Class\n  ; skip object not instance of *Class*\n  push hl\n  ld a,h\n  ld de,Class\n  call instanceof\n  getthis 0\n  pop hl\n  continue nz\nendm\nmacro all.skip, Class\n all.skip.blank.self 0\n all.skip.isnot Class\nendm\n\ndefsub crashToC.abolished\n ;before:\n ; call crashTo.setXY\n ; const cr.class,Class\n ; hl start\n ; de end\n ld bc,th.size\n for fe\n  all.skip.blank.self 0\n  ; skip object not instance of *Class*\n  push hl\n  ld a,h\n  ldconst de,cr.class\n  call instanceof\n  pop hl\n  continue nz\n  ; do crashTo1\n  getthis 0\n  call crashTo1\n  break c\n  continue\n fe:\n getthis 0\n ret c\n ld hl,null\nendsub crashToC.abolished\n\ndefsub crashTo1\n ; call crashTo.setXY before\n ;hl=tg\n ;cy:true\n ;hl is used\n push af\n ld a,h\n tgconst t1\n tgconst t2\n pop af\n tgconst.g hl,t1,.x\n ldconst bc,gx\n subhl bc\n call abs\n ld bc,crashTo.size\n subhl bc\n ret nc\n\n tgconst.g hl,t2,.y\n ldconst bc,gy\n subhl bc\n call abs\n ld bc,crashTo.size\n subhl bc\nendsub crashTo1\n\nendp\n\n\nmacro tnu.run,Main\n ld sp,sp.ini\n call screen2\n \n showsp\n showlb endusr\n call spr.inipat\n call bg.inipat\n\n ld hl,th.start\n ld (hl),0cdh\n ld de,th.start+1\n ld bc,th.size*th.count-1\n ldir\n \n call th.init\n ;call mus.ini\n new Main, 0\n movw (h.thlop),spr.puts\n movw (h.thent),keyall\n jp th.loop\nendm\n\n;aaaa`,\n    'key':`include debug\n\ndefsub keyall\nproc\n;show hl\n local lp\n ld hl,keymat1\n ld de,keymat2\n ld bc,11\n ldir\n ld a,0\n ld hl,keymat1\n lp:\n push af\n call SNSMAT.a\n xor 255\n ld (hl),a\n pop af\n inc hl\n inc a\n cp 11\n jr c,lp\nendp\nendsub keyall\n\ndefwork keymat1\nds 11\nendwork keymat1\ndefwork keymat2\nds 11\nendwork keymat2\n\n\nproc\ndefsub getkey.a\nlocal chkmat\nex de,hl\nld hl,keymat1\ncall chkmat\nld hl,0\nret z\nld hl,keymat2\ncall chkmat\nld hl,1\nret z\ninc hl\nendsub getkey.a\n\ndefsub chkmat\npush de\nld a,d\nld d,0\nadd hl,de\nand (hl)\npop de\nendsub chkmat\n\ndefsub getkey\npush af\ncall getkey.a\npop af\nendsub getkey\n\nendp`,\n    'map':`include sub\ninclude math\ninclude tnu\n\ndefsub map.adr\n ; hl=chipx\n ; de=chipy\n rept 5\n  slde 0\n endm\n add hl,de\n ld de,1800h\n add hl,de\nendsub map.adr\n\ndefsub map.set.a\n ;  a=data\n call map.adr\n call 4dh\nendsub map.set.a\n\ndefsub map.get.a\n call map.adr\n call 4ah \nendsub map.get.a\n\ndefsub map.adrat.a\n ; hl=spr_x\n ; de=spr_y\n spr.unscale 0\n srl a\n srl a\n srl a\n push af\n ex de,hl\n spr.unscale 0\n srl a\n srl a\n srl a\n ld d,0\n ld e,a\n pop hl\n ld l,h\n ld h,0\n inc hl\n inc de\n call map.adr\nendsub map.adrat.a\n\ndefsub map.getat.a\n call map.adrat.a\n call 4ah\nendsub map.getat.a\n\ndefsub map.setat.a\n ; a=data\n push af\n call map.adrat.a\n pop af\n call 4dh\nendsub map.setat.a\n\ndefsub locate\n ; hl=chipx\n ; de=chipy\n call map.adr\n ld (cursor-2),hl\nendsub locate\n`,\n    'maze':``,\n    't1':`org 09000h\njp main\ninclude const\ninclude ctrl\ninclude math\ninclude debug\ninclude sub\ninclude mem\ninclude tnu\ninclude sp\n\n;===your code \n\nright:dw 0\n\nmain:\ntnu.run Main\ndef Main.main,0,0\nnew.arg .vx,1\nnew.arg .vy,0\nnew.arg .x,0\nnew.arg .y,100\nnew Cat,4\n\nnew.arg .x,100\nnew.arg .y,100\nnew Target,2\n\nld (right),hl\nld a,h\nld de,RActor\ncall instanceof\ncall showz\n\nld a,(right+1)\nld de,Target\ncall instanceof\ncall showz\n\nld a,(right+1)\nld de,Cat\ncall instanceof\ncall showz\n\n\nld hl,1\nsetfld .c\nenddef 0\n\nclass Main,RActor\n RActor.noovr Main\n end.const Main\nclass Target,RActor\n RActor.noovr Target\n met2 Target,.push\n end.const Target\ndef Target.main,0,0\nenddef\nclass Cat,RActor\n RActor.noovr Cat\n fld .vy, 0\n fld .vx, 0\n fld.bottom Cat\n end.const Cat\ndef Cat.main,0,0\n blp:\n  ld hl,0108h\n  call getkey\n  jpf nomov\n  getthis\n  ;x+=vx\n  getfld .x\n  ex de, hl\n  getfld .vx\n  add hl,de\n  setfld .x\n  nomov:\n  ; y+=vy\n  getfld .y\n  ex de, hl\n  getfld .vy\n  add hl,de\n  setfld .y\n  ld hl,(right)\n  push hl\n  invoke .crashTo\n  jpf cr\n   ; r.x+=10\n   ld hl,(right)\n   getfldtg .x\n   ld de,10\n   add hl,de\n   push hl\n   ld hl,(right)\n   setfldtg .x\n   ; r.push()\n   pushthis 0\n   ld hl,(right)\n   invoketg.a .push\n   popthis 0\n  cr:\n  invoke .update\n jp blp\nenddef\n; test t1\ndef Target.push,0,0\n ld hl,3\n setfld .p\n repti 30,pse\n  getfld .x\n  inc hl\n  setfld .x\n  invoke .update\n  continue\n pse:\n ld hl,0\n setfld .p\nenddef\n\nendusr: \ninclude sprpat\n\nend main\nhttps://msxpen.com/codes/-N6DDfMvZq9aUeJ9JLpN\nhttps://msxpen.com/codes/-N6QGYk-rr5iDuTtHpF7`,\n    't2':`org 08000h\ninclude tnu\ninclude bool\ninclude map\n\nmain:\ntnu.run Main\n;range 0-5\nclass EBullet,RActor\n meth EBullet,main\n fld .x,0\n fld .y,0\n fld .p,0\n fld .c,0\n meth RActor,onUpdate\n meth RActor,update\n meth RActor,screenOut\n meth RActor,die\n meth RActor,updateEx\n meth RActor,crashTo\n fld .vx,0\n fld .vy,0\n end.const 0\ndef EBullet.main,0,0\n ;p=7;\n ld hl,7\n setfld .p\n ;c=15;\n ld hl,15\n setfld .c\n lb1:\n ld hl,true\n jpf lb2\n ;x+=vx;\n getfld .vx\n push hl\n getfld .x\n pop de\n add hl, de\n setfld .x\n ;y+=vy;\n getfld .vy\n push hl\n getfld .y\n pop de\n add hl, de\n setfld .y\n invoke .screenOut\n jpf lb4\n ;die();\n invoke .die\n jp lb3\n lb4:\n lb3:\n ;update();\n invoke .update\n jp lb1\n lb2:\n ret\n;range 5-15\nclass Enemy,RActor\n meth Enemy,main\n fld .x,0\n fld .y,0\n fld .p,0\n fld .c,0\n meth RActor,onUpdate\n meth RActor,update\n meth RActor,screenOut\n meth RActor,die\n meth RActor,updateEx\n meth RActor,crashTo\n fld .vx,0\n fld .bvx,0\n fld .bvy,0\n fld .bdist,0\n meth Enemy,fire\n end.const 0\ndef Enemy.main,0,0\n lb5:\n ld hl,200\n push hl\n getfld .y\n pop de\n call hlltde\n jpf lb6\n ;y+=2;\n ld hl,2\n push hl\n getfld .y\n pop de\n add hl, de\n setfld .y\n ;update();\n invoke .update\n jp lb5\n lb6:\n ld hl,(gbl_player)\n getfldtg .x\n push hl\n getfld .x\n pop de\n call hlgtde\n jpf lb8\n ;vx=0-2;\n ld hl,2\n push hl\n ld hl,0\n pop de\n subhl de\n setfld .vx\n jp lb7\n lb8:\n ;vx=2;\n ld hl,2\n setfld .vx\n lb7:\n ;fire();\n invoke .fire\n lb9:\n ld hl,true\n jpf lb10\n invoke .screenOut\n jpf lb12\n ;die();\n invoke .die\n jp lb11\n lb12:\n lb11:\n ;y+=2;\n ld hl,2\n push hl\n getfld .y\n pop de\n add hl, de\n setfld .y\n ;x+=vx;\n getfld .vx\n push hl\n getfld .x\n pop de\n add hl, de\n setfld .x\n ;update();\n invoke .update\n jp lb9\n lb10:\n ret\ndef Enemy.fire,0,0\n ;bvx=$player.x-x;\n getfld .x\n push hl\n ld hl,(gbl_player)\n getfldtg .x\n pop de\n subhl de\n setfld .bvx\n ;bvy=$player.y-y;\n getfld .y\n push hl\n ld hl,(gbl_player)\n getfldtg .y\n pop de\n subhl de\n setfld .bvy\n ;bdist=abs(bvx)+abs(bvy);\n getfld .bvy\n call abs\n push hl\n getfld .bvx\n call abs\n pop de\n add hl, de\n setfld .bdist\n ;bdist/=8;\n pushthis\n getfld .bdist\n push hl\n ld hl,8\n pop de\n call IDIV.a\n popthis\n setfld .bdist\n ;bvx/=bdist;\n pushthis\n getfld .bvx\n push hl\n getfld .bdist\n pop de\n call IDIV.a\n popthis\n setfld .bvx\n ;bvy/=bdist;\n pushthis\n getfld .bvy\n push hl\n getfld .bdist\n pop de\n call IDIV.a\n popthis\n setfld .bvy\n ;new EBullet{        x,y,vx:bvx,vy:bvy    };\n getfld .x\n new.arg .x\n getfld .y\n new.arg .y\n getfld .bvx\n new.arg .vx\n getfld .bvy\n new.arg .vy\n new EBullet,4,0,5\n ret\n;range 0-5\nclass Main,RActor\n meth Main,main\n fld .x,0\n fld .y,0\n fld .p,0\n fld .c,0\n meth RActor,onUpdate\n meth RActor,update\n meth RActor,screenOut\n meth RActor,die\n meth RActor,updateEx\n meth RActor,crashTo\n fld .i,0\n end.const 0\ndef Main.main,0,0\n ;$player=new Player{x:256, y: 300, p:$pat_spr+4, c:15};\n ld hl,256\n new.arg .x\n ld hl,300\n new.arg .y\n ld hl,4\n push hl\n ld hl,(gbl_pat_spr)\n pop de\n add hl, de\n new.arg .p\n ld hl,15\n new.arg .c\n new Player,4,0,5\n ld (gbl_player),hl\n ld hl,0\n setfld .i\n lb13:\n ld hl,20\n push hl\n getfld .i\n pop de\n call hlltde\n jpf lb14\n ;new Enemy{x:rnd(512), y:0, p:5, c:7};\n ld hl,512\n call rnd\n new.arg .x\n ld hl,0\n new.arg .y\n ld hl,5\n new.arg .p\n ld hl,7\n new.arg .c\n new Enemy,4,5,15\n ;updateEx(30);\n ld hl,30\n push hl\n invoke .updateEx\n jp lb13\n lb14:\n ret\n;range 15-20\nclass PBullet,RActor\n meth PBullet,main\n fld .x,0\n fld .y,0\n fld .p,0\n fld .c,0\n meth PBullet,onUpdate\n meth RActor,update\n meth RActor,screenOut\n meth RActor,die\n meth RActor,updateEx\n meth RActor,crashTo\n fld .e,0\n end.const 0\ndef PBullet.main,0,0\n ;p=6;\n ld hl,6\n setfld .p\n ;c=8;\n ld hl,8\n setfld .c\n lb15:\n ld hl,true\n jpf lb16\n invoke .screenOut\n jpf lb18\n ;die();\n invoke .die\n jp lb17\n lb18:\n lb17:\n ;y-=6;\n ld hl,6\n push hl\n getfld .y\n pop de\n subhl de\n setfld .y\n crashToClass Enemy, 5, 15\n setfld .e\n getfld .e\n jpf lb20\n ;e.die();\n pushthis 0\n getfld .e\n invoketg.a .die\n popthis 0\n ;die();\n invoke .die\n jp lb19\n lb20:\n lb19:\n ;update();\n invoke .update\n jp lb15\n lb16:\n ret\ndef PBullet.onUpdate,0,0\n ;c+=1;\n ld hl,1\n push hl\n getfld .c\n pop de\n add hl, de\n setfld .c\n ld hl,14\n push hl\n getfld .c\n pop de\n call hlgtde\n jpf lb22\n ;c=0;\n ld hl,0\n setfld .c\n jp lb21\n lb22:\n lb21:\n ret\n;range 0-5\nclass Player,RActor\n meth Player,main\n fld .x,0\n fld .y,0\n fld .p,0\n fld .c,0\n meth RActor,onUpdate\n meth RActor,update\n meth RActor,screenOut\n meth RActor,die\n meth RActor,updateEx\n meth RActor,crashTo\n end.const 0\ndef Player.main,0,0\n lb23:\n ld hl,3\n ld de,10\n call locate\n getfld .y\n ld a,l\n call wrt\n ld a,h\n call wrt\n getthis 0\n \n ex de,hl\n getfld .x\n ld a,35\n call map.setat.a\n getthis 0\n ld hl,true\n jpf lb24\n ld hl, 4104\n call getkey\n jpf lb26\n ;x-=3;\n ld hl,3\n push hl\n getfld .x\n pop de\n subhl de\n setfld .x\n jp lb25\n lb26:\n lb25:\n ld hl, 32776\n call getkey\n jpf lb28\n ;x+=3;\n ld hl,3\n push hl\n getfld .x\n pop de\n add hl, de\n setfld .x\n jp lb27\n lb28:\n lb27:\n ld hl, 8200\n call getkey\n jpf lb30\n ;y-=3;\n ld hl,3\n push hl\n getfld .y\n pop de\n subhl de\n setfld .y\n jp lb29\n lb30:\n lb29:\n ld hl, 16392\n call getkey\n jpf lb32\n ;y+=3;\n ld hl,3\n push hl\n getfld .y\n pop de\n add hl, de\n setfld .y\n jp lb31\n lb32:\n lb31:\n crashToClass Enemy, 5, 15\n jpf lb34\n ;die();\n invoke .die\n jp lb33\n lb34:\n lb33:\n crashToClass EBullet, 0, 5\n jpf lb36\n ;die();\n invoke .die\n jp lb35\n lb36:\n lb35:\n ld hl,1\n push hl\n ld hl, 264\n call getkey\n pop de\n call hleqde\n jpf lb38\n ;new PBullet{x,y};\n getfld .x\n new.arg .x\n getfld .y\n new.arg .y\n new PBullet,2,15,20\n foreach.a Enemy,5,14,nxx\n  ld a,h\n  ld hl,8\n  setfld .c\n  continue \n nxx:\n getthis 0\n \n \n jp lb37\n lb38:\n lb37:\n ;update();\n invoke .update\n jp lb23\n lb24:\n ret\nenddef 0\nendusr:\ngbl_player:dw 0\ngbl_pat_spr:dw 0\nspr.inipat:\n ld de,3800h\n ld hl,spr.pat\n ld bc,2048\n jp LDIRVM\nspr.pat:\ndb $c,$e,$f,$4f,$3d,$1d,$7f,$1b,$c,$3f,$7f,$7f,$6f,$f,$6,$c\ndb $18,$38,$f8,$f9,$de,$dc,$7f,$6c,$98,$fc,$fe,$fe,$f6,$f0,$60,$70\ndb $c,$e,$f,$4f,$3d,$1d,$7f,$1b,$c,$3f,$7f,$7f,$ef,$ef,$6,$6\ndb $18,$38,$f8,$f9,$de,$dc,$7f,$6c,$98,$fc,$fe,$fe,$d4,$78,$f0,$0\ndb $18,$1c,$1f,$9f,$7b,$3b,$fe,$36,$19,$3f,$7f,$7f,$2b,$1e,$f,$0\ndb $30,$70,$f0,$f2,$bc,$b8,$fe,$d8,$30,$fc,$fe,$fe,$f7,$f7,$60,$60\ndb $2c,$8e,$f,$4b,$3d,$11,$7f,$1d,$ca,$ff,$7f,$3f,$15,$1f,$e,$0\ndb $1c,$39,$f8,$e9,$de,$c4,$7f,$5c,$ab,$ff,$ff,$fe,$ac,$f8,$70,$0\ndb $1,$1,$1,$2,$3,$92,$96,$f6,$f6,$fe,$fe,$fe,$ff,$af,$26,$0\ndb $80,$80,$80,$40,$c0,$49,$69,$6f,$6f,$7f,$7f,$7f,$ff,$f5,$64,$0\ndb $8,$10,$30,$30,$18,$f,$3f,$37,$7b,$7d,$3f,$1f,$37,$60,$70,$c\ndb $8,$4,$6,$6,$c,$f8,$fe,$f6,$ef,$df,$fe,$fc,$f6,$3,$7,$18\ndb $0,$1,$1,$1,$1,$1,$1,$1,$1,$1,$1,$1,$1,$1,$0,$0\ndb $80,$c0,$c0,$c0,$c0,$c0,$c0,$c0,$c0,$c0,$c0,$c0,$c0,$c0,$80,$0\ndb $0,$0,$0,$0,$3,$f,$f,$1f,$1f,$1f,$1f,$f,$f,$3,$0,$0\ndb $0,$0,$0,$0,$c0,$f0,$f0,$f8,$f8,$f8,$f8,$f0,$f0,$c0,$0,$0\nbg.inipat:\n ret\n\n\nend main`,\n    't3':`org 09000h\n\ninclude tnu\ninclude mus\ninclude sprpat\n\n;===your code \n\nmain:\nld sp,(8000h)\n\ncall screen1\n\nshowsp\nshowlb endusr\n\nld hl,8000h\nld (hl),0cdh\nld de,8001h\nld bc,th.size*th.count-1\nldir\n\n\ncall th.init\ncall spr.inipat\n;call mus.ini\n\n\nnew Main, 0\nshow hl\n\n\nmovw (h.thlop),spr.puts\njp th.loop\n\nclass Main, RActor\n meth Main,main\n fld.bottom Object\n fld .x,100\n fld .y,300\n fld .p,0\n fld .c,3\n fld.bottom Sprite\n meth RActor,onUpdate\n meth RActor,update\n meth RActor,screenOut \n meth RActor,die\n meth RActor,updateEx\n meth RActor,crashTo\n fld.bottom RActor\n fld.bottom Main\n end.const\n\nMain.main:\n olp:\n  getthis\n  invoke .update\n  call xrnd.a\n  ld a,h\n  and 15\n  jr nz,doap\n   getthis\n   getfld .x\n   new.arg .x\n   getfld .y\n   new.arg .y\n   ld hl,7\n   call rnd.a\n   ld de,3\n   sbc hl,de\n   new.arg .vx\n   ld hl,5\n   call rnd.a\n   ld de,15\n   sbc hl,de\n   new.arg .vy\n   new Bullet, 4\n   call dstk\n  doap:\n  ld a,8\n  call SNSMAT.a\n  and 1\n  jr z,golf\n  \n  getthis\n  getfld .x\n  inc hl\n  inc hl\n  setfld .x\n  ld de,400\n  cpde.a\n  jp c, olp\n  golf:\n  ld hl,0\n  getthis\n  setfld .x\n jp olp\n\n\nclass Bullet,RActor\n meth Bullet,main\n fld.bottom Object\n fld .x, 0\n fld .y, 0\n fld .p, 2\n fld .c, 15\n fld.bottom Sprite\n meth RActor,onUpdate\n meth RActor,update\n meth RActor,screenOut \n meth RActor,die\n meth RActor,updateEx\n meth RActor,crashTo\n fld.bottom RActor\n fld .vy, -10\n fld .vx, 0\n fld.bottom Bullet\n end.const \n \nBullet.main:\n blp:\n  getthis\n  ;x+=vx\n  getfld .x\n  ex de, hl\n  getfld .vx\n  add hl,de\n  setfld .x\n  ; y+=vy\n  getfld .y\n  ex de, hl\n  getfld .vy\n  add hl,de\n  setfld .y\n  getfld .vy\n  inc hl\n  setfld .vy\n\n  invoke .update\n  invoke .screenOut\n  jp c, bdie\n  getfld .vy\n  bit 7,h\n  jr nz,blp\n  ld de,5\n  cpde.a\n  jr c,blp\n \n  call dstk\n  getthis\n  ld hl,3\n  setfld .p\n  pushi 10,bc\n  invoke .updateEx\n\n bleft:\n  getthis\n  ld hl,2\n  setfld .p\n  getfld .x\n  dec hl\n  dec hl\n  setfld .x\n  getfld .y\n  dec hl\n  setfld .y\n  invoke .update\n  invoke .screenOut\n  jr c, bdie\n  jr bleft\n bdie:\n  invoke .die\n  ret \n\n  \ndstk:\n push af\n ld hl,th.start+256*3\n getthis\n ld h,a\n ld de,1900h\n ld bc,256\n call LDIRVM\n pop af\n ret\n \nendusr:\nend main`,\n    't4':`org 09000h\njp main\ninclude const\ninclude ctrl\ninclude math\ninclude debug\ninclude sub\ninclude mem\ninclude tnu\ninclude sp\n\n;===your code \n\nright:dw 0\n\nmain:\ntnu.run Main\ndef Main.main,0,0\nnew.arg .vx,1\nnew.arg .vy,0\nnew.arg .x,0\nnew.arg .y,100\nnew Cat,4\n\nnew.arg .x,100\nnew.arg .y,100\nnew Target,2\n\nnew.arg .x,200\nnew.arg .y,100\nnew Target,2\n\n\nnew.arg .x,150\nnew.arg .y,100\nnew.arg .c,8\nnew NTarget,3\n\nld (right),hl\nld a,h\nld de,Actor\ncall instanceof\ncall showz\n\nld a,(right+1)\nld de,Target\ncall instanceof\ncall showz\n\nld a,(right+1)\nld de,Cat\ncall instanceof\ncall showz\n\n\nld hl,1\nsetfld .c\nenddef 0\n\nclass Main,Actor\n Actor.noovr Main\n end.const 0\nclass Target,Actor\n Actor.noovr Target\n met2 Target,.push\n end.const 0\nclass NTarget,Actor\n Actor.noovr NTarget\n end.const 0\ndef NTarget.main,0,0\n ret\nenddef\n\ndef Target.main,0,0\nenddef\nclass Cat,Actor\n Actor.noovr Cat\n fld .vy, 0\n fld .vx, 0\n fld.bottom Cat\n end.const 0\ndef Cat.main,0,0\n blp:\n  getthis\n  ;x+=vx\n  getfld .x\n  ex de, hl\n  getfld .vx\n  add hl,de\n  setfld .x\n  ; y+=vy\n  getfld .y\n  ex de, hl\n  getfld .vy\n  add hl,de\n  setfld .y\n  ld hl,Target\n  push hl\n  invoke .crashTo\n  jpf cr\n   ; r.x+=10\n   const setg,hl\n   getfldtg .y\n   ld de,30\n   add hl,de\n   push hl\n   ldconst hl,setg\n   setfldtg .y\n  cr:\n  invoke .update\n jp blp\nenddef\ndef Target.push,0,0\n ld hl,3\n setfld .p\n repti 30,pse\n  getfld .y\n  inc hl\n  setfld .y\n  invoke .update\n  continue\n pse:\n ld hl,0\n setfld .p\nenddef\n\nendusr: \nend main\nhttps://msxpen.com/codes/-N6DDfMvZq9aUeJ9JLpN\nhttps://msxpen.com/codes/-N6QGYk-rr5iDuTtHpF7`,\n    't5':`org 9000h\n\n\ninclude key\n\nmain:\ncall keyall\nld hl,0108h\ncall getkey\nshow hl\nld hl,0107h\ncall getkey\nshow hl\n\n\nhalt\njp main`,\n    'gen':`org 09000h\ninclude tnu\ninclude bool\n\nmain:\ntnu.run Main\nclass Main,Actor\n Actor.noovr Main\n end.const 0\ndef Main.main,0,0\n\n showlb .main\n showlb .crashTo\nenddef 0\nendusr:\nend main`,\n    'dac':`org 09000h\njp main\ninclude const\ninclude ctrl\ninclude math\ninclude debug\ninclude sub\ninclude mem\ninclude th\n\n\nDECSUB equ 268CH;DAC ← DAC-ARG\nDECADD equ 269AH;DAC ← DAC+ARG\nDECNRM equ 26FAH;DAC を正規化する (*1)\nDECROU equ 273CH;DAC を四捨五入する\nDECMUL equ 27E6H;DAC ← DAC*DAC\nDECDIV equ 289FH;DAC ← DAC/DAC\nMAF equ 2C4DH;ARG ← DAC\nMAM equ 2C50H;ARG ← [HL]\nMOV8DH equ 2C53H;[DE] ← [HL]\nMFA equ 2C59H;DAC ← ARG\nMFM equ 2C5CH;[HL] ← DAC\nMMF equ 2C67H;[HL] ← DAC\nMOV8HD equ 2C6AH;[HL] ← [DE]\nXTF equ 2C6FH;[SP] ←→ DAC\nPHA equ 2CC7H;ARG → [SP]\nPHF equ 2CCCH;DAC → [SP]\nPPA equ 2CDCH;[SP] → ARG\nPPF equ 2CE1H;[SP] → DAC\nPUSHF equ 2EB1H;DAC → [SP]\nMOVFM equ 2EBEH;DAC ← [HL]\nMOVFR equ 2EC1H;DAC ← (CBED)\nMOVRF equ 2ECCH;(CBED) ← DAC\nMOVRMI equ 2ED6H;(CBDE) ← [HL]\nMOVRM equ 2EDFH;(BCDE) ← [HL]\nMOVMF equ 2EE8H;[HL] ← DAC\nMOVE equ 2EEBH;[HL] ← [DE]\nVMOVAM equ 2EEFH;ARG ← [HL]\nMOVVFM equ 2EF2H;[DE] ← [HL]\nVMOVE equ 2EF3H;[HL] ← [DE]\nVMOVFA equ 2F05H;DAC ← ARG\nVMOVFM equ 2F08H;DAC ← [HL]\nVMOVAF equ 2F0DH;ARG ← DAC\nVMOVMF equ 2F10H;[HL] ← DAC\n\nVALTYP equ 0F663H;1\nDAC equ 0F7F6H;16\nARG equ 0F847H;16\nFOUT equ 3425H\n\ndefsub int2dac\n push af\n ld a,2\n ld (VALTYP),a\n ld (DAC+2),HL\n pop af\nendsub int2dac\n;===your code \n\nmain:\nld hl,12345\ncall int2dac\nld hl,str\ncall FOUT\n\nld b,10\nreptb nxt\n ld a,(hl)\n cp 0\n break z\n call wrt2\n inc hl\n continue\nnxt:\nret\nstr:\n\n\n`,\n    'setvrm':`org 09000h\njp main\ninclude const\ninclude ctrl\ninclude math\ninclude debug\ninclude sub\ninclude mem\ninclude th\n\n;===your code \n\nmain:\nld hl,1800h\ncall SETWRT\nld a,35\nrepti 5, ed\ninc a\nout (98h),a\ncontinue\ned:\nret`,\n    'assert':`include mem\ninclude math\ninclude debug\n\na.reg.trc:\ndw 0\na.reg.adr:\ndw 0\na.reg.min:\ndw 0\na.reg.val:\ndw 0\na.reg.max:\ndw 0\nmacro a.regi,n,v\n push hl\n ld hl,v\n ld (a.reg.##n),hl\n pop hl\nendm\nmacro a.regr,n,v\n ld (a.reg.##n),v\nendm\n\nmacro a.dummy\n local a.reg.,trc,adr,min,val,nax\nendm\n \n\nmacro assert.eq,o\n storelastpc\n pushall \n if not nul o\n  a.regi val, o\n endif\n ld de,(a.reg.val)\n ld(a.reg.val),hl\n ld(a.reg.min),de\n ld(a.reg.max),de\n cpde\n jp nz,assert.fail\n popall\nendm\n\nmacro assert.do,nx\n storelastpc\n pushall\n call to\n popall\n jr nx\n to:\nendm\n\nmacro storelastpc\n push hl\n call getpc\n ld (lastpc),hl\n pop hl\nendm\nlastpc:\n dw 0\n \ngetpc:\n pop hl\n push hl\n ret\n\nassert.fail:\n ld hl,0deadh\n show hl\n showm a.reg.trc\n showm a.reg.min\n showm a.reg.val\n showm a.reg.max\n showm a.reg.adr\n showm lastpc\n call freeze\nmacro assert.meqw,ad,val\n a.regi adr,ad\n push hl\n ld hl,(ad)\n assert.eq val\n pop hl\nendm\n `,\n    'stksz':`org 09000h\njp main\ninclude const\ninclude ctrl\ninclude math\ninclude debug\ninclude sub\ninclude mem\ninclude th\n\n\n;===your code \n\nsz equ 256\n  \nmain:\nld hl,0fd9fh\nld (hl),0c9h\n rept sz/2\n  push hl\n endm\n rept sz/2\n  pop hl\n endm\n\nloop:\n getsp\n ld de,-sz\n add hl,de\n ld de,1800h\n ld bc,sz\n call LDIRVM\n ld hl,0\n halt\n jp loop\n \n \n `,\n    'vdp':`;https://www.msx.org/wiki/VDP_Status_Registers\n;st 0 bit 7\n;read 1\n\n;https://www.msx.org/wiki/VDP_Mode_Registers\n;ctrl 1 bit 5 set 0\ninclude const\n\nsusint:\n ld a,(RG1SAV)\n res 5,a\n ld b,A\n ld c,1\n jp WRTVDP\n;rstint:\n ld a,(RG1SAV)\n set 5,a\n ld b,A\n ld c,1\n jp WRTVDP\ninted:\n call RDVDP\n bit 7,a\n ret\ndoint:\n call inted\n jr z, norst\n ld hl,timecnt\n inc (hl)\n call h.tntimi\n norst:\n ;call rstint\n ret\nh.tntimi:\n ld A,(timecnt)\n ld hl,1ae0h\n call 4dh\n ret\n ds 16\n \ntimecnt:\ndb 0\nmacro vdptest\nlocal stk1,stk2,stk3,vl\nstk1:\n ds 256,35\nstk2:\n ds 256,42\nstk3:\n\nvl:\n call susint\n ld sp,stk2\n ld hl,stk1\n ld de,1800h\n ld bc,256\n call LDIRVM\n \n \n ld sp,stk3\n call doint\n ld hl,stk2\n ld de,1900h\n ld bc,256\n call LDIRVM\n jp vl\nendm\n \nscreen1:\n ld a,1\n call CHGMOD\n ld a,(RG1SAV)\n set 1,a\n ld b,A\n ld c,1\n call WRTVDP\n ret\n\ndefsub screen2\n ld a,2\n call CHGMOD\n ld a,(RG1SAV)\n set 1,a\n ld b,A\n ld c,1\n call WRTVDP\nendsub screen2\n `,\n    'mus':`include mem\nmus.ini:\n di\n ld hl,0fd9fh\n ld (hl),0c3h\n movw (0fd9fh+1),mus\n ei\n ret\nmus:\nproc\nlocal we\n push af\n push de\n ld a,(we-1)\n xor 15\n ld (we-1),a \n ld a,8\n ld e,15\n we:\n call WRTPSG\n pop af \n pop de\n ret\nendp`,\n};\n","extends TObject;\r\nlet idx=256-4-2;\r\nlet _n2idx={};//optimized\r\nlet _n2seq={};//not optimized\r\n\r\n\\fldidx(){\r\n    let def=`Actor.noovr,Class\r\n fld .class,Class\r\n meth Class,main\r\n fld.bottom Object\r\n fld .x, 0\r\n fld .y, -1024\r\n fld .p, 0\r\n fld .c, 3\r\n fld.bottom Sprite\r\n meth Actor,onUpdate\r\n meth Actor,update\r\n meth Actor,screenOut \r\n meth Actor,die\r\n meth Actor,updateEx\r\n meth Actor,crashTo\r\n fld.bottom Actor\r\nendm\r\n`;\r\n    let fldp=/fld \\.(\\w+)/;\r\n    let metp=/meth.*,(\\w+)/;\r\n    idx=256-4-2;\r\n    let res={};\r\n    for(let ln of def.split(\"\\n\")){\r\n        let m=fldp.exec(ln)||\r\n        metp.exec(ln);\r\n        if(m){\r\n            res [m [1]]=idx;\r\n            /*print(m [1],idx.\r\n            toString(16));*/\r\n            n2seq(m[1]);\r\n            idx-=2;\r\n        }\r\n    }\r\n    _n2idx=res;\r\n    return res;\r\n}\r\nlet confli={};\r\nfldidx();\r\n//print(n2seq);\r\n/*print(n2idx(\"y\"));\r\nprint(n2idx(\"t\").toString(16));\r\nprint(idx2n(250));*/\r\n/*addMembers([\"x\",\"y\",\"test\",\"cnt\"]);\r\naddMembers([\"x\",\"y\",\"cnt\",\"toste\"]);\r\naddMembers([\"x\",\"y\",\"ttt\",\"toste\"]);*/\r\n//print(confli);\r\n//print(_n2seq);\r\nbuild();\r\n\\build(){\r\n    for (let n of Object.keys(_n2seq)) {\r\n        if (!_n2idx[n]) _n2idx[n]=idx;\r\n    }\r\n    //print(_n2idx);\r\n    while(true) {\r\n        let cont=false;\r\n        for (let k,i of confli) {\r\n            k=k.split(\"\\t\");\r\n            if (_n2idx[k[0]]==_n2idx[k[1]]) {\r\n                _n2idx[k[1]]-=2;\r\n                cont=true;\r\n            }\r\n        }\r\n        if (!cont) break;\r\n    }\r\n    //print(_n2idx);\r\n}\r\n\r\n\r\n\\n2idx(n:String){\r\n    let r=_n2idx [n];\r\n    if(r)return r;\r\n    throw new Error(\r\n    `${n} is not found`);\r\n}\r\n\\n2seq(n:String){\r\n    let r=_n2seq [n];\r\n    if(r!=null)return r;\r\n    r=Object.keys(\r\n    _n2seq).length;\r\n    _n2seq[n]=r;\r\n    return r;\r\n}\r\n\\idx2n(i:Number){\r\n    for(let k,v in _n2idx){\r\n        if(v==i)return k;\r\n    }\r\n    return null;\r\n}\r\n\\addConfli(a:String, b:String) {\r\n    if (a==b) return;\r\n    if (n2seq(a)>n2seq(b)){\r\n        return addConfli(b,a);\r\n    }\r\n    confli[a+\"\\t\"+b]=true;\r\n}\r\n\\isConfli(a:String, b:String) {\r\n    if (a==b) return true;\r\n    if (n2seq(a)>n2seq(b)){\r\n        return isConfli(b,a);\r\n    }\r\n    return confli[a+\"\\t\"+b]=true;\r\n}\r\n\\addMembers(names:String[]) {\r\n    for (let name of names) {\r\n        for (let name2 of names) {\r\n            addConfli(name,name2);\r\n        }\r\n    }\r\n}\r\n","extends TObject;\nnative console;\nlet indentBuf=\"\";\nlet indentStr=\" \";\nlet buf=new StringBuilder;\nlet visitor:Visitor;\n\\initModule(){\n    indentBuf=\"\";\n    indentStr=\" \";\n    buf=new StringBuilder;\n    visitor=this;\n}\n\\printf() {\n    let ap=new ArgParser(arguments);\n    function shiftArg(nullable) {\n        let res=ap.shift();\n        if (res==null && !nullable) {\n            console.log(ap);\n            throw new Error(\n            \"null param: fmt=\"+fmt);\n        }\n        return res;\n    }\n    let fmt=shiftArg();\n    while (true) {\n        let i=fmt.indexOf(\"%\");\n        if (i<0) {printraw(fmt); break;}\n        printraw(fmt.substring(0,i));\n        i++;\n        let fstr=fmt.charAt(i);\n        if (fstr==\"s\") {\n            let str=shiftArg();\n            if (typeof str == \"string\" || typeof str ==\"number\") {}\n            else if (str==null) str=\"null\";\n            else if (str.text) {\n                addMapping(str);\n                str=str.text;\n            }\n            printraw(str);\n            i++;\n        } else if (fstr==\"d\") {\n            let n=shiftArg();\n            if (typeof n!=\"number\") throw new Error (n+\" is not a number: fmt=\"+fmt);\n            printraw(n);\n            i++;\n        } else if (fstr==\"n\") {\n            ln();\n            i++;\n        } else if (fstr==\"{\") {\n            indent();\n            i++;\n        } else if (fstr==\"}\") {\n            dedent();\n            i++;\n        } else if (fstr==\"%\") {\n            printraw(\"%\");\n            i++;\n        } else if (fstr==\"f\") {\n            shiftArg()($);\n            i++;\n        /*} else if (fstr==\"l\") {\n            let lit=shiftArg();\n            printraw(toLiteral(lit));\n            i++;*/\n        } else if (fstr==\"v\") {\n            let a=shiftArg();\n            if (!a) throw new Error (\"Null %v\");\n            if (typeof a!=\"object\") throw new Error(\"nonobject %v:\"+a);\n            addMapping(a);\n            visitor.visit(a);\n            i++;\n        /*} else if (fstr==\"z\") {\n            let place=shiftArg();\n            if (\"val\" in place) {\n                printraw(place.val);\n                return;\n            }\n            if (!place.inited) {\n                lazy(place);\n            }\n            place.printraw();\n            i++;*/\n        } else if (fstr==\"j\") {\n            let sp_node=shiftArg();\n            let sp=sp_node[0];\n            let node=sp_node[1];\n            let sep=false;\n            if (!node || !node.forEach) {\n                console.log(node);\n                throw new Error (node+\" is not array. cannot join fmt:\"+fmt);\n            }\n            for (let n of node) {\n                if (sep) printf(sp);\n                sep=true;\n                visitor.visit(n);\n            }\n            i++;\n        } else if (fstr==\"D\"){\n            shiftArg(true);\n            i++;\n        } else {\n            i+=2;\n        }\n        fmt=fmt.substring(i);\n    }\n}\n\n\\ln() {\n\t\t\n    printraw(\"\\n\"+indentBuf);\n}\n\\indent() {\n\n    indentBuf+=indentStr;\n    printraw(\"\\n\"+indentBuf);\n}\n\\dedent() {\n    let len=indentStr.length;\n    if (!buf.last(len).match(/^\\s*$/)) {\n        console.log(buf);\n        throw new Error (\"Non-space truncated \");\n    }\n    buf.truncate(len);//=buf.substring(0,buf.length-len);\n    indentBuf=indentBuf.substring(0 , indentBuf.length-len);\n}\n//let debug=false;\n\\addMapping(){}\n\\printraw(s){\n    buf.append(s);\n}\n","extends null;\n\\enter(newval, act) {\n    let sv={};\n    let curval=this;\n    for (let k in newval) {\n        sv[k]=curval[k];\n        curval[k]=newval[k];\n    }\n    let res=act(this);\n    for (let k in sv) {\n        curval[k]=sv[k];\n    }\n    return res;\n}\n","extends TObject;\nnative console;\nnative Math;\nlet buf:String []=[\"\"];\nlet bufSize=1024;\nfunction rest(lastIdx) {\n    return bufSize-buf[lastIdx].length;\n}\nfunction validate() {\n    for (let i=0;i<buf.length-1;i++) {\n        if (buf[i].length!==bufSize) {console.log(buf); throw new Error(\"NO!\"); }\n    }\n}\nfunction append(content) {\n    content=content+\"\";\n    while(content) {\n        let lastIdx=buf.length-1;\n        let r=rest(lastIdx);\n        if (content.length<=r) {\n            buf[lastIdx]+=content;\n            break;\n        } else {\n            buf[lastIdx]+=content.substring(0,r);\n            buf.push(\"\");\n            content=content.substring(r);\n        }\n    }\n    validate();\n}\nfunction rowcol(index) {\n    let row=Math.floor(index/bufSize);\n    let col=index % bufSize;\n    return {row,col};\n}\nfunction replace(index, replacement) {//replacement.length<= bufSize\n    replacement=replacement+\"\";\n    if (replacement.length>bufSize) {\n        throw new Error(\"Cannot replace over len=\"+bufSize);\n    }\n    let start=rowcol(index);\n    let end=rowcol(index+replacement.length);\n    if (start.row===end.row) {\n        let line=buf[start.row];\n        buf[start.row]=line.substring(0,start.col)+replacement+line.substring(end.col);\n    } else {\n        let line1=buf[start.row];\n        let line2=buf[end.row];\n        let len1=bufSize-start.col;\n        let len2=replacement.length-len1;\n        buf[start.row]=line1.substring(0,start.col)+replacement.substring(0, len1);\n        buf[end.row]=replacement.substring(len1)+line2.substring(len2);\n    }\n    validate();\n}\nfunction truncate(length) {\n    while(true) {\n        let lastIdx=buf.length-1;\n        let dec=buf[lastIdx].length-length;\n            //console.log(buf,length, lastIdx,dec);\n        if (dec>=0) {\n            buf[lastIdx]=buf[lastIdx].substring(0,dec);\n            break;\n        } else {\n            buf.pop();\n            length=-dec;// <=> l-=bl <=> l=l-bl <=> l=-(bl-l) <=> l=-dec\n        }\n    }\n    validate();\n\n}\nfunction getLength() {\n    let lastIdx=buf.length-1;\n    return bufSize*lastIdx+buf[lastIdx].length;\n}\nfunction last(len) {\n    if (len>bufSize) {\n        throw new Error(\"Cannot replace over len=\"+bufSize);\n    }\n    let lastIdx=buf.length-1;\n    let deced=buf[lastIdx].length-len;\n    if (deced>=0) {\n        return buf[lastIdx].substring(deced);\n    } else {\n        return buf[lastIdx-1].substring(bufSize+deced)+buf[lastIdx];\n    }\n}\nfunction toString() {\n    return buf.join(\"\");\n}\n","extends Actor;\n\\visit(n){\n    let k=n && \"v_\"+n.type;\n    if(n&&\n    typeof this [k]==\n    \"function\"){\n        return this [k](n);\n    }\n    return def(n);\n}\n\\def(o){\n    if(!o)return;\n    for(let k,v in o){\n        visit(o);\n    }\n}","extends TObject;\nlet asms=new Asms;\nlet incled;\nfunction gensrc(src){\n    incled={};\n    return writeConfig(incl(src));\n}\nfunction writeConfig(src) {\n    for (let k,v in $config) {\n        let r=new RegExp(k.replace(/\\./g,\"\\\\.\")+\"\\\\s+equ\\\\s+[^\\\\n]+\");\n        src=src.replace(r,`${k} equ ${v}`);\n    }\n    return src;\n}\nfunction incl(src){\n    return src.split(\"\\n\").\n    map(inclf).\n    join(\"\\n\");\n}\nlet cmtp=/;([^\\n]+)/gi;\nlet inclp=\n/^include ([\\d\\w]+)/; \nfunction inclf(line){\n    var m=inclp.exec(line);\n    if(!m)return line;\n    var f=m[1];\n    if(incled[f])return \"\";\n    incled[f]=1;\n    return \n    \";include \"+f+\"\\n\"+\n    incl(asms.data[f])+\n    \"\\n\"+\n    \";end of include \"+f;\n}","extends Boot;\r\n\r\n\\config() {\r\n    $config={\r\n        \"spr.scale\"=1,\r\n        //\"crashTo.size\"=32,\r\n        \"obj.limits\"={\r\n            PBullet: 12, Player: 4\r\n        },\r\n        \"th.count\"=20,\r\n\r\n        // unimplemented: the variables treated as double(common to all classes) \r\n        \"defdbl\": [\r\n        \"dbl\",\"$dbl\",\r\n        /^f_/,/^\\$f_/,\r\n        ],\r\n        // unimplemented: global arrays\r\n        \"arrays\": {\r\n            \"$mem\": 50, // int16[50]\r\n            \"$ary\": [1,10,100], // int16[3] with initial values\r\n            \"$mat\": [[1,3,5],[10,12]], // (int*)[2] \r\n            // [1,3,5] and [10,12] may not be placed in contiguous memory areas.\r\n            \"$f_ary\": [1.2, 2.3, 4.5] //double[3] \r\n        },\r\n        // unimplemented: global strings(char*). length cannot be changed.\r\n        \"strings\": {\r\n            \"$mesg\": \"Hello, world\", // char*\r\n            //substring: $mesg+7 -> \"world\"\r\n            \"$mesgs\": [\"Hello\", \"World!!\"], // (char*)[2]\r\n            // \"Hello\" and \"World!!\" may not be placed in contiguous memory areas.\r\n            //\"$f_str\": \"ERROR! float cannot point string\",\r\n        }\r\n    };\r\n}\r\n\\createMainObject() {\r\n    //--config section---\r\n    config();\r\n    //--------\r\n    getMainClass();\r\n    $excludeFromAll=$Screen.all();\r\n    $Screen.resize(512,512);\r\n    $MScreen=new Screen{x:256,y:224,width:256,height:192,scaleX:2};\r\n    $MLayer=$MScreen.addLayer();\r\n    $crashTo_size=8<<$config[\"spr.scale\"];\r\n    $RSprPat=new RSprPat;\r\n    $MScreen.setBGColor($RSprPat.palette[3]);\r\n    $Screen.setBGColor($RSprPat.palette[6]);\r\n    $pat_font_orig=$pat_font;\r\n    $pat_font=0;\r\n    $map=new Map2{chipWidth:8,chipHeight:8,row:24,col:32,layer:$MLayer, x:0,y:0};\r\n    //for (let y=0;y<24;y++) for(let x=0;x<32;x++) $map.set(x,y,$pat_font+35);\r\n    $exporter=new GenAsm;\r\n    let ide=$Boot.getIDE();\r\n    if (ide && $Navigator.isMobile()) ide.runDialog.resize {\r\n        left:10,top:300,width:400,\r\n        height:400\r\n    };\r\n    if ($editButton) {\r\n        new Button{top:480,text:\"Edit Page\",height:30, \r\n            fillStyle:$RSprPat.palette[4],\r\n            onClick:\\{$editButton.openEditor();}\r\n        };\r\n    }\r\n    $mainClassName=mainClass.meta.shortName;\r\n    new mainClass;\r\n}\r\nsuper.main();\r\n","extends TObject;\nnative Tonyu;\n\\u(obj) {\n    return Object.assign({},obj);\n}\n\\getMembers(klass){\n    let d=klass.decls;\n    let f=(d.fields),m=(d.methods);\n    let s=klass.superclass;\n    //print(klass.shortName, klass, f,m);\n    let res={};\n    if(klass.shortName!=\"RActor\" && s)res=getMembers(s);\n    //let p=Tonyu.iterator2(f);\n\n    for(let n,v in f){\n        res [n]={\n            type=\"fld\",\n            declin=klass\n        };\n    }\n    for(let n,v in m){\n        if (n==\"new\") continue;\n        res [n]={\n            type=\"meth\",\n            declin=klass\n        };\n    }\n    return res;\n}\n\\inherits(klass, parent) {\n    if (klass===parent) return true;\n    if (!klass.superclass) return false;\n    return inherits(klass.superclass,parent);\n}\nlet genasm:GenAsm;\nlet anodes=genasm.anodes;\nlet Za=(anodes.filter \\(e){\n    return e.shortName===\"RActor\";\n}[0]);\nlet fld=new FldIdx;\nlet ks=anodes.filter \\(klass){\n    return\n    inherits(klass, Za) &&\n    klass!==Za;\n};\nlet obj_limits=initLimitRange($config[\"obj.limits\"]||{});\nlet name2klass={};\nfor (let klass of ks) {\n    name2klass[klass.shortName]=klass;\n    proc(klass);\n}\nfld.build();\n/*\nfor (let klass of ks) {\n    header(klass);\n}*/\n\\initLimitRange(lims) {\n    let res={};\n    let base={};\n    let allCnt=$config[\"th.count\"], cur=allCnt;\n    for (let klass, num in lims) {\n        res[klass]=[cur-num, cur];\n        cur-=num;\n    }\n    if (cur<0) {\n        throw new Error(`Config error: obj.limit exceeded th.count(${allCnt})`);\n    }\n    res[\"*\"]=[0,cur];\n    return res;\n}\n\\objRange(klass) {\n    for (let klassEnt, num in obj_limits) {\n        klassEnt=name2klass[klassEnt];\n        if (inherits(klass, klassEnt)) return num;\n    }\n    return obj_limits[\"*\"];\n}\n\n\\proc(klass){\n    //print(klass);\n    let r=getMembers(klass);\n    fld.addMembers(\n    Object.keys(r));\n    /*for (let k,v in r){\n        print(k,v.type,v.declin.shortName);\n    }*/\n}\n\\header(klass){\n    let r=getMembers(klass);\n    let min=256,max=0;\n    let rev={};\n    printf(\"class %s,%s%{\",\n    klass.shortName,\n    klass.superclass.shortName);\n    for (let k,v in r){\n        let i=fld.n2idx(k);\n        if(i<min)min=i;\n        if(i>max)max=i;\n        rev [i]=k;\n    }\n    for(let i=max;i>=min;i-=2){\n        let k=rev [i];\n        if(!k){\n            printf(\"unuse 0%n\");\n            continue;\n        }\n        let ri=r [k];\n        if(ri.type==\"fld\"){\n            printf(\"fld .%s,0%n\",k);\n        }else {\n            printf('meth %s,%s%n',\n            ri.declin.shortName,\n            k);\n        }\n    }\n    printf(\"end.const %s%n%}\",klass.shortName);\n}\n\\printf() {\n    genasm.printf.apply(genasm,arguments);\n}\n//print(t);","extends null;\nlet decls;//: C_Decls;\r\nlet superclass: C_Meta;\r\n//let includes: C_Meta[];\r\nlet\tsrc;//: {tonyu?:any, js?:any, map?: string},\r\nlet node: Program;\r\nlet annotation;//: object,","extends null;\r\nlet type:String;\r\n","extends null;\nlet klass: C_Meta;\r\nlet node: FuncDecl;\r\nlet head: FuncDeclHead;\r\nlet ftype:String;\r\nlet name: String;\r\nlet isMain: Boolean;\r\nlet stmts: Stmt[];\r\nlet locals: Locals;\r\nlet params: ParamDecl[];\r\nlet scope;//: ScopeMap;\r\nlet useArgs:Boolean;\r\nlet paramTypes;//: AnnotatedType[];\r\nlet returnType;//: AnnotatedType;\r\n//let nowait: Boolean;","extends null;\nlet varDecls;//: {[key: string]:VarDecl},\r\nlet subFuncDecls;//: {[key: string]:FuncDecl},","extends null;\nlet type:String;\nlet row:Number;\nlet col:Number;\nlet pos:Number;\nlet len:Number;\nlet text:String;","extends null;\nincludes TNode,Stmt;\nlet stmt:Stmt;\nlet catches:Catches[];\n","extends null;\nincludes TNode;\nlet vtype:TypeExpr;\n","extends null;\nincludes TNode;\nlet name:Token;\n","extends null;\nincludes TNode;\nlet name:Token;\nlet typeDecl:TypeDecl?;\nlet value:Expression?;\n","extends null;\nincludes TNode,Stmt;\nlet decls:VarDecl[];\nlet declPrefix: Token;","extends null;\nincludes TNode,Stmt;\nlet cond:Expression;\nlet loop:Stmt;\n","extends VisitorBase;\n\\v_String(n:Token){\n    let text:String=n.text;\n    def(n);\n}\n\\v_prefix(n:Prefix){\n    let op:Token=n.op;\n    let right:Expression=n.right;\n    def(n);\n}\n\\v_postfix(n:Postfix){\n    let left:Expression=n.left;\n    let op:TNode=n.op;\n    def(n);\n}\n\\v_infix(n:Infix){\n    let left:Expression=n.left;\n    let op:Token=n.op;\n    let right:Expression=n.right;\n    def(n);\n}\n\\v_trifix(n:Trifix){\n    let left:Expression=n.left;\n    let op1:Token=n.op1;\n    let mid:Expression=n.mid;\n    let op2:Token=n.op2;\n    let right:Expression=n.right;\n    def(n);\n}\n\\v_arrayElem(n:ArrayElem){\n    let subscript:Expression=n.subscript;\n    def(n);\n}\n\\v_argList(n:ArgList){\n    let args:Expression[]=n.args;\n    def(n);\n}\n\\v_member(n:Member){\n    let name:Token=n.name;\n    def(n);\n}\n\\v_parenExpr(n:ParenExpr){\n    let expr:Expression=n.expr;\n    def(n);\n}\n\\v_varAccess(n:VarAccess){\n    let name:Token=n.name;\n    def(n);\n}\n\\v_funcExprArg(n:FuncExprArg){\n    let obj:FuncExpr=n.obj;\n    def(n);\n}\n\\v_objlitArg(n:ObjlitArg){\n    let obj:Objlit=n.obj;\n    def(n);\n}\n\\v_call(n:Call){\n    let args:Expression[]=n.args;\n    def(n);\n}\n\\v_scall(n:Scall){\n    let args:Expression[]=n.args;\n    def(n);\n}\n\\v_newExpr(n:NewExpr){\n    let klass:VarAccess=n.klass;\n    let params:Call?=n.params;\n    def(n);\n}\n\\v_superExpr(n:SuperExpr){\n    let name:Token?=n.name;\n    let params:Scall=n.params;\n    def(n);\n}\n\\v_exprstmt(n:Exprstmt){\n    let expr:Expression=n.expr;\n    def(n);\n}\n\\v_compound(n:Compound){\n    let stmts:Stmt[]=n.stmts;\n    def(n);\n}\n\\v_return(n:Return){\n    let value:Expression?=n.value;\n    def(n);\n}\n\\v_if(n:If){\n    let cond:Expression=n.cond;\n    let then:Stmt=n.then;\n    let _else:Stmt?=n._else;\n    def(n);\n}\n\\v_forin(n:Forin){\n    let isVar:Token?=n.isVar;\n    let vars:Token[]=n.vars;\n    let inof:Token=n.inof;\n    let set:Expression=n.set;\n    def(n);\n}\n\\v_normalFor(n:NormalFor){\n    let init:Stmt=n.init;\n    let cond:Expression?=n.cond;\n    let next:Expression?=n.next;\n    def(n);\n}\n\\v_for(n:For){\n    let inFor:ForHead=n.inFor;\n    let loop:Stmt=n.loop;\n    def(n);\n}\n\\v_while(n:While){\n    let cond:Expression=n.cond;\n    let loop:Stmt=n.loop;\n    def(n);\n}\n\\v_do(n:Do){\n    let loop:Stmt=n.loop;\n    let cond:Expression=n.cond;\n    def(n);\n}\n\\v_case(n:Case){\n    let value:Expression=n.value;\n    let stmts:Stmt[]=n.stmts;\n    def(n);\n}\n\\v_default(n:Default){\n    let stmts:Stmt[]=n.stmts;\n    def(n);\n}\n\\v_switch(n:Switch){\n    let value:Expression=n.value;\n    let cases:Case[]=n.cases;\n    let defs:Default?=n.defs;\n    def(n);\n}\n\\v_break(n:Break){\n    let brk:Token=n.brk;\n    def(n);\n}\n\\v_continue(n:Continue){\n    let cont:Token=n.cont;\n    def(n);\n}\n\\v_finally(n:Finally){\n    let stmt:Stmt=n.stmt;\n    def(n);\n}\n\\v_catch(n:Catch){\n    let name:Token=n.name;\n    let stmt:Stmt=n.stmt;\n    def(n);\n}\n\\v_try(n:Try){\n    let stmt:Stmt=n.stmt;\n    let catches:Catches[]=n.catches;\n    def(n);\n}\n\\v_throw(n:Throw){\n    let ex:Expression=n.ex;\n    def(n);\n}\n\\v_typeExpr(n:TypeExpr){\n    let name:Token=n.name;\n    def(n);\n}\n\\v_typeDecl(n:TypeDecl){\n    let vtype:TypeExpr=n.vtype;\n    def(n);\n}\n\\v_varDecl(n:VarDecl){\n    let name:Token=n.name;\n    let typeDecl:TypeDecl?=n.typeDecl;\n    let value:Expression?=n.value;\n    def(n);\n}\n\\v_varsDecl(n:VarsDecl){\n    let decls:VarDecl[]=n.decls;\n    def(n);\n}\n\\v_paramDecl(n:ParamDecl){\n    let name:Token=n.name;\n    let typeDecl:TypeDecl?=n.typeDecl;\n    def(n);\n}\n\\v_paramDecls(n:ParamDecls){\n    let params:ParamDecl[]=n.params;\n    def(n);\n}\n\\v_setterDecl(n:SetterDecl){\n    let value:ParamDecl=n.value;\n    def(n);\n}\n\\v_funcDeclHead(n:FuncDeclHead){\n    let _nowait:Token?=n._nowait;\n    let ftype:Token?=n.ftype;\n    let name:Token=n.name;\n    let setter:SetterDecl?=n.setter;\n    let params:ParamDecls?=n.params;\n    let rtype:TypeDecl?=n.rtype;\n    def(n);\n}\n\\v_funcDecl(n:FuncDecl){\n    let head:FuncDeclHead=n.head;\n    let body:Compound=n.body;\n    def(n);\n}\n\\v_nativeDecl(n:NativeDecl){\n    let name:Token=n.name;\n    def(n);\n}\n\\v_ifWait(n:IfWait){\n    let then:Stmt=n.then;\n    let _else:Stmt?=n._else;\n    def(n);\n}\n\\v_empty(n:Empty){\n    def(n);\n}\n\\v_funcExprHead(n:FuncExprHead){\n    let name:Token?=n.name;\n    let params:ParamDecls?=n.params;\n    def(n);\n}\n\\v_funcExpr(n:FuncExpr){\n    let head:FuncExprHead=n.head;\n    let body:Compound=n.body;\n    def(n);\n}\n\\v_jsonElem(n:JsonElem){\n    let key:Token=n.key;\n    let value:Expression?=n.value;\n    def(n);\n}\n\\v_objlit(n:Objlit){\n    let elems:JsonElem[]=n.elems;\n    def(n);\n}\n\\v_arylit(n:Arylit){\n    let elems:Expression[]=n.elems;\n    def(n);\n}\n\\v_extends(n:Extends){\n    let superclassName:Token=n.superclassName;\n    def(n);\n}\n\\v_includes(n:Includes){\n    let includeClassNames:Token[]=n.includeClassNames;\n    def(n);\n}\n\\v_program(n:Program){\n    let ext:Extends?=n.ext;\n    let incl:Includes?=n.incl;\n    let stmts:Stmt[]=n.stmts;\n    def(n);\n}\n","//extends TObject;\nextends Actor;\nlet pa=new Panel {\n    x:16,y:16,\n    width:8,height:8,\n    scaleX:1\n};\n$RSprPat=$RSprPat||new RSprPat;\nlet buf='',count=0;\nlet patgen=[], coltbl=[];\nfor(let i=0;\ni<$imageList.length;i++){\n    let l=$imageList [i];\n    if(l.width!=8)continue;\n    if(l.height!=8)continue;\n    if(count>=256)break;\n    count++;\n    pa.clearRect();\n    pa.drawSprite(4,4,i);\n    //updateEx(50);\n    let d=pa.getImageData(\n    0,0,8,8);\n    d=d.data;\n    //print(i);\n    out(d);\n    if (i% 8==0 )updateEx(1);\n    //print(d.data.length);\n}\n//print(patgen.map\\(e){return e.toString(2);},coltbl.map\\(e){return e.toString(16);});\npa.die();\nfireEvent(\"complete\");\n\\out(d){\n    let pals:Color[]=$RSprPat.palette;\n    if (!pals) throw new Error(\"No pals\");\n    for (let y=0;y<8;y++) {\n        let line=[],colc={};\n        for (let x=0;x<8;x++) {\n            let i=(y*8+x)*4;\n            let c=new Color(d[i],d[i+1],d[i+2]);\n            let min=100000, minc=0;\n            for (let i,pal in pals) {\n                let di=c.distHSLA(pal);\n                if (di<min) {\n                    minc=i;\n                    min=di;\n                }\n            }\n            minc++;\n            line.push(minc);\n            colc[minc]=colc[minc]||0;\n            colc[minc]++;\n        }\n        let cols=Object.keys(colc).map\\(e){\n            return e-0;\n        }.sort\\(a,b){\n            return colc[b]-colc[a];\n        };\n        if (cols.length<2) {\n            coltbl.push(cols[0]);\n            patgen.push(0);\n            continue;\n        }\n        let bgc=pals[cols[0]-1];\n        let fgc=pals[cols[1]-1];\n        coltbl.push(cols[1]*16+cols[0]);\n        if (cols[1]*16+cols[0]>=256) {\n            throw new Error(cols+\" \"+(cols[1]*16+cols[0]));\n        }\n        let bits=\"0b\";\n        for (let dot of line) {\n            let bit=cols.indexOf(dot);\n            if (bit<0) throw new Error(cols + \"indexOf \" + dot);\n            if (bit>=2) {\n                let c=pals[cols[bit]-1];\n                let df=fgc.distHSLA(c);\n                let db=bgc.distHSLA(c);\n                bit = (df<db ? 1:0);\n            }\n            bits+=bit;\n        }\n        patgen.push(bits-0);\n    }\n}","extends TObject;\nlet pa=new Panel {\n    x:200,y:200,\n    width:16,height:16,\n    scaleX:10\n};\n\n/*let ide=$Boot.getIDE();\nif (ide) ide.runDialog.resize {\n    left:10,top:300,width:400,\n    height:400\n};*/\nlet buf='',count=0;\nfor(let i=0;\ni<$imageList.length;i++){\n    let l=$imageList [i];\n    if(l.width!=16)continue;\n    if(l.height!=16)continue;\n    if(count>=64)break;\n    count++;\n    pa.clearRect();\n    pa.drawSprite(8,8,i);\n    //updateEx(50);\n    let d=pa.getImageData(\n    0,0,8,16);\n    d=d.data;\n    out(d);\n    d=pa.getImageData(\n    8,0,8,16);\n    d=d.data;\n    out(d);\n    \n    //print(d.data.length);\n}\npa.die();\n\\out(d){\n    let c=\"0b\";\n    let db= [];\n    for(let i=3;i<d.length;\n    i+=4) {\n        c+=(d [i]>128?1:0);\n        if(c.length>=10){\n            c=(c-0).toString(16);\n            c=\"0\"+c+\"h\";\n            db.push(c);\n            c=\"0b\";\n        }\n    }\n    buf+=\"db \"+db+\"\\n\";\n}","extends Actor;\nlet sprpat;\nlet p,c;\nlet dotAlign=1;\n\\spr_scale {\n    return $config[\"spr.scale\"];\n}\n\\new(params) {\n    super(params);\n    if(!$RSprPat) $RSprPat=new RSprPat;\n    sprpat=sprpat||$RSprPat;\n    dotAlign=dotAlign||1;\n    width=$crashTo_size;\n    height=$crashTo_size;\n    //print(width,height);\n    //scaleX=2;\n}\n\\setPalette(n,c){\n    sprpat.palette [n-1]=c;\n}\n\\map_setAt(x,y,p) {\n    $map.set( x>>(3+spr_scale) , y>>(3+spr_scale), $pat_font_orig+p);\n}\n\\map_getAt(x,y) {\n    return $map.get( x>>(3+spr_scale) , y>>(3+spr_scale))-$pat_font_orig;\n}\n\\map_set(x,y,p) {\n    $map.set( x , y, $pat_font_orig+p);\n}\n\\map_get(x,y) {\n    return $map.get( x , y)-$pat_font_orig;\n}\n\\div(x,y) {\n    return floor(x/y);\n}\n\\draw(ctx){\n    let pa:Panel=sprpat.get(p,c);\n    if(pa==null)return;\n    ctx.save();\n    let sx=x,sy=y;\n    x=floor(x/dotAlign)*dotAlign>> spr_scale;\n    y=floor(y/dotAlign)*dotAlign>> spr_scale;\n    performTransform(ctx);\n    /*ctx.drawImage(pa.image,\n    floor(x-pa.width),floor(y-pa.height)\n    );*/\n    ctx.drawImage(pa.image,\n    -floor(pa.width/2),-floor(pa.height/2)\n    );\n    x=sx;y=sy;\n    ctx.restore();\n}\n\\defaultLayer{\n    return $MLayer;\n}\n","extends TObject;\nlet palette=palette||[[0,0,0],\n[64,183,74],[117,207,126],[89,86,215],\n[128,119,239],[184,95,81],\n[102,219,238],[217,102,90],[253,138,126],\n[204,195,96],[222,208,136],\n[59,161,66],[182,103,180],\n[204,204,204],[255,255,255]].map\\(rgb) {\n    return new Color(rgb[0],rgb[1],rgb[2]);\n};\nlet imgs={};\n\\get(p:Number, c:Number) {\n    c=amod(c,(palette.length+1));\n    if (c<=0) return null;\n    let key=`${p}\\t${c}`;\n    if (imgs[key]) return imgs[key];\n    let ls=$imageList[p];\n    if (!ls) return  null;\n    let res=new Panel{width:ls.width, height:ls.height};\n    imgs[key]=res;\n    res.context.drawImage(ls.image, \n    ls.x,ls.y,ls.width,ls.height,\n    0,0,ls.width,ls.height);\n    res.replaceColor(0,0,ls.width, ls.height, palette[c-1]);\n    res.die();\n    return res;\n}\n","extends Visitor;\nincludes Buf, Context;\nnative Tonyu;\ninitModule();\nlet IDEPrj=$currentProject.compiler;\nlet anodes=waitFor(IDEPrj.serializeAnnotatedNodes());\nlet mem=new MemberScan{genasm:this};\nlet lval=false;\nlet symSeq=1;\nlet ide=$Boot.getIDE();\nlet klass, klassSrc;\nlet problems=[];\nlet builtins={getkey:\"getkey\",rnd:\"rnd\"};\nlet globals={};\nlet keynames={space: 0x0108, \nright:0x8008,down:0x4008,up:0x2008,left:0x1008};\nlet closestBrk;\n//debug=true;\nlet opmap={\n    \"*\":\"call IMULT.a%n\", \n    \"/\":\"call IDIV.a%n\",\n    \"%\":\"call IMOD.a%n\",\n    \"+\":\"add hl, de%n\",\n    \"-\":\"subhl de%n\",\n};\n\nprintf(`org 08000h\ninclude tnu\ninclude map\ninclude bool\n\nmain:\ntnu.run ${$mainClassName}\n`);\nlet anode;\n\\annotation(n) {\n    let res=anode[n._id];\n    if (!res) {\n        return {};\n    }\n    return res;\n}\nx=256;y=20;fillStyle=\"black\";\nfor (klass of mem.ks) {\n    let r=mem.objRange(klass);\n    text=klass.shortName;\n    //print(\"KLS\",klass);\n    printf(\";range %d-%d%n\",r[0],r[1]);\n    mem.header(klass);\n    klassSrc=klass.src.tonyu.text();\n    //print(klass.src.tonyu);\n    let methods=klass.decls.methods;\n    anode=(klass.annotation);\n    for (let mname, me of methods) {\n        let method:FuncInfo=me;\n        text=klass.shortName+\".\"+mname;\n        if (method.params.length>0) {\n            unsup(method.params[0],\"Parameters is not yet supported\");\n        }\n        printf(\"def %s.%s,%d,0%{\",klass.shortName, mname, method.params.length);\n        for(let s of method.stmts) visit(s);\n        printf(\"enddef %s.%s%n\", klass.shortName, mname);\n        printf(\"%}\");\n        update();\n    }\n    update();\n}\ntext=\"\";\nlet outp=new OutPat;\nlet outbg=new OutBG;\nwaitEvent(outbg,\"complete\");\n\nprintf(`\nendusr:\n${Object.keys(globals).map \\(k){\n    return globalLabel(k)+\":dw 0\";\n}.join(\"\\n\")}\nmacro inivrm, n, dst\n ld de,dst\n ld hl,n\n ld bc,end.##n-n\n call LDIRVM\nendm\n\nspr.inipat:\n inivrm spr.pat, 3800h\n ret\n\nspr.pat:\n${outp.buf}\nend.spr.pat:\n\nbg.inipat:\n inivrm bg.gen, 0000h\n inivrm bg.gen, 0800h\n inivrm bg.gen, 1000h\n inivrm bg.col, 2000h\n inivrm bg.col, 2800h\n inivrm bg.col, 3000h\n inivrm bg.name, 1800h\n ret\n\nbg.gen:\n${toDB(outbg.patgen)}\nend.bg.gen:\n\nbg.col:\n${toDB(outbg.coltbl)}\nend.bg.col:\n\nbg.name:\n ds 256*3,32\nend.bg.name:\n\nend main`);\n/*print(Object.keys(n.decls.fields));\nprint(n.superclass.fullName);\n*/\n//print(\"buf=\"+buf);\nlet url=\"https://msxpen.com/codes/-N8klu22ZKY0trVaYX66\";\n\n//msxpen.com/codes/-N8kjRrkOlaH4vlLV7MY\";\n\n\n//msxpen.com/codes/-N8kZzjv3KL0vbHvgiqT\";\n\n\nnew Button{top:420,text:\"to MSXPen\",onClick:showDiag,fillStyle:$RSprPat.palette[2]};\n\\toDB(bytes) {\n    let buf=\"\",c=[];\n    while(bytes.length) {\n        let b=bytes.shift();\n        c.push(\"0\"+b.toString(16)+\"h\");\n        if (c.length>=8) {\n            buf+=\"db \"+c.join(\", \")+\"\\n\";\n            c=[];\n        }\n    }\n    if (c.length) buf+=\"db \"+c.join(\", \")+\"\\n\";\n    return buf;\n}\n\\showDiag() {\n    //msxpen.com/codes/-N8fnpcspSXEqEJ4lOeO\";\n    if (problems.length) {\n        let tx=new HTMLUI{\n            content:[\"div\",\n            {style:'background: #fee;'},\n            [\"h2\",\"Problem(s) found\"],\n            [\"ul\"].concat(\n            problems.map\\(p) {\n                return [\"li\",[\"a\",{\n                    href:\"javascript:;\",\n                    onclick: \\{\n                        ide.jump(p.file, p.row, p.col);  \n                    }\n                },\n                p.file.name(),\":\",p.row,\":\",p.col,\" - \",p.mesg\n                ]];\n            }),\n            [\"button\",{onclick:\\{tx.die();}},\"Close\"]\n            ],\n            left:10, top: 20, width:300,\n            height:400,\n        };\n        return;\n    }\n    let tx=new HTMLUI{\n        content:[\"div\",\n        {style:'background: #eee;'},\n        [\"h2\",\"Code copied!\"],\n        [\"ul\",\n        [\"li\",\n        \"Open \",\n        [\"a\",{target:\"pen\",href:url},\n        \"this MSXpen page \"],\n        \".\"],\n        [\"li\",\"Paste the copied code\",\n        \" to 'Asm' tab.\"]],\n        [\"textarea\",{rows:\"10\", cols:\"30\",name:\"val\"},\n        \"test\\ndesu\"],\n        [\"button\",{onclick:\\{tx.die();}},\"Close\"]\n        ],\n        left:10, top: 20, width:300,\n        height:400,\n    };\n    if (getkey(\"n\")) {\n        tx.setValue(\"val\", buf+\"\");\n    } else {\n        let cg=new Includer;\n        tx.setValue(\"val\", cg.gensrc(buf+\"\"));\n    }\n    tx.copyToClipboard(\"val\");\n}\n\n\\def(n){\n    if(!n){\n        print(n);\n        return;\n    }\n    print(n.type,\":\",\n    Object.keys(n));\n    unsup(n);\n}\n\\unsup(n:TNode, mesg:String) {\n    mesg=mesg|| \"Unsupported syntax\";\n    let file=klass.src.tonyu;\n    let rc=Tonyu.TError.calcRowCol(klassSrc,n.pos);\n    let p={file, row:rc.row, col: rc.col, mesg};\n    problems.push(p);\n    //ide.jump( file, rc.row, rc.col);\n    print(p.file.name(),\":\",p.row,\":\",p.col,\" - \",p.mesg);\n}\n\\v_program(n:Program){\n    let ext:Extends?=n.ext;\n    let incl:Includes?=n.incl;\n    let stmts:Stmt[]=n.stmts;\n    for (let s of stmts){\n        visit(s);\n    }\n    printf(\"ret%n\");\n}\n\\v_parenExpr(n:ParenExpr) {\n    visit(n.expr);\n}\n\\extractSrc(n:TNode) {\n    return klassSrc.substring(n.pos, n.pos+n.len);\n}\n\\v_exprstmt(n:Exprstmt){\n    let expr:Expression=n.expr;\n    printf(\";%s%n\", extractSrc(n).replace(/[\\r\\n]/g,\"\"));\n    visit(expr);\n}\n\\v_infix(n:Infix){\n    let left:Expression=n.left;\n    let op:Token=n.op;\n    let right:Expression=n.right;\n    switch(op.text){\n        case \"=\":\n        assign(n);\n        break;\n        case \"+\":case \"-\":\n        case \"*\":case \"/\":case \"%\":\n        arith(n);\n        break;\n        case \"==\":case \"!=\":\n        case \"<=\":case \">=\":\n        case \"<\":case \">\":\n        cmp(n);\n        break;\n        case \"+=\":case \"-=\":\n        case \"*=\":case \"/=\":case \"%=\":\n        arithEq(n);\n        break;\n        case \"&&\":andand(left,right);break;\n        case \"||\":oror(left,right);break;\n        default:\n        unsup(n,`Unsupported infix operator '${op.text}'`);\n    }\n}\n\\andand(left: Expression, right:Expression) {\n    let n=genSym();\n    visit(left);\n    printf(\"andand %s%n\",n);\n    visit(right);\n    printf(\"%s:%n\",n);\n}\n\\oror(left: Expression, right:Expression) {\n    let n=genSym();\n    visit(left);\n    printf(\"oror %s%n\",n);\n    visit(right);\n    printf(\"%s:%n\",n);\n}\n\n\\isMemberRef(m:Expression) {\n    if (m.type!==\"postfix\") return null;\n    let tgme:Postfix=m;\n    if (tgme.op.type!==\"member\") return null;\n    let mem: Member=tgme.op;\n    return [tgme.left, mem.name];\n}\n\\v_postfix(n:Postfix){\n    let left:Expression=n.left;\n    let op:TNode=n.op;\n    if (!lval) {\n        let tgme=isMemberRef(n);\n        if (tgme) {\n            visit(tgme[0]);\n            printf(\"getfldtg .%s%n\",tgme[1]);\n            return;\n        } else if (op.type===\"call\") {\n            if (left.type===\"varAccess\") {\n                return myMeth(left, op);            \n            } else {\n                let tgme=isMemberRef(left);\n                if (tgme) {\n                    tgMeth(tgme[0], tgme[1], op);\n                    return;\n                }\n                unsup(n, `Not a member Ref `);\n            }\n        } else if (op.text===\"++\"||op.text===\"--\") {\n            visit(left);\n            printf(op.text===\"++\"? \"inc hl%n\": \"dec hl%n\");\n            enter{lval:true} \\{\n                visit(left);\n            };\n            return;\n        }\n    } else {\n        let tgme=isMemberRef(n);\n        if (tgme) {\n            printf(\"push hl%n\");\n            enter{lval:false} \\{\n                visit(tgme[0]);\n            };\n            printf(\"setfldtg .%s%n\",tgme[1]);\n            return;\n        }\n    }\n    unsup(n,`Unsupported postfix operator '${op.text}' (${op.type})`);\n}\n\\tgMeth(target: Expression, name:Token, op:Call) {\n    if (name.text===\"crashTo\") {\n        unsup(name, \"target.crashTo( ) is not supported\");\n        return;\n    }\n    printf(\"pushthis 0%n\");\n    let args=op.args;\n    for(let a of args){\n        visit(a);\n        printf(\"push hl%n\");\n    }\n    visit(target);\n    printf(\"invoketg.a .%s%n\",name);\n    printf(\"popthis 0%n\");\n    /*\n    pushthis 0\n   ld hl,(right)\n   invoketg.a .push\n   popthis 0*/\n}\n\\myMeth(left: VarAccess, op:Call) {\n    let args=op.args;\n    let mname=left.name.text;\n    if (mname===\"getkey\") {\n        if (!args[0]) {\n            unsup(left, \"'getkey' should give a string constant.\");\n        } else {\n            let kn=args[0];\n            if (kn.type===\"literal\") {\n                let lit:Token=kn;\n                let s=lit.text;\n                s=s.substring(1,s.length-1);\n                if (!keynames[s]) {\n                    unsup(kn, `Undefined key name '${s}'.`);\n                }\n                printf(\"ld hl, %s%n\", keynames[s]);\n                printf(\"call getkey%n\");\n            } else {\n                unsup(kn,`'${kn.type}' is not a string constant `);\n                //print(kn.type);\n            }\n        }\n    } else if (mname===\"rnd\") {\n        if (!args[0]) {\n            unsup(left, \"'rnd' should give a number.\");\n        }\n        visit(args[0]);\n        printf(\"call rnd%n\");\n    } else if (mname===\"abs\") {\n        if (!args[0]) {\n            unsup(left, \"'abs' should give a number.\");\n        }\n        visit(args[0]);\n        printf(\"call abs%n\");\n    } else if (mname.match(/^map_set(At)?/)) {\n        if (args.length!==3) {\n            unsup(left, \"'map_set(At) should give (x,y,p)\");\n        }\n        visit(args[1]); // y\n        printf(\"push hl%n\");\n        visit(args[0]); // x\n        printf(\"push hl%n\");\n        visit(args[2]); // p\n        printf(\"ld a,l%n\");\n        printf(\"pop hl%n\");\n        printf(\"pop de%n\");\n        printf(\"call map.set%s.a%n\",\n        mname.match(/At/)?\"at\":\"\");\n        printf(\"getthis 0%n\");\n    } else if (mname.match(/^map_get(At)?/)) {\n        if (args.length!==2) {\n            unsup(left, \"'map_get(At) should give (x,y)\");\n        }\n        visit(args[1]); // y\n        printf(\"push hl%n\");\n        visit(args[0]); // x\n        printf(\"pop de%n\");\n        printf(\"call map.get%s.a%n\",\n        mname.match(/At/)?\"at\":\"\");\n        printf(\"ld h,0%n\");\n        printf(\"ld l,a%n\");\n        printf(\"getthis 0%n\");\n\n    } else if (mname===\"crashTo\") {\n        let tg=args[0];\n        if (!tg) {\n            unsup(left, \"'crashTo' should give a object or Class.\");\n        }\n        let klass=(tg.type===\"varAccess\" && isClassConst(tg));\n        if (klass) {\n            let range=mem.objRange(klass);\n            printf(\"crashToClass %s, %d, %d%n\",klass.shortName,range[0],range[1]);\n            /*printf(\"call crashTo.setXY%n\");\n            printf(\"ld hl,%s%n\",klass.shortName);\n            printf(\"const crashTo.kls,hl%n\");\n            printf(\"ld hl,%s%n\",rangeToAd(range[0]));\n            printf(\"ld de,%s%n\",rangeToAd(range[1]));\n            printf(\"call crashToC%n\");*/\n        } else {\n            printf(\"call crashTo.setXY%n\");\n            visit(tg);\n            printf(\"call crashTo1%n\");\n            printf(\"flagtobool c%n\");\n        }\n    } else if (mname===\"div\") {\n        if (args.length!==2) {\n            return unsup(\"'div' should supply 2 numbers\");\n        }\n        arith2(args[0],\"/\",args[1]);\n    } else {\n        for(let a of args){\n            visit(a);\n            printf(\"push hl%n\");\n        }\n        printf(\"invoke .%s%n\", mname);\n    }\n}\n\\cmp(n:Infix){\n    let left:Expression=n.left;\n    let op:Token=n.op;\n    let right:Expression=n.right;\n    let ops={\n        \"==\":\"eq\",\"!=\":\"ne\",\n        \"<=\":\"le\",\">=\":\"ge\",\n        \"<\":\"lt\",\">\":\"gt\",\n    };\n    visit(right);\n    printf(\"push hl%n\");\n    visit(left);\n    printf(\"pop de%n\");\n    printf(\"call hl%sde%n\",ops[op.text]);\n}\n\\arith(n:Infix){\n    let left:Expression=n.left;\n    let op:Token=n.op;\n    let right:Expression=n.right;\n    arith2(left,op.text, right);\n}\n\\arith2(left:Expression, opr:String, right:Expression) {\n    switch(opr) {\n        case \"*\":case \"/\":case \"%\":\n        printf(\"pushthis%n\");\n        visit(left);\n        printf(\"push hl%n\");\n        visit(right);\n        printf(\"pop de%n\");\n        printf(opmap[opr]);\n        printf(\"popthis%n\");\n        break;\n        case \"+\":case \"-\":\n        visit(right);\n        printf(\"push hl%n\");\n        visit(left);\n        printf(\"pop de%n\");\n        printf(opmap[opr]);\n        break;\n        default:\n        unsup(left, `Invalid op ${opr}`);\n    }\n}\n\\arithEq(n:Infix) {\n    let left:Expression=n.left;\n    let op:Token=n.op;\n    let right:Expression=n.right;\n    arith2(left, op.text.substring(0,op.text.length-1), right);\n    enter{lval:true} \\{\n        visit(left);\n    };\n    /*if (left.type!==\"varAccess\") {\n        return unsup(`Only field${op.text}=... is supported `);\n    }\n    let a=annotation(left);\n    switch (a.scopeInfo.type) {\n        case \"field\":\n\n        break;\n        case \"class\":\n        unsup(n,`Cannot assign to class '${name}'.`);\n        break;\n        default:\n        unsup(n,`${name}: Unsupported variable type '${a.scopeInfo.type}'`);\n    }\n\n    \n    let s=`\n        macro getfld, n\n        local ad\n        ld (ad-1),a\n        ld hl,(n)\n        ad:\n        endm\n\n        macro setfld, n\n        local ad\n        ld (ad-1),a\n        ld (n),hl\n        ad:\n        endm\n        `;*/\n}\n\\assign(n:Infix){\n    let left:Expression=n.left;\n    let op:Token=n.op;\n    let right:Expression=n.right;\n    visit(right);\n    enter{lval:true} \\{\n        visit(left);\n    };\n}\n\\v_reservedConst(n:Token) {\n    if (n.text===\"true\" || n.text===\"false\") {\n        printf(\"ld hl,%s%n\",n.text);\n    } else if (n.text===\"this\") {\n        printf(\"ld h,a%n\");\n        printf(\"ld l,0%n\");\n        return;\n    } else {\n        unsup(n,`Unsupported reserved word '${n.text}'.`);\n    }\n}\n\\v_number(n:Token){\n    printf(\"ld hl,%d%n\",n.text-0);\n}\n\\globalLabel(n:String) {\n    return `gbl_${n.replace(/\\$/g,\"\")}`;\n}\n\\v_varAccess(n:VarAccess){\n    let name:Token=n.name;\n    let a=annotation(n);\n    switch (a.scopeInfo.type) {\n        case \"field\":\n        if (lval) {\n            printf(\"setfld .%s%n\",name);\n        } else{\n            printf(\"getfld .%s%n\",name);\n        }\n        break;\n        case \"class\":\n        if (lval) {\n            unsup(n,`Cannot assign to class '${name}'.`);\n        } else{\n            printf(\"ld hl,%s%n\",name);\n        }\n        break;\n        case \"global\":\n        globals[name.text]=1;\n        if (lval) {\n            printf(\"ld (%s),hl%n\",globalLabel(name.text));\n        } else {\n            printf(\"ld hl,(%s)%n\",globalLabel(name.text));\n        }\n        break;\n        default:\n        unsup(n,`${name.text}: Unsupported variable type '${a.scopeInfo.type}'`);\n    }\n}\n\\genSym() {\n    return \"lb\"+(symSeq++);\n}\n\\v_compound(n:Compound) {\n    for (let s of n.stmts) {\n        visit(s);\n    }\n}\n\\v_while(n:While){\n    let cond:Expression=n.cond;\n    let loop:Stmt=n.loop;\n    let sh=genSym();\n    let se=genSym();\n    printf(\"%s:%n\",sh);\n    visit(cond);\n    printf(\"jpf %s%n\",se);\n    enter{closestBrk:se} \\{\n        visit(loop);\n    };\n    printf(\"jp %s%n\",sh);\n    printf(\"%s:%n\",se);\n}\n\n\\v_break(n) {\n    if (!closestBrk) {\n        unsup(n,\"break outside loop \")   ;\n    }\n    if (closestBrk===\"BREAK\") {\n        printf(\"break%n\");\n    } else {\n        printf(\"jp %s%n\",closestBrk);\n    }\n}\n\\v_for(n:For){\n    let inFor:ForHead=n.inFor;\n    let loop:Stmt=n.loop;\n    if (inFor.type===\"normalFor\") {\n        let h:NormalFor=inFor;\n        let init:Stmt=h.init;\n        let cond:Expression?=h.cond;\n        let next:Expression?=h.next;\n        let sh=genSym();\n        let se=genSym();\n        visit(init);\n        printf(\"%s:%n\",sh);\n        visit(cond);\n        printf(\"jpf %s%n\",se);\n        enter{closestBrk: se} \\{\n            visit(loop);\n        };\n        visit(next);\n        printf(\"jp %s%n\",sh);\n        printf(\"%s:%n\",se);\n    } else {\n        let h:Forin=inFor;\n        let isVar:Token?=h.isVar;\n        let vars:Token[]=h.vars;\n        let inof:Token=h.inof;\n        let set:Expression=h.set;\n        let klass=isAll(set);\n        if (!klass) {\n            unsup(set,\"only 'for (e of all(Class))' is allowed \");\n            return;\n        }\n        //foreach.a, Class,st,en,nx\n        let range=mem.objRange(klass);\n        let nx=genSym();\n        printf(\"foreach.a %s, %d, %d, %s%{\",klass.shortName,range[0],range[1],nx);\n        let va=annotation(vars[0]);\n        //print (va);\n        if (va.scopeInfo.type===\"field\") {\n            printf(\"setfld .%s%n\", vars[0].text);\n        } else {\n            unsup(vars,\"only field supports\");\n        }\n        enter{closestBrk:\"BREAK\"} \\{\n            visit(loop);\n        };\n        printf(\"continue%n\");\n        printf(\"%}%s:%n\",nx);\n        printf(\"getthis 0%n\");\n    }\n}\n\\isAll(set:Expression) {\n    if (set.type!==\"postfix\") return false;\n    let p:Postfix=set;\n    if (p.op.type!==\"call\") return false;\n    let c:Call=p.op;\n    if (p.left.type!==\"varAccess\") return false;\n    let a:VarAccess=p.left;\n    if (a.name.text!==\"all\") return false;\n    if (c.args.length!==1) return false;\n    let k=c.args[0];\n    return k.type===\"varAccess\" && isClassConst(k);\n}\n\\v_if(n:If){\n    let cond:Expression=n.cond;\n    let then:Stmt=n.then;\n    let _else:Stmt?=n._else;\n    let send=genSym();\n    let sels=genSym();\n    visit(cond);\n    printf(\"jpf %s%n\",sels);\n    visit(then);\n    printf(\"jp %s%n\",send);\n    printf(\"%s:%n\",sels);\n    if (_else) visit(_else);\n    printf(\"%s:%n\",send);\n}\n\n\n\\v_varDecl(n:VarDecl){\n    let name:Token=n.name;\n    let typeDecl:TypeDecl?=n.typeDecl;\n    let value:Expression?=n.value;\n    let a=annotation(n);\n    if (!a.varInMain) {\n        unsup(n,\"Local Variables are not yet supported.\");\n        return;\n    }\n    if (!value) return;\n    visit(value);\n    printf(\"setfld .%s%n\",name);\n}\n\\v_varsDecl(n:VarsDecl){\n    let decls:VarDecl[]=n.decls;\n    if (n.declPrefix.text!==\"var\") {\n        unsup(n,\"let or const are not supported.\");\n    }\n    for(let d of decls){\n        visit(d);\n    }\n}\n\\rangeToAd(r) {\n    return `th.start+${r}*th.size`;\n}\n\\isClassConst(klass:VarAccess) {\n    let a=annotation(klass);\n    if (a.scopeInfo.type!==\"class\") {\n        return null;\n    }\n    return a.scopeInfo.info;\n}\n\\v_newExpr(n:NewExpr){\n    let klass:VarAccess=n.klass;\n    let params:Call?=n.params;\n    if (params.args.length==1 && params.args[0].type==\"objlit\") {\n        let objlit:Objlit=params.args[0];\n        let elems:JsonElem[]=objlit.elems;\n        for (let elem of elems) {\n            if (elem.value) {\n                visit(elem.value);\n            } else {\n                printf(\"getfld .%s%n\",elem.key);\n            }\n            printf(\"new.arg .%s%n\",elem.key);\n        }\n        let resKlass=isClassConst(klass);\n        if (!resKlass) {\n            unsup(klass , `Only class name is allowed`);\n        }\n        let range=mem.objRange(resKlass);\n        printf(\"new %s,%d,%s,%s%n\",\n        klass.name, elems.length,\n        range[0], range[1]);\n        //rangeToAd(range[0]),rangeToAd(range[1]));\n        return;\n    }\n    unsup(n,`'new ${klass.name}' can be followed by only {key:value...}`);\n}\n","extends null;\nincludes TNode;\nlet args:Expression[];\n","extends null;\nincludes TNode;\nlet subscript:Expression;\n","extends null;\nincludes TNode,Stmt;\nlet brk:Token;\n","extends null;\nincludes TNode;\nlet args:Expression[];\n","extends null;\nincludes TNode;\nlet value:Expression;\nlet stmts:Stmt[];\n","extends null;\nincludes TNode;\nlet name:Token;\nlet stmt:Stmt;\n","extends null;\nincludes TNode,Stmt;\nlet stmts:Stmt[];\n","extends null;\nincludes TNode,Stmt;\nlet cont:Token;\n","extends null;\nincludes TNode;\nlet stmts:Stmt[];\n","extends null;\nincludes TNode,Stmt;\nlet loop:Stmt;\nlet cond:Expression;\n","extends null;\nincludes TNode,Stmt;\nlet expr:Expression;\n","extends null;\nincludes TNode;\nlet superclassName:Token;\n","extends null;\nincludes TNode;\nlet stmt:Stmt;\n","extends null;\nincludes TNode,Stmt;\nlet inFor:ForHead;\nlet loop:Stmt;\n","extends ForHead;\r\nincludes TNode;\r\nlet isVar:Token?;\r\nlet vars:Token[];\r\nlet inof:Token;\r\nlet set:Expression;\r\n\r\n","extends null;\nincludes TNode,Stmt;\nlet head:FuncDeclHead;\nlet body:Compound;\n","extends null;\nincludes TNode;\nlet _nowait:Token?;\nlet ftype:Token?;\nlet name:Token;\nlet setter:SetterDecl?;\nlet params:ParamDecls?;\nlet rtype:TypeDecl?;\n","extends null;\nincludes TNode,ObjOrFuncArg;\nlet obj:FuncExpr;\n","extends null;\nincludes TNode;\nlet name:Token?;\nlet params:ParamDecls?;\n","extends null;\nincludes TNode,Stmt;\nlet cond:Expression;\nlet then:Stmt;\nlet _else:Stmt?;\n","extends null;\nincludes TNode,Stmt;\nlet then:Stmt;\nlet _else:Stmt?;\n","extends null;\nincludes TNode;\nlet includeClassNames:Token[];\n","extends null;\nincludes Expression;\nlet left:Expression;\nlet op:Token;\nlet right:Expression;\n","extends null;\nincludes TNode;\nlet key:Token;\nlet value:Expression?;\n","extends null;\nincludes TNode;\nlet name:Token;\n","extends null;\nincludes TNode,Stmt;\nlet name:Token;\n","extends ForHead;\r\nincludes TNode;\r\nlet init:Stmt;\r\nlet cond:Expression?;\r\nlet next:Expression?;\r\n","extends null;\nincludes TNode,ObjOrFuncArg;\nlet obj:Objlit;\n","extends null;\nincludes TNode;\nlet name:Token;\nlet typeDecl:TypeDecl?;\n","extends null;\nincludes TNode;\nlet params:ParamDecl[];\n","extends null;\nincludes Expression;\nlet left:Expression;\nlet op:TNode;\n","extends null;\nincludes Expression;\nlet op:Token;\nlet right:Expression;\n","extends null;\nincludes TNode;\nlet ext:Extends?;\nlet incl:Includes?;\nlet stmts:Stmt[];\n","extends null;\nincludes TNode,Stmt;\nlet value:Expression?;\n","extends null;\nincludes TNode;\nlet args:Expression[];\n","extends null;\nincludes TNode;\nlet value:ParamDecl;\n","extends null;\nincludes TNode,Stmt;\nlet value:Expression;\nlet cases:Case[];\nlet defs:Default?;\n","extends null;\nincludes TNode,Stmt;\nlet ex:Expression;\n","extends null;\nincludes Expression;\nlet left:Expression;\nlet op1:Token;\nlet mid:Expression;\nlet op2:Token;\nlet right:Expression;\n","extends RSprite;\nlet x,y,p,c;\n//\\getkey(){}\n/*\\new(params){\n    super(params);\n    if (!$exporter){\n        $exporter=new GenAsm;\n    }\n}*/\n\\die(){super.die();}\n\\crashTo(e){return super.crashTo(e);}\n\\update(){super.update();}\n\\updateEx(n){super.updateEx(n);}\n\\onUpdate (){}\n\\screenOut(){\n    return x<0 || x>$MScreen.width<<spr_scale || \n    y<0 || y>$MScreen.height<<spr_scale;\n}\n","/*\r\nFor details:\r\nhttps://github.com/hoge1e3/reTrONew\r\n*/\r\n\r\nnew Player{\r\nx:32, y: 32, p:16, c:8, pc:3};\r\nnew Player{\r\nx:480, y: 300, p:17, c:7, pc:4};\r\nnew Player{\r\nx:32, y: 32, p:18, c:3, pc:5};\r\nnew Player{\r\nx:480, y: 300, p:19, c:10, pc:6};\r\n\r\np=0; c=15;\r\nwhile(true) {\r\n    if (rnd(40)==0) {\r\n        x=rnd(32);\r\n        y=rnd(24);\r\n        c=map_get(x,y);\r\n        if (c>=3 && c<=6) {\r\n            new PBullet{x:x*16+8,y:y*16+8,pc:c};\r\n        }\r\n    }\r\n    update();\r\n}\r\n","p=7;\r\nvar vx=0;\r\nvar vy=0;\r\nvar pc,bc;\r\nif (pc==3) bc=8;\r\nif (pc==4) bc=7;\r\nif (pc==5) bc=3;\r\nif (pc==6) bc=10;\r\n// TODO target is declaed in Actor, \r\n// if forgot to var, error will happen in assembler\r\n\r\nfor (var target of all(Player)) {\r\n    if (target.pc==pc) break;\r\n}\r\nvar i=0;\r\nwhile (true) {\r\n    if (i%20==0) c=15; else c=bc;\r\n    if (crashTo(target)) break;\r\n    i++;\r\n    update();\r\n}\r\ni=0-1;\r\nwhile (true) {\r\n    map_setAt(x,y,pc);\r\n    if (target.defeatBy) {\r\n        die();\r\n    }\r\n    var foe=crashTo(Player);\r\n    if (foe && foe.pc!=pc) {\r\n        foe.defeatBy=pc;\r\n        die();\r\n    }\r\n    if (screenOut()) die();\r\n    if (target.x>x)vx+=1; \r\n    if (target.x<x)vx-=1; \r\n    if (target.y>y)vy+=1; \r\n    if (target.y<y)vy-=1; \r\n    x+=vx;\r\n    y+=vy;\r\n    update();\r\n}\r\n","var tx=rnd(512);\r\nvar ty=rnd(384);\r\nvar pc;\r\nwhile(true) {\r\n    map_setAt(x,y,pc);\r\n    if (c==8) {\r\n        if (getkey(\"left\")) x-=3;\r\n        if (getkey(\"right\")) x+=3;\r\n        if (getkey(\"up\")) y-=3;\r\n        if (getkey(\"down\")) y+=3;\r\n    } else {\r\n        if (x>tx) x-=3;\r\n        if (x<tx) x+=3;\r\n        if (y>ty) y-=3;\r\n        if (y<ty) y+=3;\r\n        if (rnd(20)==0){\r\n            tx=rnd(512);\r\n            ty=rnd(384);\r\n            for (var s of all(PBullet)) {\r\n                if (s.pc==pc && s.i>=0) {\r\n                    tx=s.x;\r\n                    ty=s.y;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    var defeatBy;\r\n    if (defeatBy){\r\n        var i=0;\r\n        while(i<120) {\r\n            x+=8;\r\n            update();\r\n            x-=8;\r\n            update();\r\n            i+=1;\r\n        }\r\n        defeatBy=0;\r\n        i=0;\r\n    }\r\n    update();\r\n    // somewhat\r\n}\r\n","extends null;\nincludes TNode,Elem;\nlet head:FuncExprHead;\nlet body:Compound;\n","extends null;\nincludes TNode,Elem;\nlet klass:VarAccess;\nlet params:Call?;\n","extends null;\nincludes TNode,Elem;\nlet elems:JsonElem[];\n","extends null;\nincludes TNode,Elem;\nlet expr:Expression;\n","extends null;\nincludes TNode,Elem;\nlet name:Token?;\nlet params:Scall;\n","extends null;\nincludes Elem;\nlet text:String;\n","extends null;\nincludes TNode,Elem;\nlet name:Token;\n","extends null;\nincludes TNode,Elem;\nlet elems:Expression[];\n"]}